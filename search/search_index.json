{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"( \uff3e\u2200\uff3e )\uff0f","text":""},{"location":"friends/","title":"\u670b\u53cb\u4eec","text":"<p>Tips</p> <p>\u56e0\u4e3a\u521a\u5efa\u8d77\u6765\uff0c\u5c31\u53ea\u80fd\u5148\u5355\u65b9\u9762\u6dfb\u52a0\u4e86 awa</p> <p>\u6837\u5f0f\u6765\u6e90\u4e8e\u9e64\u7fd4\u4e07\u91cc\u8001\u5e08</p> \u9e64\u7fd4\u4e07\u91cc\u7684\u7b14\u8bb0\u672c \u4f1f\u5927\uff0c\u65e0\u9700\u591a\u8a00 FFox's Notes \u6478\u4e00\u6478\uff0c\u5c31\u4f1a\u88ab\u5403\u6389\u6570\u7406\u57fa\u7840\uff01 HobbitQia \u7684\u7b14\u8bb0\u672c \u5c5e\u4e8e\u6bcf\u4e00\u4e2a\u4eba\u7684\u5b66\u4e1a\u5bfc\u5e08"},{"location":"CS/","title":"\u8ba1\u7b97\u673a\u79d1\u5b66","text":"<p> \u7ea6 34 \u4e2a\u5b57 </p> <p>\u7b80\u4ecb</p> <p>\u6d89\u53ca\u5e73\u65f6\u4e0a\u8bfe\u65f6\u968f\u8bb0\u548c\u4e0b\u8bfe\u540e\u6574\u7406\u7684\u7b14\u8bb0\uff0c\u5f88\u591a\u8bfe\u7a0b\u4e0d\u592a\u5b8c\u6574\u3002</p>"},{"location":"CS/Compilers/","title":"\u7f16\u8bd1\u539f\u7406","text":"<p> \u7ea6 141 \u4e2a\u5b57 </p> <p>\u7b80\u4ecb</p> <p>\u6d59\u6c5f\u5927\u5b66\u300a\u7f16\u8bd1\u539f\u7406\u300b\u8bfe\u7a0b\u7b14\u8bb0\uff0c\u6388\u8bfe\u8001\u5e08\u4e3a\u59da\u57f9\u68ee\u8001\u5e08\u3002</p>"},{"location":"CS/Compilers/#_2","title":"\u5206\u6570\u7ec4\u6210","text":"<ul> <li>\u8bfe\u540e\u4f5c\u4e1a 10%</li> <li>\u968f\u5802\u6d4b\u8bd5 10%</li> <li>\u671f\u4e2d\u8003\u8bd5 15%</li> <li>\u8bfe\u7a0b\u8bbe\u8ba1 25%</li> <li>\u671f\u672b\u8003\u8bd5 40%</li> </ul> <p>\u5176\u4e2d\uff0c\u671f\u672b\u8003\u8bd5\u4f4e\u4e8e 40\uff0c\u5219\u603b\u8bc4\u4e0d\u53ca\u683c\u3002</p>"},{"location":"CS/Compilers/#_3","title":"\u5b9e\u9a8c\u5b89\u6392","text":"<p>\u9664 Lab 0 \u4e3a\u4e2a\u4eba\u5b9e\u9a8c\u5916\uff0c\u5176\u4ed6\u4e3a\u5c0f\u7ec4\u5b9e\u9a8c\uff0c\u6bcf\u7ec4 2-3 \u4eba\u3002\u6574\u4f53\u5b9e\u9a8c\u5b89\u6392\u5982\u4e0b\uff1a</p> <ul> <li>Lab 0: Setup &amp; Warm-up, just for fun</li> <li>Lab 1: Lexer &amp; Parser</li> <li>Lab 2: Semantic Analysis</li> <li>Lab 3: Accipit IR Generation</li> <li>Lab 4: Emit RISC-V Assembly</li> </ul> <p>\u6b64\u5916\uff0c\u53ef\u80fd\u6709\u96f6\u6563\u7684 Bonus \u5b9e\u9a8c\u3002</p>"},{"location":"CS/Compilers/ch1/","title":"\u6982\u8ff0","text":"<p> \u7ea6 1991 \u4e2a\u5b57  28 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 7 \u5206\u949f</p>"},{"location":"CS/Compilers/ch1/#_2","title":"\u7f16\u7a0b\u8bed\u8a00\u53ca\u8bbe\u8ba1","text":""},{"location":"CS/Compilers/ch1/#_3","title":"\u7f16\u7a0b\u8bed\u8a00","text":"<p>\u5b9a\u4e49\uff1aA programming language is a notation for describing computations to people and to machines.</p> <p>\u5e38\u89c1\u7684\u7f16\u7a0b\u8bed\u8a00\u6cdb\u578b\u5305\u62ec\uff1a</p> <ul> <li>\u8fc7\u7a0b\u5f0f (Procedural): C, Fortran, Pascal</li> <li>\u51fd\u6570\u5f0f (Functional): Lisp/Scheme, Haskell</li> <li>\u903b\u8f91\u5f0f (Logic): Prolog, Datlog</li> <li>\u9762\u5411\u5bf9\u8c61 (Object-Oriented): Smalltalk, Java, Eiffel</li> </ul>"},{"location":"CS/Compilers/ch1/#_4","title":"\u8bed\u6cd5\u4e0e\u8bed\u4e49","text":"<ul> <li>\u8bed\u6cd5 (Syntax): \u8bed\u8a00\u7684\u7ed3\u6784\u548c\u5f62\u5f0f\uff0c\u6307\u660e\u4ec0\u4e48\u662f\u5408\u6cd5\u7684\u7a0b\u5e8f</li> <li>\u8bed\u4e49 (Semantics): \u8bed\u8a00\u7684\u542b\u4e49\uff0c\u6307\u660e\u5408\u6cd5\u7a0b\u5e8f\u7684\u884c\u4e3a<ul> <li>\u64cd\u4f5c\u8bed\u4e49\uff1a\u7a0b\u5e8f\u7684\u6267\u884c\u8fc7\u7a0b</li> <li>\u516c\u7406\u8bed\u4e49\uff1a\u7a0b\u5e8f\u7684\u63a8\u5bfc\u8fc7\u7a0b</li> <li>\u6307\u79f0\u8bed\u4e49\uff1a\u7a0b\u5e8f\u8ba1\u7b97\u7684\u51fd\u6570</li> </ul> </li> </ul>"},{"location":"CS/Compilers/ch1/#_5","title":"\u7f16\u8bd1\u5668\u53ca\u5176\u5f62\u5f0f","text":""},{"location":"CS/Compilers/ch1/#_6","title":"\u7f16\u8bd1\u5668","text":"<p>\u7f16\u8bd1\u5668\u662f\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u8bfb\u5165\u6e90\u7a0b\u5e8f\u5e76\u5c06\u5176\u7ffb\u8bd1\u6210\u8bed\u4e49\u7b49\u4ef7\u7684\u76ee\u6807\u7a0b\u5e8f\uff08Translate from the syntax of one language to another but preserve the semantics\uff09</p> <p></p> <p>\u5176\u4e2d\uff0c\u76ee\u6807\u7a0b\u5e8f\u5982\u679c\u662f\u53ef\u6267\u884c\u7684\u673a\u5668\u8bed\u8a00\u7a0b\u5e8f\uff0c\u5219\u53ef\u4ee5\u88ab\u7528\u6237\u8c03\u7528\uff0c\u5904\u7406\u8f93\u5165\u5e76\u4ea7\u751f\u8f93\u51fa\uff1b\u5982\u679c\u662f\u6c47\u7f16\u8bed\u8a00\u7a0b\u5e8f\uff0c\u5219\u987b\u7ecf\u6c47\u7f16\u5668\u6c47\u7f16\u540e\u65b9\u53ef\u6267\u884c\u3002\u82e5\u4ece\u72ed\u4e49\u770b\u6765\uff1a</p> <ul> <li>\u6e90\u7a0b\u5e8f\uff1a\u7528\u67d0\u79cd\u9ad8\u7ea7\u8bed\u8a00\u7f16\u5199</li> <li>\u76ee\u6807\u7a0b\u5e8f\uff1a\u7528\u76ee\u6807\u4ee3\u7801\u6216\u673a\u5668\u8bed\u8a00\u7f16\u5199</li> <li>\u8fc7\u7a0b\u5982\uff1aC++ =&gt; \u673a\u5668\u8bed\u8a00</li> </ul> <p>\u82e5\u4ece\u5e7f\u4e49\u6765\u770b\uff1a</p> <ul> <li>\u76ee\u6807\u7a0b\u5e8f\uff1a\u4ecb\u4e8e\u6e90\u8bed\u8a00\u548c\u673a\u5668\u8bed\u8a00\u4e4b\u95f4\u7684\u201c\u4e2d\u95f4\u8bed\u8a00\u201d\uff0c\u53ef\u4ee5\u662f\u53e6\u4e00\u79cd\u9ad8\u7ea7\u8bed\u8a00</li> <li>\u8fc7\u7a0b\u5982\uff1aC++ =&gt; C\uff0cPascal =&gt; C</li> </ul> C \u8bed\u8a00\u7f16\u8bd1\u5668 <p></p> Clang \u7f16\u8bd1\u5668\u7684\u4f18\u5316\u7b49\u7ea7 \u4f18\u5316\u7b49\u7ea7 \u7b80\u8981\u8bf4\u660e -Ofast \u5728 -O3 \u7ea7\u522b\u7684\u57fa\u7840\u4e0a\uff0c\u5f00\u542f\u66f4\u591a\u6fc0\u8fdb\u4f18\u5316\u9879\uff0c\u8be5\u4f18\u5316\u7b49\u7ea7\u4e0d\u4f1a\u4e25\u683c\u9075\u5faa\u8bed\u8a00\u6807\u51c6 -O3 \u5728 -O2 \u7ea7\u522b\u7684\u57fa\u7840\u4e0a\uff0c\u5f00\u542f\u4e86\u66f4\u591a\u7684\u9ad8\u7ea7\u4f18\u5316\u9879\uff0c\u4ee5\u7f16\u8bd1\u65f6\u95f4\u3001\u4ee3\u7801\u5927\u5c0f\u3001\u5185\u5b58\u4e3a\u4ee3\u4ef7\u83b7\u53d6\u66f4\u9ad8\u7684\u6027\u80fd -Os \u5728 -O2 \u7ea7\u522b\u7684\u57fa\u7840\u4e0a\uff0c\u5f00\u542f\u964d\u4f4e\u751f\u6210\u4ee3\u7801\u4f53\u91cf\u7684\u4f18\u5316 -O2 \u5f00\u542f\u4e86\u5927\u591a\u6570\u4e2d\u7ea7\u4f18\u5316\uff0c\u4f1a\u6539\u5584\u7f16\u8bd1\u65f6\u95f4\u5f00\u9500\u548c\u6700\u7ec8\u751f\u6210\u4ee3\u7801\u6027\u80fd -O/-O1 \u4f18\u5316\u6548\u679c\u4ecb\u4e8e -O0 \u548c -O2 \u4e4b\u95f4 -O0 \u9ed8\u8ba4\u4f18\u5316\u7b49\u7ea7\uff0c\u5373\u4e0d\u5f00\u542f\u7f16\u8bd1\u4f18\u5316\uff0c\u53ea\u5c1d\u8bd5\u51cf\u5c11\u7f16\u8bd1\u65f6\u95f4"},{"location":"CS/Compilers/ch1/#_7","title":"\u89e3\u91ca\u5668","text":"<p>\u89e3\u91ca\uff1a\u5728\u4e00\u79cd\u8bed\u8a00\u7684\u673a\u5668\u4e0a\uff0c\u76f4\u63a5\u6267\u884c\u7528\u53e6\u4e00\u79cd\u8bed\u8a00\u5199\u7684\u7a0b\u5e8f\u7684\u8fc7\u7a0b\uff0c\u79f0\u4e3a\u89e3\u91ca</p> <p>\u89e3\u91ca\u5668\uff1a\u63a5\u53d7\u7528\u6237\u63d0\u4f9b\u7684\u8f93\u5165\uff0c\u8fdb\u884c\u89e3\u91ca\u5e76\u9010\u53e5\u6267\u884c</p> <p></p>"},{"location":"CS/Compilers/ch1/#_8","title":"\u7f16\u8bd1\u5668\u7684\u5176\u4ed6\u5f62\u5f0f","text":"<ul> <li>\u4ea4\u53c9\u7f16\u8bd1\u5668 (Cross Compiler)<ul> <li>\u5728\u4e00\u4e2a\u5e73\u53f0\u4e0a\u751f\u6210\u53e6\u4e00\u4e2a\u5e73\u53f0\u4e0a\u7684\u4ee3\u7801\uff0c\u5982 PC -&gt; <code>arm-linux-gcc</code> -&gt; ARM</li> </ul> </li> <li>\u589e\u91cf\u7f16\u8bd1\u5668 (Incremental Compiler)<ul> <li>\u589e\u91cf\u5730\u7f16\u8bd1\u6e90\u7a0b\u5e8f\uff08\u53ea\u7f16\u8bd1\u4fee\u6539\u7684\u90e8\u5206\uff09</li> </ul> </li> <li>\u5373\u65f6\u7f16\u8bd1\u5668 (Just-in-time Compiler)<ul> <li>\u5728\u8fd0\u884c\u65f6\u5bf9 IR \u4e2d\u6bcf\u4e2a\u88ab\u8c03\u7528\u7684\u65b9\u6cd5\u8fdb\u884c\u7f16\u8bd1\uff0c\u5f97\u5230\u76ee\u6807\u673a\u5668\u7684\u672c\u5730\u4ee3\u7801\uff0c\u5982 Java VM \u4e2d\u7684\u5373\u65f6\u7f16\u8bd1\u5668</li> </ul> </li> <li>\u9884\u5148\u7f16\u8bd1\u5668 (Ahead-of-time Compiler)<ul> <li>\u5728\u7a0b\u5e8f\u6267\u884c\u524d\u5c06 IR \u7ffb\u8bd1\u6210\u672c\u5730\u7801\uff0c\u5982 ART \u4e2d\u7684 AOT</li> </ul> </li> </ul> Java \u865a\u62df\u673a"},{"location":"CS/Compilers/ch1/#_9","title":"\u7f16\u8bd1\u5668\u7684\u4f5c\u7528","text":"<ul> <li>\u63d0\u9ad8\u5f00\u53d1\u6548\u7387<ul> <li>\u5c4f\u853d\u786c\u4ef6\u67b6\u6784\u4fe1\u606f</li> <li>\u652f\u6301\u9ad8\u5c42\u7f16\u7a0b\u62bd\u8c61</li> </ul> </li> <li>\u63d0\u9ad8\u8fd0\u884c\u6027\u80fd<ul> <li>\u786c\u4ef6\u65e0\u5173\u7f16\u8bd1\u4f18\u5316</li> <li>\u786c\u4ef6\u76f8\u5173\u7f16\u8bd1\u4f18\u5316</li> </ul> </li> <li>\u5b89\u5168\u53ef\u9760<ul> <li>\u7c7b\u578b\u5b89\u5168</li> <li>\u529f\u80fd\u6b63\u786e</li> <li>\u4fe1\u606f\u6d41\u5b89\u5168</li> </ul> </li> </ul> \u7f16\u8bd1\u4f18\u5316 <p>\u5e38\u89c1\u7684\u7f16\u8bd1\u4f18\u5316\u601d\u8def  \u4f18\u5316\u53ef\u80fd\u5728\u4e0d\u540c\u7684\u9636\u6bb5\u8fdb\u884c\uff0c\u5177\u4f53\u7684\u5206\u7c7b\u5305\u62ec\uff1a\u5c40\u90e8/\u5168\u5c40/\u8fc7\u7a0b\u95f4\uff0c\u673a\u5668\u65e0\u5173/\u53ca\u5176\u76f8\u5173</p> \u4e00\u4e9b LLVM \u7f16\u8bd1\u4e4b\u5916\u7684\u5de5\u5177\u94fe \u5de5\u5177 \u4f5c\u7528 Clang static analyzer \u9759\u6001\u4ee3\u7801\u67e5\u9519 llcov \u52a8\u6001\u76d1\u63a7\u8986\u76d6\u7387 AddressSanitizer (ASan) \u52a8\u6001\u76d1\u63a7\u5b89\u5168\u95ee\u9898 DataflowSanitizer (DFSan) \u52a8\u6001\u6c61\u70b9\u5206\u6790 libFuzzer \u6a21\u7cca\u6d4b\u8bd5 LLDB \u8c03\u8bd5\u5668"},{"location":"CS/Compilers/ch1/#_10","title":"\u7f16\u8bd1\u5668\u7684\u9636\u6bb5","text":""},{"location":"CS/Compilers/ch1/#_11","title":"\u7f16\u8bd1\u8fc7\u7a0b\u6982\u89c8","text":"<p>\u4e00\u4e2a\u8fc7\u7a0b\u5212\u5206\u7684\u793a\u4f8b\u5982\u4e0b\uff1a</p> <p></p> <p>\u8fc7\u7a0b\u4e2d\u6d89\u53ca\u5230\uff1a</p> <ul> <li>\u7b26\u53f7\u8868 (Symbol Table)<ul> <li>\u8bb0\u5f55\u7a0b\u5e8f\u4e2d\u53d8\u91cf\u3001\u51fd\u6570\u7b49\u5bf9\u8c61\u7684\u5404\u79cd\u5c5e\u6027</li> <li>\u7b26\u53f7\u8868\u53ef\u7531\u7f16\u8bd1\u5668\u7684\u5404\u4e2a\u6b65\u9aa4\u4f7f\u7528</li> </ul> </li> <li>\u9519\u8bef\u5904\u7406 (Error Handler)<ul> <li>\u8bed\u6cd5\u9519\u8bef: \u5982\u7b97\u672f\u8868\u8fbe\u5f0f\u7684\u62ec\u53f7\u4e0d\u914d\u5bf9</li> <li>\u8bed\u4e49\u9519\u8bef: \u5982\u7b97\u7b26\u4f5c\u7528\u4e8e\u4e0d\u76f8\u5bb9\u7684\u8fd0\u7b97\u5bf9\u8c61</li> </ul> </li> </ul> <p>\u5173\u4e8e\u8fc7\u7a0b\u5212\u5206</p> <p>\u524d\u4e2d\u540e\u7aef\u7684\u5212\u5206\u4e0d\u4e00\u5b9a\u548c\u4e0a\u56fe\u8fc7\u7a0b\u5b8c\u5168\u4e00\u81f4</p>"},{"location":"CS/Compilers/ch1/#_12","title":"\u4e00\u4e9b\u6bd4\u8f83\u91cd\u8981\u7684\u8fc7\u7a0b","text":""},{"location":"CS/Compilers/ch1/#_13","title":"\u8bcd\u6cd5\u5206\u6790","text":"<p>\u8bcd\u6cd5\u5206\u6790\uff08Lexing/Scanning/Lexical Analysis\uff09\uff1a\u5c06\u7a0b\u5e8f\u5b57\u7b26\u6d41\u5206\u89e3\u4e3a token \u5e8f\u5217\u7684\u8fc7\u7a0b</p> <p></p> \u793a\u4f8b <p>\u4ee5\u5982\u4e0b\u7a0b\u5e8f\u4e3a\u4f8b <pre><code>int main() {\n    float initial, rate, position;\n\n    initial = 2;\n    rate = 0.1;\n    position = initial + rate * 60;\n\n    return 0;\n}\n</code></pre> \u53ef\u4ee5\u4f7f\u7528 <pre><code>clang -cc1 -dump-tokens a.c\n</code></pre> \u67e5\u770b\u8bcd\u6cd5\u5206\u6790\u7684\u7ed3\u679c <pre><code>int 'int'        [StartOfLine]  Loc=&lt;a.c:1:1&gt;\nidentifier 'main'        [LeadingSpace] Loc=&lt;a.c:1:5&gt;\nl_paren '('             Loc=&lt;a.c:1:9&gt;\nr_paren ')'             Loc=&lt;a.c:1:10&gt;\nl_brace '{'      [LeadingSpace] Loc=&lt;a.c:1:12&gt;\nfloat 'float'    [StartOfLine] [LeadingSpace]   Loc=&lt;a.c:2:5&gt;\nidentifier 'initial'     [LeadingSpace] Loc=&lt;a.c:2:11&gt;\ncomma ','               Loc=&lt;a.c:2:18&gt;\nidentifier 'rate'        [LeadingSpace] Loc=&lt;a.c:2:20&gt;\ncomma ','               Loc=&lt;a.c:2:24&gt;\nidentifier 'position'    [LeadingSpace] Loc=&lt;a.c:2:26&gt;\nsemi ';'                Loc=&lt;a.c:2:34&gt;\nidentifier 'initial'     [StartOfLine] [LeadingSpace]   Loc=&lt;a.c:4:5&gt;\nequal '='        [LeadingSpace] Loc=&lt;a.c:4:13&gt;\nnumeric_constant '2'     [LeadingSpace] Loc=&lt;a.c:4:15&gt;\nsemi ';'                Loc=&lt;a.c:4:16&gt;\nidentifier 'rate'        [StartOfLine] [LeadingSpace]   Loc=&lt;a.c:5:5&gt;\nequal '='        [LeadingSpace] Loc=&lt;a.c:5:10&gt;\nnumeric_constant '0.1'   [LeadingSpace] Loc=&lt;a.c:5:12&gt;\nsemi ';'                Loc=&lt;a.c:5:15&gt;\nidentifier 'position'    [StartOfLine] [LeadingSpace]   Loc=&lt;a.c:6:5&gt;\nequal '='        [LeadingSpace] Loc=&lt;a.c:6:14&gt;\nidentifier 'initial'     [LeadingSpace] Loc=&lt;a.c:6:16&gt;\nplus '+'         [LeadingSpace] Loc=&lt;a.c:6:24&gt;\nidentifier 'rate'        [LeadingSpace] Loc=&lt;a.c:6:26&gt;\nstar '*'         [LeadingSpace] Loc=&lt;a.c:6:31&gt;\nnumeric_constant '60'    [LeadingSpace] Loc=&lt;a.c:6:33&gt;\nsemi ';'                Loc=&lt;a.c:6:35&gt;\nreturn 'return'  [StartOfLine] [LeadingSpace]   Loc=&lt;a.c:8:5&gt;\nnumeric_constant '0'     [LeadingSpace] Loc=&lt;a.c:8:12&gt;\nsemi ';'                Loc=&lt;a.c:8:13&gt;\nr_brace '}'      [StartOfLine]  Loc=&lt;a.c:9:1&gt;\neof ''          Loc=&lt;a.c:9:2&gt;\n</code></pre></p>"},{"location":"CS/Compilers/ch1/#_14","title":"\u8bed\u6cd5\u5206\u6790","text":"<p>\u8bed\u6cd5\u5206\u6790\uff08Parsing/Syntax Analysis\uff09: \u5c06\u8bb0\u53f7\u5e8f\u5217\u89e3\u6790\u4e3a\u8bed\u6cd5\u7ed3\u6784\uff08\u4e00\u822c\u4e3a\u62bd\u8c61\u8bed\u6cd5\u6811 AST\uff09\u7684\u8fc7\u7a0b</p> <p></p> \u793a\u4f8b <p>\u540c\u4e0a\u4e00\u793a\u4f8b\u4ee3\u7801\uff0c\u53ef\u4ee5\u4f7f\u7528 <pre><code>clang -cc1 -ast-dump a.c\n</code></pre> \u67e5\u770b\u8bcd\u6cd5\u5206\u6790\u7684\u7ed3\u679c <pre><code>TranslationUnitDecl 0x5a0edc6d2588 &lt;&lt;invalid sloc&gt;&gt; &lt;invalid sloc&gt;\n|-TypedefDecl 0x5a0edc6d2db0 &lt;&lt;invalid sloc&gt;&gt; &lt;invalid sloc&gt; implicit __int128_t '__int128'\n| `-BuiltinType 0x5a0edc6d2b50 '__int128'\n|-TypedefDecl 0x5a0edc6d2e20 &lt;&lt;invalid sloc&gt;&gt; &lt;invalid sloc&gt; implicit __uint128_t 'unsigned __int128'\n| `-BuiltinType 0x5a0edc6d2b70 'unsigned __int128'\n|-TypedefDecl 0x5a0edc6d3128 &lt;&lt;invalid sloc&gt;&gt; &lt;invalid sloc&gt; implicit __NSConstantString 'struct __NSConstantString_tag'\n| `-RecordType 0x5a0edc6d2f00 'struct __NSConstantString_tag'\n|   `-Record 0x5a0edc6d2e78 '__NSConstantString_tag'\n|-TypedefDecl 0x5a0edc6d31c0 &lt;&lt;invalid sloc&gt;&gt; &lt;invalid sloc&gt; implicit __builtin_ms_va_list 'char *'\n| `-PointerType 0x5a0edc6d3180 'char *'\n|   `-BuiltinType 0x5a0edc6d2630 'char'\n|-TypedefDecl 0x5a0edc6d34b8 &lt;&lt;invalid sloc&gt;&gt; &lt;invalid sloc&gt; implicit __builtin_va_list 'struct __va_list_tag[1]'\n| `-ConstantArrayType 0x5a0edc6d3460 'struct __va_list_tag[1]' 1 \n|   `-RecordType 0x5a0edc6d32a0 'struct __va_list_tag'\n|     `-Record 0x5a0edc6d3218 '__va_list_tag'\n`-FunctionDecl 0x5a0edc72a940 &lt;a.c:1:1, line:9:1&gt; line:1:5 main 'int ()'\n`-CompoundStmt 0x5a0edc72ae30 &lt;col:12, line:9:1&gt;\n    |-DeclStmt 0x5a0edc72abd0 &lt;line:2:5, col:34&gt;\n    | |-VarDecl 0x5a0edc72aa48 &lt;col:5, col:11&gt; col:11 used initial 'float'\n    | |-VarDecl 0x5a0edc72aac8 &lt;col:5, col:20&gt; col:20 used rate 'float'\n    | `-VarDecl 0x5a0edc72ab48 &lt;col:5, col:26&gt; col:26 used position 'float'\n    |-BinaryOperator 0x5a0edc72ac40 &lt;line:4:5, col:15&gt; 'float' '='\n    | |-DeclRefExpr 0x5a0edc72abe8 &lt;col:5&gt; 'float' lvalue Var 0x5a0edc72aa48 'initial' 'float'\n    | `-ImplicitCastExpr 0x5a0edc72ac28 &lt;col:15&gt; 'float' &lt;IntegralToFloating&gt;\n    |   `-IntegerLiteral 0x5a0edc72ac08 &lt;col:15&gt; 'int' 2\n    |-BinaryOperator 0x5a0edc72acb8 &lt;line:5:5, col:12&gt; 'float' '='\n    | |-DeclRefExpr 0x5a0edc72ac60 &lt;col:5&gt; 'float' lvalue Var 0x5a0edc72aac8 'rate' 'float'\n    | `-ImplicitCastExpr 0x5a0edc72aca0 &lt;col:12&gt; 'float' &lt;FloatingCast&gt;\n    |   `-FloatingLiteral 0x5a0edc72ac80 &lt;col:12&gt; 'double' 1.000000e-01\n    |-BinaryOperator 0x5a0edc72ade0 &lt;line:6:5, col:33&gt; 'float' '='\n    | |-DeclRefExpr 0x5a0edc72acd8 &lt;col:5&gt; 'float' lvalue Var 0x5a0edc72ab48 'position' 'float'\n    | `-BinaryOperator 0x5a0edc72adc0 &lt;col:16, col:33&gt; 'float' '+'\n    |   |-ImplicitCastExpr 0x5a0edc72ada8 &lt;col:16&gt; 'float' &lt;LValueToRValue&gt;\n    |   | `-DeclRefExpr 0x5a0edc72acf8 &lt;col:16&gt; 'float' lvalue Var 0x5a0edc72aa48 'initial' 'float'\n    |   `-BinaryOperator 0x5a0edc72ad88 &lt;col:26, col:33&gt; 'float' '*'\n    |     |-ImplicitCastExpr 0x5a0edc72ad58 &lt;col:26&gt; 'float' &lt;LValueToRValue&gt;\n    |     | `-DeclRefExpr 0x5a0edc72ad18 &lt;col:26&gt; 'float' lvalue Var 0x5a0edc72aac8 'rate' 'float'\n    |     `-ImplicitCastExpr 0x5a0edc72ad70 &lt;col:33&gt; 'float' &lt;IntegralToFloating&gt;\n    |       `-IntegerLiteral 0x5a0edc72ad38 &lt;col:33&gt; 'int' 60\n    `-ReturnStmt 0x5a0edc72ae20 &lt;line:8:5, col:12&gt;\n    `-IntegerLiteral 0x5a0edc72ae00 &lt;col:12&gt; 'int' 0\n</code></pre></p>"},{"location":"CS/Compilers/ch1/#_15","title":"\u8bed\u4e49\u5206\u6790","text":"<p>\u8bed\u4e49\u5206\u6790\uff08Semantic Analysis\uff09\uff1a\u6536\u96c6\u6807\u8bc6\u7b26\u7684\u7c7b\u578b\u7b49\u5c5e\u6027\u4fe1\u606f\u7684\u8fc7\u7a0b</p> <p></p>"},{"location":"CS/Compilers/ch1/#_16","title":"\u4e2d\u95f4\u4ee3\u7801\u751f\u6210","text":"<p>\u4e2d\u95f4\u4ee3\u7801/\u4e2d\u95f4\u8868\u793a\uff08IR\uff09\uff1a\u6e90\u8bed\u8a00\u4e0e\u76ee\u6807\u8bed\u8a00\u4e4b\u95f4\u7684\u6865\u6881</p> <p></p> \u793a\u4f8b <p>\u540c\u4e0a\u4e00\u793a\u4f8b\u4ee3\u7801\uff0c\u53ef\u4ee5\u4f7f\u7528 <pre><code>clang -cc1 a.c -emit-llvm -o a.ll\n</code></pre> \u67e5\u770b\u8bcd\u6cd5\u5206\u6790\u7684\u7ed3\u679c <pre><code>; ModuleID = 'a.c'\nsource_filename = \"a.c\"\ntarget datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n; Function Attrs: noinline nounwind optnone\ndefine dso_local i32 @main() #0 {\nentry:\n  %retval = alloca i32, align 4\n  %initial = alloca float, align 4\n  %rate = alloca float, align 4\n  %position = alloca float, align 4\n  store i32 0, ptr %retval, align 4\n  store float 2.000000e+00, ptr %initial, align 4\n  store float 0x3FB99999A0000000, ptr %rate, align 4\n  %0 = load float, ptr %initial, align 4\n  %1 = load float, ptr %rate, align 4\n  %mul = fmul float %1, 6.000000e+01\n  %add = fadd float %0, %mul\n  store float %add, ptr %position, align 4\n  ret i32 0\n}\n\nattributes #0 = { noinline nounwind optnone \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-features\"=\"+cx8,+mmx,+sse,+sse2,+x87\" }\n\n!llvm.module.flags = !{!0}\n!llvm.ident = !{!1}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{!\"clang version 16.0.6\"}\n</code></pre></p>"},{"location":"CS/Compilers/ch1/#_17","title":"\u57fa\u4e8e\u4e2d\u95f4\u8868\u793a\u7684\u4f18\u5316","text":"<p>\u57fa\u4e8e\u4e2d\u95f4\u8868\u793a\u7684\u4f18\u5316\uff1a\u57fa\u4e8e\u4e2d\u95f4\u8868\u793a\u8fdb\u884c\u5206\u6790\u4e0e\u53d8\u6362\uff0c\u4ee5\u964d\u4f4e\u6267\u884c\u65f6\u95f4\u3001\u51cf\u5c11\u8d44\u6e90\u6d88\u8017\u7b49</p> <p></p> \u793a\u4f8b <p>\u4f7f\u7528 -O3 \u4f18\u5316 <pre><code>clang -cc1 -S a.c -emit-llvm -O3 -o a.ll\n</code></pre> \u4e0e\u4e0a\u4e00\u793a\u4f8b\u5bf9\u6bd4\uff0c\u5f97\u5230\u7684\u7ed3\u679c\u660e\u663e\u66f4\u77ed <pre><code>; ModuleID = 'a.c'\nsource_filename = \"a.c\"\ntarget datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none)\ndefine dso_local i32 @main() local_unnamed_addr #0 {\nentry:\nret i32 0\n}\n\nattributes #0 = { mustprogress nofree norecurse nosync nounwind willreturn memory(none) \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-features\"=\"+cx8,+mmx,+sse,+sse2,+x87\" }\n\n!llvm.module.flags = !{!0}\n!llvm.ident = !{!1}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{!\"clang version 16.0.6\"}\n</code></pre></p>"},{"location":"CS/Compilers/ch1/#_18","title":"\u76ee\u6807\u4ee3\u7801\u751f\u6210","text":"<p>\u76ee\u6807\u4ee3\u7801\u751f\u6210\uff1a\u628a\u4e2d\u95f4\u8868\u793a\u5f62\u5f0f\u7ffb\u8bd1\u5230\u76ee\u6807\u8bed\u8a00\u7684\u8fc7\u7a0b\uff0c\u53ef\u6d89\u53ca\u6307\u4ee4\u9009\u62e9\u3001\u5bc4\u5b58\u5668\u5206\u914d\u3001\u6307\u4ee4\u8c03\u5ea6\u8fc7\u7a0b</p> <p></p> \u793a\u4f8b <p>\u4f7f\u7528 <pre><code>llc a.ll -o a.s\n</code></pre> \u8fdb\u884c\u4ee3\u7801\u751f\u6210 <pre><code>    .text\n    .file   \"a.c\"\n    .globl  main                        # -- Begin function main\n    .p2align    4, 0x90\n    .type   main,@function\nmain:                                   # @main\n# %bb.0:                                # %entry\n    xorl    %eax, %eax\n    retq\n.Lfunc_end0:\n    .size   main, .Lfunc_end0-main\n                                        # -- End function\n    .ident  \"clang version 16.0.6\"\n    .section    \".note.GNU-stack\",\"\",@progbits\n</code></pre></p>"},{"location":"CS/Compilers/ch1/#tiger","title":"\u6574\u4f53\u793a\u4f8b\uff1aTiger \u7f16\u8bd1\u5668","text":"<ul> <li>AST (\u62bd\u8c61\u8bed\u6cd5\u6811): \u8bed\u6cd5\u5206\u6790 + \"Parsing Actions\" \u751f\u6210</li> <li>IR Tree: \u8bed\u4e49\u5206\u6790\u540e\u6309\u4e00\u5b9a\u89c4\u5219\u751f\u6210\uff08\u6811\u578b\u4e2d\u95f4\u8868\u793a\uff09</li> <li>Canonicalized IR Tree: \u5bf9 IR Tree \u505a\u53d8\u6362\u6240\u5f97\uff08\u65b9\u4fbf\u751f\u6210\u6c47\u7f16\uff09</li> <li>Assem: \u6307\u4ee4\u9009\u62e9\u5668\u751f\u6210\uff08\u4e00\u79cd\u7279\u6b8a\u7684\u6c47\u7f16\uff09</li> <li>CFG (Control Flow Graph, \u63a7\u5236\u6d41\u56fe): \u65b9\u4fbf\u8fdb\u884c\u6570\u636e\u6d41\u5206\u6790<ul> <li>\u5982\u6d3b\u8dc3\u53d8\u91cf\u5206\u6790\uff08Liveness Analysis\uff09</li> </ul> </li> <li>Interference Graph: \u4ece\u6d3b\u8dc3\u53d8\u91cf\u5206\u6790\u7684\u7ed3\u679c\u6784\u9020\uff0c\u7528\u4e8e\u6307\u5bfc\u5bc4\u5b58\u5668\u5206\u914d</li> </ul>"},{"location":"CS/Compilers/ch1/#_19","title":"\u5176\u4ed6","text":"<p>\u63a8\u8350\u4e00\u4e2a\u73a9\u5177\uff1aCompiler Explorer</p>"},{"location":"CS/Compilers/ch2/","title":"\u8bcd\u6cd5\u5206\u6790","text":"<p> \u7ea6 4317 \u4e2a\u5b57  55 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 15 \u5206\u949f</p>"},{"location":"CS/Compilers/ch2/#_2","title":"\u6982\u8ff0","text":"<p>\u7a0b\u5e8f\u662f\u4ee5\u5b57\u7b26\u4e32\u7684\u5f62\u5f0f\u4f20\u9012\u7ed9\u7f16\u8bd1\u5668\u7684\uff0c\u8bcd\u6cd5\u5206\u6790\u7684\u4f5c\u7528\u5728\u4e8e\uff1a</p> <ul> <li>\u5c06\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u8bc6\u522b\u4e3a\u6709\u610f\u4e49\u7684\u5b57\u4e32</li> <li>\u8fc7\u6ee4\u6ce8\u91ca\u3001\u7a7a\u683c</li> <li>...</li> </ul> <p>\u57fa\u4e8e\u6b64\uff0c\u6709\u4e24\u4e2a\u57fa\u672c\u6982\u5ff5\uff1a</p> <ul> <li>Token</li> <li>\u7c7b\u4f3c\u4e8e\u82f1\u8bed\u4e2d\u7684 noun, verb, adjective, ...</li> <li>\u5728\u7f16\u7a0b\u8bed\u8a00\u4e2d keyword, identifier, operator, ...</li> <li>Lexeme</li> <li>\u662f Token \u96c6\u5408\u4e2d\u7684\u4e00\u4e2a\u5143\u7d20\uff0c\u7c7b\u4f3c\u4e8e <code>if</code> <code>else</code></li> <li>\u53ef\u4ee5\u79f0\u4e3a Token \u7684\u4e00\u4e2a\u5b9e\u4f8b</li> </ul> \u793a\u4f8b\uff1aToken \u4e0e Lexeme <p>\u5bf9\u4e8e\u5982\u4e0b\u7684\u7a0b\u5e8f\uff1a <pre><code>if (i == j) {\n    printf(\"i equals j\");\n} else {\n    num = 5;\n}\n</code></pre> \u6211\u4eec\u4ece\u4e2d\u770b\u51fa</p> Token Lexeme Token \u7684\u975e\u5f62\u5f0f\u5316\u5b9a\u4e49 if if \u5b57\u7b26 i, f else else \u5b57\u7b26 e, l, s, e relation &lt;, &lt;=, =, ... &lt; \u6216 &lt;= \u6216 = \u6216 ... id sum, count, D5 \u7531\u5b57\u6bcd\u5f00\u5934\u7684\u5b57\u6bcd\u6570\u5b57\u4e32 number 5, 3.1, 2.8e12 \u4efb\u4f55\u6570\u503c\u5e38\u719f \u793a\u4f8b\uff1a\u5b57\u7b26\u6d41 -&gt; Token \u6d41 <p>\u5bf9\u4e8e\u5982\u4e0b\u7684\u7a0b\u5e8f\uff1a <pre><code>float match0(char *s) /* find a zero */\n{\n    if (!strncmp(s, \"0.0\", 3))\n    return 0.;\n}\n</code></pre> \u5176\u4e2d\u7684 Token \u6d41\u4e3a\uff1a <pre><code>FLOAT       ID(match0) LPAREN CHAR   STAR ID(s)\nRPAREN      LBRACE     IF     LPAREN BANG\nID(strncmp) LPAREN     ID(s)  COMMA  STRING(0.0)\nCOMMA       NUM(3)     RPAREN RPAREN RETURN\nREAL(0.0)   SEMI       RBRACE EOF\n</code></pre></p> <p>\u5bf9\u4e8e\u8bcd\u6cd5\u5206\u6790\u5668\u7684\u6784\u9020\uff0c\u53ef\u4ee5\u901a\u8fc7\u5b9a\u4e49\u58f0\u660e\u5f0f\u7684\u89c4\u8303\uff0c\u7136\u540e\u4f7f\u7528\u5de5\u5177\u81ea\u52a8\u751f\u6210\u3002</p> <p></p> <p>\u53ef\u4ee5\u770b\u4f5c\uff1a <pre><code>Program = Specification + Implementation\n              \"What\"          \"How\"\n</code></pre></p>"},{"location":"CS/Compilers/ch2/#_3","title":"\u6b63\u5219\u8868\u8fbe\u5f0f","text":"\u5982\u4f55\u5f62\u5f0f\u5316\u5730\u63cf\u8ff0\u8bcd\u6cd5\u5206\u6790\u5668\u7684\u89c4\u8303\uff1f <p>\u8fd9\u5c31\u5f15\u5165\u4e86\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u6982\u5ff5\u3002</p>"},{"location":"CS/Compilers/ch2/#_4","title":"\u524d\u7f6e\u77e5\u8bc6","text":""},{"location":"CS/Compilers/ch2/#_5","title":"\u5b57\u6bcd\u8868\u548c\u4e32","text":"<p>\u5b57\u6bcd\u8868\uff08alphabet\uff09\u662f\u7b26\u53f7\u7684\u6709\u9650\u96c6\u5408</p> <ul> <li>\u5305\u62ec\u5b57\u6bcd\u3001\u6570\u5b57\u3001\u6807\u70b9\u7b26\u53f7\u7b49</li> </ul> <p>\u4e32\uff08string, word\uff09\u662f\u5b57\u6bcd\u8868\u4e2d\u7b26\u53f7\u7684\u6709\u9650\u5e8f\u5217</p> <ul> <li>\u4e32 \\(s\\) \u7684\u957f\u5ea6\uff0c\u901a\u5e38\u8bb0\u4f5c \\(|s|\\)\uff0c\u6307\u4ee3 \\(s\\) \u4e2d\u7b26\u53f7\u7684\u4e2a\u6570</li> <li>\u7a7a\u4e32\u662f\u957f\u5ea6\u4e3a 0 \u7684\u4e32\uff0c\u901a\u5e38\u8bb0\u4f5c \\(\\epsilon\\)</li> </ul> <p>\u6709\u5982\u4e0b\u7684\u8fd0\u7b97\u5b9a\u4e49\uff1a</p> <ul> <li>\u8fde\u63a5\uff08concatenation\uff09<ul> <li>\\(y\\) \u9644\u52a0\u5230 \\(x\\) \u540e\u5f62\u6210\u7684\u4e32 \\(xy\\)</li> <li>\u4f8b\u5982\uff0c\\(x = abc\\), \\(y = def\\)\uff0c\u5219 \\(xy = abcdef\\)</li> <li>\u7a7a\u4e32\u662f\u8fde\u63a5\u8fd0\u7b97\u7684\u5355\u4f4d\u5143\uff0c\u5373\u5bf9\u4e8e\u4efb\u4f55\u4e32 \\(s\\) \u90fd\u6709 \\(\u03b5s = s\u03b5 = s\\)</li> </ul> </li> <li>\u5e42\uff08power\uff09<ul> <li>\\(s^n\\) \u662f \\(n\\) \u4e2a \\(s\\) \u7684\u8fde\u63a5</li> <li>\\(s^n=\\left\\{\\begin{matrix} &amp;\u03b5 &amp;, n=0 \\\\ &amp;s^{n-1}s &amp;, n \\ge 1 \\end{matrix}\\right.\\)</li> <li>\u4f8b\u5982\uff0c\\(s = abc\\)\uff0c\u5219 \\(s^3 = abcabcabc\\)</li> </ul> </li> </ul>"},{"location":"CS/Compilers/ch2/#_6","title":"\u8bed\u8a00","text":"<p>\u8bed\u8a00\uff08language\uff09\uff1a\u5b57\u6bcd\u8868 \\(\\Sigma\\) \u4e0a\u7684\u4e00\u4e2a\u4e32\u96c6</p> <ul> <li>\u4f8b\u5982\uff0c\\(\\{\\epsilon,0,00,000,...\\}\\), \\(\\{s\\}\\), \\(\\emptyset\\)</li> <li>\u5c5e\u4e8e\u8bed\u8a00\u7684\u4e32\uff0c\u53ef\u4ee5\u79f0\u4e3a\u53e5\u5b50\uff08sentence\uff09</li> </ul> <p>\u8bed\u8a00\u7684\u8fd0\u7b97\uff1a</p> <ul> <li>\u5e76\uff08union\uff09<ul> <li>\\(L_1 \\cup L_2 = \\{s | s \\in L_1 \\text{ or } s \\in L_2\\}\\)</li> </ul> </li> <li>\u8fde\u63a5\uff08concatenation\uff09<ul> <li>\\(L_1L_2 = \\{xy | x \\in L_1 \\text{ and } y \\in L_2\\}\\)</li> </ul> </li> <li>\u5e42\uff08power\uff09<ul> <li>\\(L^n = \\left\\{\\begin{matrix} &amp;\\{\u03b5\\} &amp;, n=0 \\\\ &amp;L^{n-1}L &amp;, n \\ge 1 \\end{matrix}\\right.\\)</li> </ul> </li> <li>Kleene \u95ed\u5305\uff08Kleene closure\uff09<ul> <li>\\(L^* = \\bigcup_{i=0}^{\\infty}L^i\\)</li> </ul> </li> <li>\u6b63\u95ed\u5305\uff08positive closure\uff09<ul> <li>\\(L^+ = \\bigcup_{i=1}^{\\infty}L^i\\)</li> </ul> </li> </ul>"},{"location":"CS/Compilers/ch2/#_7","title":"\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u5b9a\u4e49","text":"<p>\u6b63\u5219\u8868\u8fbe\u5f0f\uff08Regular Expression, RE\uff09\u662f\u7528\u6765\u63cf\u8ff0\u3001\u5339\u914d\u6587\u4e2d\u5168\u90e8\u5339\u914d\u6307\u5b9a\u683c\u5f0f\u4e32\u7684\u8868\u8fbe\u5f0f\uff0c\u5982 \\(a\\) \u5339\u914d \\(a\\)\uff0c\\(a|b\\) \u5339\u914d \\(a\\) \u6216 \\(b\\)</p> <p>\u6b63\u5219\u8868\u8fbe\u5f0f \\(r\\) \u5b9a\u4e49\u6b63\u5219\u8bed\u8a00\uff0c\u8bb0\u4e3a \\(L(r)\\)\uff0c\u6709\u5982\u4e0b\u6027\u8d28\uff1a</p> <ul> <li>\\(\\epsilon\\) \u662f\u4e00\u4e2a RE\uff0c\\(L(\\epsilon) = \\{\\epsilon\\}\\)</li> <li>\u5982\u679c \\(a \\in \\Sigma\\)\uff0c\u5219 \\(a\\) \u662f\u4e00\u4e2a RE\uff0c\\(L(a) = \\{a\\}\\)</li> <li>\u5047\u8bbe \\(x\\) \u548c \\(y\\) \u90fd\u662f RE\uff0c\u5206\u522b\u8868\u793a\u8bed\u8a00 \\(L(x)\\) \u548c \\(L(y)\\)<ul> <li>\\(x|y\\) \u662f\u4e00\u4e2a RE\uff0c\\(L(x|y) = L(x) \\cup L(y)\\)</li> <li>\\(xy\\) \u662f\u4e00\u4e2a RE\uff0c\\(L(xy) = L(x)L(y)\\)</li> <li>\\(x^*\\) \u662f\u4e00\u4e2a RE\uff0c\\(L(x^*) = (L(x))^*\\)</li> <li>\\((x)\\) \u662f\u4e00\u4e2a RE\uff0c\\(L((x)) = L(x)\\)</li> </ul> </li> <li>\u4f18\u5148\u7ea7\uff1a\\(() &gt; * &gt; xy &gt; |\\)</li> </ul>"},{"location":"CS/Compilers/ch2/#_8","title":"\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u5b9a\u5f8b","text":"<p>\u4e00\u4e9b\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u5b9a\u5f8b\u5982\u4e0b\uff1a</p> \u5b9a\u5f8b \u63cf\u8ff0 \\(r\\text{\\textbar}s = s\\text{\\textbar}r\\) \\(\\text{\\textbar}\\) \u662f\u53ef\u4ea4\u6362\u7684 \\((r\\text{\\textbar}s)\\text{\\textbar}t = r\\text{\\textbar}(s\\text{\\textbar}t)\\) \\(\\text{\\textbar}\\) \u662f\u53ef\u7ed3\u5408\u7684 \\(r(st) = (rs)t\\) \u8fde\u63a5\u662f\u53ef\u7ed3\u5408\u7684 \\(r(s\\text{\\textbar}t) = rs\\text{\\textbar}rt\\)\\((s\\text{\\textbar}t)r = sr\\text{\\textbar}tr\\) \u8fde\u63a5\u5bf9 \\(\\text{\\textbar}\\) \u662f\u53ef\u5206\u914d\u7684 \\(\\epsilon r = r\\epsilon = r\\) \\(\\epsilon\\) \u662f\u8fde\u63a5\u7684\u5355\u4f4d\u5143 \\(r^* = (r \\text{\\textbar} \\epsilon)^*\\) \u95ed\u5305\u4e2d\u4e00\u5b9a\u5305\u542b \\(\\epsilon\\) \\((r^*)^* = r^*\\) \u95ed\u5305\u7684\u95ed\u5305\u7b49\u4e8e\u95ed\u5305"},{"location":"CS/Compilers/ch2/#_9","title":"\u6b63\u5219\u5b9a\u4e49","text":"<p>\u533a\u5206\u4e8e\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u5b9a\u4e49</p> <p>\u5bf9\u4e8e\u6bd4\u8f83\u590d\u6742\u7684\u8bed\u8a00\uff0c\u4e3a\u4e86\u6784\u9020\u7b80\u6d01\u7684\u6b63\u5219\u5f0f\uff0c\u53ef\u5148\u6784\u9020\u7b80\u5355\u7684\u6b63\u5219\u5f0f\uff0c\u518d\u5c06\u8fd9\u4e9b\u6b63\u5219\u5f0f\u7ec4\u5408\u8d77\u6765\uff0c\u5f62\u6210\u4e00\u4e2a\u4e0e\u8be5\u8bed\u8a00\u5339\u914d\u7684\u6b63\u5219\u5e8f\u5217</p> <p>\u6b63\u5219\u5b9a\u4e49\u662f\u5177\u6709\u5982\u4e0b\u5f62\u5f0f\u7684\u5b9a\u4e49\u5e8f\u5217\uff1a</p> \\[ \\begin{gather*} d_1 \\rightarrow r_1 \\\\ d_2 \\rightarrow r_2 \\\\ \\vdots \\\\ d_n \\rightarrow r_n \\end{gather*} \\] <p>\u5176\u4e2d\uff1a</p> <ul> <li>\u6bcf\u4e2a \\(d_i\\) \u7684\u540d\u5b57\u90fd\u4e0d\u76f8\u540c</li> <li>\u6bcf\u4e2a \\(r_i\\) \u90fd\u662f \\(\\Sigma = \\cup \\{d_1, d_2, ..., d_{i-1}\\}\\) \u4e0a\u7684\u6b63\u5219\u5f0f</li> </ul> \u793a\u4f8b\uff1aC \u8bed\u8a00\u7684\u6807\u8bc6\u7b26 <p>\u5bf9\u4e8e\u5982\u4e0b\u7684\u6b63\u5219\u5b9a\u4e49\uff1a</p> \\[ \\begin{align*} &amp;digit &amp;\\rightarrow \\quad &amp;0|1|2|\\ldots|9 \\\\ &amp;letter\\_ &amp;\\rightarrow \\quad &amp;a|b|c|\\ldots|z|A|B|C|\\ldots|Z|\\_ \\\\ &amp;id &amp;\\rightarrow \\quad &amp;letter\\_(letter\\_|digit)^* \\end{align*} \\] <p>\u5176\u4e2d\uff0c\\(digit\\) \u8868\u793a\u6570\u5b57\uff0c\\(letter\\_\\) \u8868\u793a\u5b57\u6bcd\u548c\u4e0b\u5212\u7ebf\uff0c\\(id\\) \u8868\u793a\u6807\u8bc6\u7b26\u3002\u4e5f\u53ef\u4ee5\u7b80\u5199\u4e3a\uff1a</p> \\[ \\begin{align*} &amp;digit &amp;\\rightarrow \\quad &amp;[0\\text{-}9] \\\\ &amp;letter\\_ &amp;\\rightarrow \\quad &amp;[a\\text{-}zA\\text{-}Z\\_] \\\\ &amp;id &amp;\\rightarrow \\quad &amp;letter\\_(letter\\_|digit)^* \\end{align*} \\]"},{"location":"CS/Compilers/ch2/#_10","title":"\u8bcd\u6cd5\u5206\u6790\u7684\u89c4\u7ea6","text":"<p>\u6b63\u5219\u8868\u8fbe\u5f0f\u662f\u8bcd\u6cd5\u5206\u6790\u7684\u89c4\u7ea6\uff08Specification\uff09\uff0c\u662f\u5b57\u7b26\u6d41\u5230 Token-lexeme \u5bf9\u7684\u8fc7\u7a0b\uff0c\u5927\u4f53\u4e0a\u53ef\u4ee5\u5206\u4e3a</p> <ol> <li>\u9009\u62e9\u4e00\u7cfb\u5217 Tokens</li> </ol> <ul> <li>\u5982 Number, Identifier, Keyword, ...</li> </ul> <ol> <li>\u4e3a\u6bcf\u4e2a Token \u7684 Lexemes \u5b9a\u4e49\u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f</li> </ol> <ul> <li>Number: \\(digit^+\\)</li> <li>Keyword: \\('if'|'else'|\\ldots\\)</li> <li>Identifier: \\(letter\\_(letter\\_|digit)^*\\)</li> <li>LeftPar: \\('('\\)</li> </ul>"},{"location":"CS/Compilers/ch2/#_11","title":"\u6b63\u5219\u89c4\u5219\u7684\u4e8c\u4e49\u6027","text":"<p>\u7ed9\u5b9a if8\uff0c\u8fd9\u662f\u5355\u4e2a Indentifier \u8fd8\u662f\u4e24\u4e2a Token\uff1aif \u548c 8\uff1f</p> <p>\u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\uff0c\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u7684\u89c4\u5219\u89e3\u51b3\uff1a</p> <ul> <li>\u6700\u957f\u5339\u914d\uff08Longest match\uff09<ul> <li>\u8f93\u5165\u53ef\u4ee5\u5339\u914d\u4efb\u4f55\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u4e2d\uff0c\u6700\u957f\u521d\u59cb\u5b50\u5b57\u7b26\u4e32\u5c06\u88ab\u89c6\u4e3a\u4e0b\u4e00\u4e2a\u6807\u8bb0</li> </ul> </li> <li>\u89c4\u5219\u4f18\u5148\uff08Rule priority\uff09<ul> <li>\u5bf9\u4e8e\u7279\u5b9a\u7684\u6700\u957f\u521d\u59cb\u5b50\u4e32\uff0c\u7b2c\u4e00\u4e2a\u53ef\u4ee5\u5339\u914d\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u786e\u5b9a\u5176\u6807\u8bb0\u7c7b\u578b</li> <li>\u8fd9\u610f\u5473\u7740\u4e66\u5199\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u987a\u5e8f\u5f88\u91cd\u8981</li> </ul> </li> </ul>"},{"location":"CS/Compilers/ch2/#_12","title":"\u6709\u7a77\u81ea\u52a8\u673a","text":"<p>\u8ba1\u7b97\u7406\u8bba</p> <p>\u5f88\u591a\u5185\u5bb9\u548c\u8ba1\u7b97\u7406\u8bba\u5f88\u50cf\uff0c\u4f46\u662f\u56e0\u4e3a<sub>~\u61d2</sub>~\u4e0d\u60f3\u6574\u7406\u4e86\uff0c\u53ef\u4ee5\u53c2\u8003 Tony \u8001\u5e08\u7684\u76f8\u5173\u7b14\u8bb0</p>"},{"location":"CS/Compilers/ch2/#_13","title":"\u5b9a\u4e49","text":"<p>Wikipedia</p> <p>A finite-state machine (FSM) or finite-state automaton (FSA, plural: automata), finite automaton, or simply a state machine, is a mathematical model of computation. It is an abstract machine that can be in exactly one of a finite number of states at any given time.</p> <p>\u5bf9\u4e8e\u4e00\u4e2a\u6709\u7a77\u81ea\u52a8\u673a\uff1a\\(M = (S, \\Sigma, move, s_0, F)\\)</p> <ul> <li>\\(S\\)\uff1a\u6709\u7a77\u72b6\u6001\u96c6</li> <li>\\(\\Sigma\\)\uff1a\u8f93\u5165\u5b57\u6bcd\u8868\uff08\u7b26\u53f7\u96c6\u5408\uff09</li> <li>\\(move(s, a)\\)\uff1a\u72b6\u6001\u8f6c\u79fb\u51fd\u6570\uff0c\\(s \\in S, a \\in \\Sigma\\)\uff0c\u8868\u793a\u4ece\u72b6\u6001 \\(s\\) \u8bfb\u5165\u8f93\u5165 \\(a\\) \u540e\u7684\u4e0b\u4e00\u4e2a\u72b6\u6001</li> <li>\\(s_0\\)\uff1a\u521d\u59cb\u72b6\u6001\uff08\u5f00\u59cb\u72b6\u6001\uff09\uff0c\\(s_0 \\in S\\)</li> <li>\\(F\\)\uff1a\u63a5\u53d7\u72b6\u6001\uff08\u7ec8\u6b62\u72b6\u6001\uff09\u96c6\u5408\uff0c\\(F \\subseteq S\\)</li> </ul> <p>\u6b64\u5916\uff0c\u8fd8\u6709\u4e00\u79cd\u7279\u6b8a\u7684\u72b6\u6001\u8f6c\u6362\u65b9\u5f0f \\(\\epsilon\\)-moves\uff0c\u6307 FA \u4e0d\u8bfb\u5165\u4efb\u4f55\u8f93\u5165\uff0c\u800c\u4ece\u4e00\u4e2a\u72b6\u6001\u8f6c\u79fb\u5230\u53e6\u4e00\u4e2a\u72b6\u6001</p>"},{"location":"CS/Compilers/ch2/#_14","title":"\u8868\u793a\u65b9\u5f0f","text":""},{"location":"CS/Compilers/ch2/#_15","title":"\u8f6c\u6362\u56fe","text":"<p>\u5728\u8f6c\u6362\u56fe\u4e2d\uff0c\u6709\u5982\u4e0b\u7684\u57fa\u672c\u5143\u7d20\uff1a</p> \u5143\u7d20 \u793a\u4f8b \u72b6\u6001 \u521d\u59cb\u72b6\u6001\uff08\u5f00\u59cb\u72b6\u6001\uff09 \u63a5\u53d7\u72b6\u6001\uff08\u7ec8\u6b62\u72b6\u6001\uff09 \u72b6\u6001\u8f6c\u79fb <p>\u5bf9\u4e8e \\(\\epsilon\\)-moves\uff0c\u53ef\u4ee5\u7528\u5982\u4e0b\u7684\u65b9\u5f0f\u8868\u793a\uff1a</p>"},{"location":"CS/Compilers/ch2/#_16","title":"\u8f6c\u6362\u8868","text":"<p>\u4ee5\u5982\u4e0b\u7684 FA \u4e3a\u4f8b\uff1a</p> <p>\u5bf9\u5e94\u7684\u8f6c\u6362\u8868\u4e3a\uff1a</p> \u72b6\u6001\\\u8f93\u5165 \\(a\\) \\(b\\) \\(0\\) \\(\\{0, 1\\}\\) \\(\\{0\\}\\) \\(1\\) \\(\\emptyset\\) \\(\\{2\\}\\) \\(2\\) \\(\\emptyset\\) \\(\\{3\\}\\) \\(3\\) \\(\\emptyset\\) \\(\\emptyset\\)"},{"location":"CS/Compilers/ch2/#_17","title":"\u63a5\u6536","text":""},{"location":"CS/Compilers/ch2/#_18","title":"\u6709\u7a77\u81ea\u52a8\u673a\u63a5\u6536\u7684\u4e32","text":"<p>\u7ed9\u5b9a\u8f93\u5165\u4e32 \\(x\\)\uff0c\u5982\u679c\u5b58\u5728\u4e00\u4e2a\u5bf9\u5e94\u4e8e\u4e32 \\(x\\) \u7684\u4ece\u521d\u59cb\u72b6\u6001\u5230\u67d0\u4e2a\u63a5\u53d7\u72b6\u6001\u7684\u8f6c\u6362\u5e8f\u5217\uff0c\u5219\u79f0\u4e32 \\(x\\) \u88ab\u8be5 FA \u63a5\u6536</p> <p>\u4f8b\u5982\u5bf9\u4e8e\u4e0a\u9762\u7684 FA\uff0c\u4e32 \\(ababb\\) \u88ab\u63a5\u6536\uff0c\u56e0\u4e3a\u5b58\u5728\u5982\u4e0b\u7684\u8f6c\u6362\u5e8f\u5217\uff1a</p> \\[ 0 \\xrightarrow{a} 0 \\xrightarrow{b} 0 \\xrightarrow{a} 1 \\xrightarrow{b} 2 \\xrightarrow{b} 3 \\]"},{"location":"CS/Compilers/ch2/#_19","title":"\u6709\u7a77\u81ea\u52a8\u673a\u63a5\u6536\u7684\u8bed\u8a00","text":"<p>\u7531\u4e00\u4e2a\u6709\u7a77\u81ea\u52a8\u673a \\(M\\) \u63a5\u6536\u7684\u6240\u6709\u4e32\u6784\u6210\u7684\u96c6\u5408\uff0c\u79f0\u4e3a\u8be5 FA \u63a5\u6536\uff08\u6216\u5b9a\u4e49\uff09\u7684\u8bed\u8a00\uff0c\u8bb0\u4e3a \\(L(M)\\)</p> <p>\u540c\u6837\u4ee5\u4e0a\u9762\u7684 FA \u4e3a\u4f8b\uff0c\u5176\u63a5\u6536\u7684\u8bed\u8a00\u4e3a\uff1a</p> \\[ L(M) = \\text{\u6240\u6709\u4ee5 } abb \\text{ \u7ed3\u5c3e\u7684\u5b57\u6bcd\u8868 } {a, b} \\text{ \u4e0a\u7684\u4e32} \\]"},{"location":"CS/Compilers/ch2/#_20","title":"\u5206\u7c7b","text":"<p>\u6839\u636e\u72b6\u6001\u8f6c\u6362\u65b9\u5f0f\u7684\u4e0d\u540c\uff0c\u53ef\u4ee5\u5206\u4e3a\uff1a</p> <ul> <li>\u975e\u786e\u5b9a\u6027\u6709\u7a77\u81ea\u52a8\u673a\uff08Nondeterministic finite automata, NFA\uff09<ul> <li>\\(move: S \\times (\\Sigma \\cup \\{\\epsilon\\}) \\rightarrow P(S)\\)</li> <li>\\(move(s, a)\\) \u8868\u793a\u4ece\u72b6\u6001 \\(s\\) \u51fa\u53d1\uff0c\u6cbf\u7740\u6807\u8bb0\u4e3a \\(a\\) \u7684\u8fb9\u6240\u80fd\u5230\u8fbe\u7684\u72b6\u6001\u96c6\u5408</li> <li>\u5728\u72b6\u6001 \\(s\\) \u65f6\u8bfb\u5165 \\(a\\)\uff0c\u53ef\u80fd\u8fc1\u79fb\u5230\u591a\u4e2a\u4e0d\u540c\u7684\u72b6\u6001</li> <li>\u53ef\u80fd\u6709 \\(\\epsilon\\)-moves\uff08\u4e0d\u8bfb\u5165\u4efb\u4f55\u8f93\u5165\u800c\u8fc1\u79fb\u5230\u5176\u4ed6\u72b6\u6001\uff09</li> </ul> </li> <li>\u786e\u5b9a\u6027\u6709\u7a77\u81ea\u52a8\u673a\uff08Deterministic finite automata, DFA\uff09<ul> <li>\\(move: S \\times \\Sigma \\rightarrow S\\)</li> <li>\\(\\delta(s, a)\\) \u8868\u793a\u4ece\u72b6\u6001 \\(s\\) \u51fa\u53d1\uff0c\u6cbf\u7740\u6807\u8bb0\u4e3a \\(a\\) \u7684\u8fb9\u6240\u80fd\u5230\u8fbe\u7684\u552f\u4e00\u72b6\u6001</li> <li>\u5728\u72b6\u6001 \\(s\\) \u65f6\u8bfb\u5165 \\(a\\)\uff0c\u53ef\u8fc1\u79fb\u5230\u7684\u72b6\u6001\u662f\u786e\u5b9a\u7684</li> <li>\u6ca1\u6709 \\(\\epsilon\\)-moves</li> </ul> </li> </ul>"},{"location":"CS/Compilers/ch2/#_21","title":"\u7b49\u4ef7\u6027","text":"<p>\u5bf9\u4e8e\u4e24\u4e2a FA\uff0c\u5982\u679c\u5b83\u4eec\u63a5\u6536\u7684\u8bed\u8a00\u76f8\u540c\uff0c\u5219\u79f0\u5b83\u4eec\u662f\u7b49\u4ef7\u7684</p> <p>\u7531\u8ba1\u7b97\u7406\u8bba\u7684\u77e5\u8bc6</p> <ul> <li>\u5bf9\u4e8e\u4efb\u4f55 NFA \\(N\\)\uff0c\u5b58\u5728\u5b9a\u4e49\u540c\u4e00\u8bed\u8a00\u7684 DFA \\(D\\)</li> <li>\u5bf9\u4e8e\u4efb\u4f55 DFA \\(D\\)\uff0c\u5b58\u5728\u5b9a\u4e49\u540c\u4e00\u8bed\u8a00\u7684 NFA \\(N\\)</li> <li>\u5bf9\u4e8e\u4efb\u4f55\u6b63\u5219\u8868\u8fbe\u5f0f RE \\(r\\)\uff0c\u5b58\u5728\u4e00\u4e2a\u5b9a\u4e49\u540c\u4e00\u8bed\u8a00\u7684 NFA \\(N\\)</li> </ul> <p>\u6545\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\uff1a</p> \\[ \\text{RE} \\Leftrightarrow \\text{NFA} \\Leftrightarrow \\text{DFA} \\] \u4f8b\u5b50 <p>NFA:   DFA:   RE: \\(r = (a|b)^*abb\\)</p>"},{"location":"CS/Compilers/ch2/#_22","title":"\u8bc6\u522b\u5b57\u7b26\u4e32","text":"\u5982\u4f55\u6784\u9020 FA\uff0c\u6765\u8bc6\u522b\u7528 RE \u523b\u753b\u7684 Token\uff1f <p>\u82e5\u4f7f\u7528 NFA\uff0c\u9700\u8981\u5bf9\u591a\u79cd\u8def\u5f84\u8fdb\u884c\u8bd5\u63a2\u548c\u56de\u6eaf\uff0c\u7c7b\u4f3c\u6811\u7684\u904d\u5386\uff0c\u6548\u7387\u8f83\u4f4e\uff0c\u6545\u4f7f\u7528 DFA</p> <p>\u57fa\u4e8e\u4ee5\u4e0b\u7684\u8f93\u5165\u3001\u8f93\u51fa\u4ee5\u53ca\u8f85\u52a9\u51fd\u6570\uff1a</p> <ul> <li>\u8f93\u5165<ul> <li>\u4ee5 EOF \u7ed3\u5c3e\u7684\u5b57\u7b26\u4e32 \\(x\\)</li> <li>DFA \\(D\\): \u5f00\u59cb\u72b6\u6001 \\(s_0\\)\uff0c\u63a5\u53d7\u72b6\u6001 \\(F\\)\uff0c\u72b6\u6001\u8f6c\u79fb\u51fd\u6570 \\(move\\)</li> </ul> </li> <li>\u8f93\u51fa<ul> <li>\u5982\u679c \\(D\\) \u63a5\u53d7 \\(x\\)\uff0c\u5219\u8f93\u51fa \"yes\"\uff0c\u5426\u5219\u8f93\u51fa \"no\"</li> </ul> </li> <li>\u8f85\u52a9\u51fd\u6570<ul> <li>\\(move(s, x)\\)\uff1a\u4ece\u72b6\u6001 \\(s\\) \u51fa\u53d1\uff0c\u8bfb\u5165 \\(x\\) \u540e\u7684\u4e0b\u4e00\u4e2a\u72b6\u6001</li> <li>\\(nextChar()\\)\uff1a\u8fd4\u56de \\(x\\) \u7684\u4e0b\u4e00\u4e2a\u5b57\u7b26</li> </ul> </li> </ul> <p>\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u5982\u4e0b\u7684\u4f2a\u4ee3\u7801\uff1a</p> <pre>\n\\begin{algorithm}\n\\caption{Identify String}\n\\begin{algorithmic}\n\\Function{IdentifyString}{$D, s_0, F, x$}\n    \\State $s \\gets s_0$\n    \\State $c \\gets nextChar()$\n    \\While{$c \\neq \\text{EOF}$}\n        \\State $s \\gets move(s, c)$\n        \\State $c \\gets nextChar()$\n    \\EndWhile\n    \\If{$s \\in F$}\n        \\State \\Return \"yes\"\n    \\Else\n        \\State \\Return \"no\"\n    \\EndIf\n\\EndFunction\n\\end{algorithmic}\n\\end{algorithm}\n</pre> \u8bc6\u522b\u8bed\u8a00 \\((a|b)^*abb\\) \u7684DFA <p>\u4ee5\u7b49\u4ef7\u6027\u793a\u4f8b\u4e2d\u7684 DFA \u4e3a\u4f8b\uff0c\u82e5\u8f93\u5165\u4e3a \\(ababb\\)\uff0c\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u7684\u8def\u5f84\u8bc6\u522b\uff1a $$ 0 \\xrightarrow{a} 1 \\xrightarrow{b} 2 \\xrightarrow{a} 1 \\xrightarrow{b} 2 \\xrightarrow{b} 3 $$</p>"},{"location":"CS/Compilers/ch2/#_23","title":"\u8bcd\u6cd5\u5206\u6790\u5668\u81ea\u52a8\u751f\u6210","text":"\u7ed9\u5b9a RE\uff0c\u5982\u4f55\u81ea\u52a8\u6784\u9020\u5176 DFA\uff1f <p>\u4ece RE \u76f4\u63a5\u6784\u9020 DFA \u6709\u65f6\u6bd4\u8f83\u56f0\u96be\uff0c\u6545\u53ef\u4ee5\u901a\u8fc7 NFA \u4f5c\u4e3a\u4e2d\u95f4\u6b65\u9aa4</p>"},{"location":"CS/Compilers/ch2/#re-nfa","title":"RE -&gt; NFA","text":"<p>\u95ee\u9898\u63cf\u8ff0</p> <p>\u8f93\u5165\uff1a\u6b63\u5219\u8868\u8fbe\u5f0f \\(r\\) \u8f93\u51fa\uff1a\u5b9a\u4e49 \\(r\\) \u7684 NFA \\(N(r)\\)</p> <p>Thompson \u7b97\u6cd5\uff1a\u57fa\u4e8e RE \u7684\u7ed3\u6784\u505a\u5f52\u7eb3</p> <ul> <li>\u5bf9\u57fa\u672c\u7684 RE \u8fdb\u884c\u76f4\u63a5\u6784\u9020\uff1a\\(\\epsilon, a\\)</li> <li>\u5bf9\u4e8e\u590d\u5408\u7684 RE \u8fdb\u884c\u9012\u5f52\u6784\u9020\uff1a\\(st, s|t, s^*\\)</li> <li>\u91cd\u8981\u7279\u70b9\uff1a\\(N(r)\\) \u4ec5\u6709\u4e00\u4e2a\u63a5\u53d7\u72b6\u6001\uff0c\u4e14\u6ca1\u6709\u51fa\u8fb9</li> </ul>"},{"location":"CS/Compilers/ch2/#thompson","title":"Thompson \u76f4\u63a5\u6784\u9020","text":"<ul> <li>\u8bc6\u522b\u6b63\u5219\u8868\u8fbe\u5f0f \\(\\epsilon\\) \u7684 NFA</li> </ul> <ul> <li>\u8bc6\u522b\u6b63\u5219\u8868\u8fbe\u5f0f \\(a\\) \u7684 NFA</li> </ul>"},{"location":"CS/Compilers/ch2/#thompson_1","title":"Thompson \u9012\u5f52\u6784\u9020","text":"<ul> <li>\u9009\u62e9 \\(s|t\\) \u7684 NFA</li> </ul> <ul> <li>\u8fde\u63a5 \\(st\\) \u7684 NFA</li> </ul> <ul> <li>\u95ed\u5305 \\(s^*\\) \u7684 NFA</li> </ul> RE -&gt; NFA <p>\u4ee5 RE \\(r = a(b|c)^*\\) \u4e3a\u4f8b\uff0c\u9010\u6b65\u8fdb\u884c\u6784\u9020\uff1a</p> <ul> <li>\\(a, b, c\\) </li> <li>\\(b|c\\) </li> <li>\\((b|c)^*\\) </li> <li>\\(a(b|c)^*\\) </li> </ul>"},{"location":"CS/Compilers/ch2/#nfa-dfa","title":"NFA -&gt; DFA","text":"<p>\u95ee\u9898\u63cf\u8ff0</p> <p>\u8f93\u5165\uff1aNFA \\(N\\) \u8f93\u51fa\uff1a\u7b49\u4ef7\u7684 DFA \\(D\\)</p> <p>\u91c7\u7528\u7684\u65b9\u6cd5\u4e3a\u5b50\u96c6\u6784\u9020\u6cd5\uff08Subset Construction\uff09\uff1a</p> <ul> <li>DFA \u7684\u6bcf\u4e2a\u72b6\u6001\u90fd\u5bf9\u5e94 NFA \u7684\u72b6\u6001\u5b50\u96c6 \\(A\\)</li> <li>DFA \u7684\u521d\u59cb\u72b6\u6001\u662f NFA \u7684\u521d\u59cb\u72b6\u6001\u7684 \\(\\epsilon\\)-\u95ed\u5305</li> <li>DFA \u7684\u4e00\u4e2a\u72b6\u6001\u5bf9\u5e94\u7684 NFA \u72b6\u6001\u5b50\u96c6\u4e2d\uff0c\u53ea\u8981\u6709\u4e00\u4e2a NFA \u7684\u63a5\u53d7\u72b6\u6001\uff0c\u5219\u8be5 DFA \u72b6\u6001\u662f\u63a5\u53d7\u72b6\u6001</li> <li>\u5bf9\u4e8e DFA \u7684\u6bcf\u4e2a\u72b6\u6001\u90fd\u5bf9\u5e94 NFA \u7684\u72b6\u6001\u5b50\u96c6 \\(A\\) \u4ee5\u53ca DFA \u7684\u6bcf\u4e2a\u8f93\u5165\u7b26\u53f7 \\(a\\)\uff0c\u8ba1\u7b97\u80fd\u5230\u8fbe\u7684 NFA \u72b6\u6001\u7684 \\(\\epsilon\\)-\u95ed\u5305 \\(S = \\epsilon-closure(move(A, a))\\)\u3002\u8be5 \\(S\\) \u9700\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\u4e4b\u4e00<ul> <li>\u5bf9\u5e94\u4e8e DFA \u7684\u4e00\u4e2a\u5df2\u6709\u72b6\u6001</li> <li>\u5bf9\u5e94\u4e8e DFA \u7684\u4e00\u4e2a\u65b0\u52a0\u72b6\u6001</li> </ul> </li> <li>\u9010\u6b65\u6784\u9020 DFA \u7684\u72b6\u6001\u8f6c\u79fb\u8868\uff0c\u76f4\u5230\u6ca1\u6709\u65b0\u7684\u72b6\u6001\u4ea7\u751f</li> </ul> NFA -&gt; DFA <p>\u4ee5 \\((a|b)^*ab\\) \u5bf9\u5e94\u7684 NFA \u4e3a\u4f8b   \u9010\u6b65\u6784\u9020 DFA \u7684\u72b6\u6001\u8f6c\u79fb\u8868\uff1a</p> <ul> <li>\u9996\u5148\uff0c\u8ba1\u7b97\u521d\u59cb\u72b6\u6001\u7684 \\(\\epsilon\\)-\u95ed\u5305 \\(A = \\{0, 1, 2, 4, 7\\}\\) \u5728\u8f93\u5165 \\(a\\) \u548c \\(b\\) \u4e0b\u7684\u8f6c\u79fb\u72b6\u6001     \u72b6\u6001\u8f93\u5165\u7b26\u53f7\\(a\\)\\(b\\)\\(A\\)\\(B\\)\\(C\\)      \u5176\u4e2d<ul> <li>\\(\\epsilon-closure(move(A, a)) = \\{1,2,3,4,6,7,8\\} \\coloneqq B\\)</li> <li>\\(\\epsilon-closure(move(A, b)) = \\{1,2,4,5,6,7\\} \\coloneqq C\\)</li> </ul> </li> <li>\u63a5\u7740\uff0c\u8ba1\u7b97 \\(B\\) \u548c \\(C\\) \u5728\u8f93\u5165 \\(a\\) \u548c \\(b\\) \u4e0b\u7684\u8f6c\u79fb\u72b6\u6001     \u72b6\u6001\u8f93\u5165\u7b26\u53f7\\(a\\)\\(b\\)\\(A\\)\\(B\\)\\(C\\)\\(B\\)\\(B\\)\\(D\\)      \u5176\u4e2d<ul> <li>\\(\\epsilon-closure(move(B, b)) = \\{1,2,4,5,6,7,9\\} \\coloneqq D\\)</li> </ul> </li> <li>\u7c7b\u4f3c\u7684\uff0c\u5b8c\u6210\u5bf9 \\(C\\) \u548c \\(D\\) \u7684\u8ba1\u7b97\uff0c\u53ef\u4ee5\u770b\u5230\u4e0d\u518d\u6709\u65b0\u7684\u72b6\u6001\u4ea7\u751f\uff0c\u5373\u5b8c\u6210\u4e86 DFA \u72b6\u6001\u8f6c\u79fb\u8868\u7684\u6784\u9020     \u72b6\u6001\u8f93\u5165\u7b26\u53f7\\(a\\)\\(b\\)\\(A\\)\\(B\\)\\(C\\)\\(B\\)\\(B\\)\\(D\\)\\(C\\)\\(B\\)\\(C\\)\\(D\\)\\(B\\)\\(C\\)</li> </ul> <p>\u6700\u7ec8\u5f97\u5230\u7684 DFA \u7684\u8f6c\u6362\u56fe\u5982\u4e0b\uff1a  </p>"},{"location":"CS/Compilers/ch2/#dfa","title":"DFA \u7b80\u5316","text":"<p>\u95ee\u9898\u63cf\u8ff0</p> <p>\u8f93\u5165\uff1aDFA \\(D\\) \u8f93\u51fa\uff1a\u7b49\u4ef7\u7684\u6700\u5c0f\u5316 DFA \\(D'\\)</p> <p>\u4e00\u4e2a\u6b63\u5219\u8bed\u8a00\u53ef\u4ee5\u5bf9\u5e94\u4e8e\u591a\u4e2a\u8bc6\u522b\u5b83\u7684 DFA\u3002\u5728\u4e0d\u8ba1\u540c\u6784\u7684\u60c5\u51b5\u4e0b\uff0c\u901a\u8fc7 DFA \u6700\u5c0f\u5316\uff0c\u53ef\u4ee5\u5f97\u5230\u72b6\u6001\u6570\u91cf\u6700\u5c11\u7684\u552f\u4e00 DFA\u3002</p>"},{"location":"CS/Compilers/ch2/#_24","title":"\u53ef\u533a\u5206\u72b6\u6001","text":"<p>\u72b6\u6001 \\(s, t\\) \u662f\u53ef\u533a\u5206\u7684\uff0c\u5982\u679c\u5b58\u5728\u4e32 \\(x\\)\uff0c\u4f7f\u5f97\u4ece \\(s, t\\) \u51fa\u53d1\uff0c\u4e00\u4e2a\u5230\u8fbe\u63a5\u53d7\u72b6\u6001\uff0c\u4e00\u4e2a\u5230\u8fbe\u975e\u63a5\u53d7\u72b6\u6001\u3002\u4e5f\u79f0\u4e3a\u4e32 \\(x\\) \u533a\u5206\u4e86\u72b6\u6001 \\(s, t\\)</p> \u53ef\u533a\u5206\u72b6\u6001 <p>\u4ee5 NFA -&gt; DFA \u4f8b\u5b50\u4e2d\u7684 DFA \u4e3a\u4f8b\uff0c\u56e0\u4e3a\u5bf9\u4e8e\u4e32 \\(1\\)\uff0c\u4ece\u72b6\u6001 \\(B\\) \u51fa\u53d1\u53ef\u4ee5\u5230\u8fbe\u63a5\u53d7\u72b6\u6001\uff0c\u800c\u4ece\u72b6\u6001 \\(A\\) \u51fa\u53d1\u4e0d\u53ef\u4ee5\uff0c\u6545\u72b6\u6001 \\(A, B\\) \u662f\u53ef\u533a\u5206\u7684\u72b6\u6001</p> <p>\u4e0d\u53ef\u533a\u5206\u7684\u4e24\u4e2a\u72b6\u6001\u662f\u7b49\u4ef7\u7684\uff0c\u53ef\u4ee5\u5408\u5e76\u3002</p> <p>\u7531\u6b64\u53ef\u4ee5\u63a8\u51fa DFA \u72b6\u6001 \\(s, t\\) \u7b49\u4ef7\u7684\u6761\u4ef6\uff1a</p> <ul> <li>\u4e00\u81f4\u6027\uff1a\\(s, t\\) \u540c\u4e3a\u63a5\u53d7\u72b6\u6001\u6216\u540c\u4e3a\u975e\u63a5\u53d7\u72b6\u6001</li> <li>\u8513\u5ef6\u6027\uff1a\u5bf9\u4e8e\u4efb\u4f55\u8f93\u5165\u7b26\u53f7\uff0c\\(s, t\\) \u5fc5\u987b\u8f6c\u6362\u5230\u7b49\u4ef7\u7684\u72b6\u6001\u96c6\u5408\u4e2d\uff0c\u540c\u65f6\u5177\u6709\u4f20\u9012\u6027</li> </ul>"},{"location":"CS/Compilers/ch2/#dfa_1","title":"DFA \u6700\u5c0f\u5316\u7b97\u6cd5","text":"<p>\u57fa\u4e8e\u4e0a\u8ff0\u7684\u7b49\u4ef7\u6027\u6761\u4ef6\uff0c\u53ef\u4ee5\u5f97\u5230 DFA \u6700\u5c0f\u5316\u7684\u7b97\u6cd5\u7684\u57fa\u672c\u6b65\u9aa4\uff1a</p> <ul> <li>\u5212\u5206\uff1a\u6839\u636e\u7b49\u4ef7\u6027\u6761\u4ef6\uff0c\u8fed\u4ee3\u5730\u5212\u5206\u7b49\u4ef7\u7c7b</li> <li>\u6784\u9020\uff1a\u4ece\u5212\u5206\u7684\u7b49\u4ef7\u7c7b\u4e2d\u9009\u53d6\u4e00\u4e2a\u4ee3\u8868\uff0c\u6784\u9020\u6700\u5c0f\u5316 DFA</li> </ul>"},{"location":"CS/Compilers/ch2/#_25","title":"\u5212\u5206","text":"<p>\u57fa\u672c\u7684\u5212\u5206\u7b97\u6cd5\u5982\u4e0b\uff1a</p> <pre>\n\\begin{algorithm}\n\\caption{Partition}\n\\begin{algorithmic}\n\\Function{Partition}{$D$}\n    \\State $\\Pi \\gets \\{F, S-F\\}$\n    \\Repeat\n        \\State $\\Pi' \\gets \\Pi$\n        \\ForAll{$A \\in \\Pi$}\n            \\State Divide $A$ into smaller sets $A_1, A_2, \\ldots, A_k$ such that $s, t \\in A$ are in the same set iff for all input $a$, $move(s, a)$ and $move(t, a)$ are in the same set $B$ in $\\Pi$\n            \\If{$A$ is divided}\n                \\State $\\Pi' \\gets \\Pi' \\cup \\{A_1, A_2, \\ldots, A_k\\} - \\{A\\}$\n            \\EndIf\n        \\EndFor\n    \\Until{$\\Pi' = \\Pi$}\n    \\State \\Return $\\Pi$\n\\EndFunction\n\\end{algorithmic}\n\\end{algorithm}\n</pre>"},{"location":"CS/Compilers/ch2/#_26","title":"\u6784\u9020","text":"<p>\u5728\u5212\u5206\u51fa\u7684\u6bcf\u4e2a\u7b49\u4ef7\u7c7b\u4e2d\uff0c\u9009\u53d6\u4e00\u4e2a\u4ee3\u8868\uff0c\u4f5c\u4e3a\u6700\u5c0f\u5316 DFA \u4e2d\u7684\u4e00\u4e2a\u72b6\u6001\uff0c\u5176\u4e2d</p> <ul> <li>\u5f00\u59cb\u72b6\u6001\uff1a\u5212\u5206\u4e2d\u5305\u542b DFA \u7684\u5f00\u59cb\u72b6\u6001\u7684\u7b49\u4ef7\u7c7b\u7684\u4ee3\u8868</li> <li>\u63a5\u53d7\u72b6\u6001\uff1a\u5212\u5206\u4e2d\u5305\u542b DFA \u7684\u63a5\u53d7\u72b6\u6001\u7684\u7b49\u4ef7\u7c7b\u7684\u4ee3\u8868<ul> <li>\u7531\u4e8e\u521d\u59cb\u5212\u5206\u4e2d\u5c31\u5c06\u63a5\u53d7\u72b6\u6001\u548c\u975e\u63a5\u53d7\u72b6\u6001\u5206\u5f00\uff0c\u6545\u8fd9\u79cd\u7b49\u4ef7\u7c7b\u4e2d\u4e00\u5b9a\u53ea\u6709\u63a5\u53d7\u72b6\u6001</li> </ul> </li> </ul> <p>\u72b6\u6001\u8f6c\u79fb\u5219\u6839\u636e\u5982\u4e0b\u7684\u89c4\u5219\u8fdb\u884c\uff1a</p> <ul> <li>\u5047\u8bbe<ul> <li>\\(s\\) \u662f DFA \u7684\u7b49\u4ef7\u7c7b \\(A\\) \u7684\u4ee3\u8868</li> <li>\\(t\\) \u662f DFA \u7684\u7b49\u4ef7\u7c7b \\(B\\) \u7684\u4ee3\u8868</li> <li>\u8f93\u5165\u7b26\u53f7 \\(a\\)\uff0c\u7b49\u4ef7\u7c7b \\(A\\) \u4e2d\u7684\u4efb\u610f\u72b6\u6001 \\(s'\\) \u8f6c\u79fb\u5230\u7b49\u4ef7\u7c7b \\(B\\) \u4e2d\u7684\u72b6\u6001 \\(t'\\)</li> <li>\u5219\u65b0\u6784\u9020 DFA \u7684\u72b6\u6001 \\(s\\) \u5728\u8f93\u5165 \\(a\\) \u4e0b\u8f6c\u79fb\u5230\u72b6\u6001 \\(t\\)</li> </ul> </li> </ul> DFA \u6700\u5c0f\u5316 <p>\u540c\u6837\u4ee5 NFA -&gt; DFA \u4f8b\u5b50\u4e2d\u7684 DFA \u4e3a\u4f8b\uff0c\u8fdb\u884c\u6700\u5c0f\u5316\uff1a</p> <ul> <li>\u5212\u5206\u90e8\u5206<ul> <li>\u6839\u636e\u662f\u5426\u4e3a\u63a5\u53d7\u72b6\u6001\u521d\u59cb\u5316\u7b49\u4ef7\u7c7b\u5212\u5206<ul> <li>\\(\\Pi = \\{\\{A,B,C\\}, \\{D\\}\\}\\)</li> </ul> </li> <li>\u8fdb\u884c\u7b2c\u4e00\u6b21\u5212\u5206\u8fed\u4ee3<ul> <li>\u6d4b\u8bd5 \\(\\{A,B,C\\}\\) \u662f\u5426\u53ef\u5212\u5206<ul> <li>\u5bf9\u4e8e\u8f93\u5165 \\(a\\)\uff0c\\(move(\\{A,B,C\\}, a) = \\{B\\}\\)</li> <li>\u5bf9\u4e8e\u8f93\u5165 \\(b\\)\uff0c\\(move(\\{A,B,C\\}, b) = \\{C,D\\}\\)</li> <li>\u51fa\u73b0\u4e86\u4e0d\u540c\u7684\u7b49\u4ef7\u7c7b\uff0c\u6545\u5212\u5206\u4e3a \\(\\{\\{A,C\\}, \\{B\\}\\}\\)</li> </ul> </li> <li>\\(\\{D\\}\\) \u53ea\u6709\u4e00\u4e2a\u72b6\u6001\uff0c\u4e0d\u53ef\u5212\u5206</li> <li>\u5f97\u5230\u7684\u65b0\u5212\u5206\u4e3a \\(\\Pi' = \\{\\{A,C\\}, \\{B\\}, \\{D\\}\\}\\)</li> </ul> </li> <li>\u7531\u4e8e \\(\\Pi' \\neq \\Pi\\)\uff0c\\(\\Pi = \\Pi'\\)\u8fdb\u884c\u7b2c\u4e8c\u6b21\u5212\u5206\u8fed\u4ee3<ul> <li>\u6b65\u9aa4\u7c7b\u4f3c\uff0c\u5f97\u5230\u65b0\u5212\u5206\u4e3a \\(\\Pi' = \\{\\{A,C\\}, \\{B\\}, \\{D\\}\\}\\)</li> </ul> </li> <li>\u7531\u4e8e \\(\\Pi' = \\Pi\\)\uff0c\u5212\u5206\u5b8c\u6210</li> </ul> </li> <li>\u6784\u9020\u90e8\u5206<ul> <li>\u9009\u53d6\u4ee3\u8868<ul> <li>\\(\\{A,C\\}\\) \u7684\u4ee3\u8868\u4e3a \\(A\\)\uff0c\u4e3a\u5f00\u59cb\u72b6\u6001</li> <li>\\(\\{B\\}\\) \u7684\u4ee3\u8868\u4e3a \\(B\\)</li> <li>\\(\\{D\\}\\) \u7684\u4ee3\u8868\u4e3a \\(D\\)\uff0c\u4e3a\u63a5\u53d7\u72b6\u6001</li> </ul> </li> <li>\u91c7\u7528\u6784\u9020\u4e2d\u72b6\u6001\u8f6c\u79fb\u7684\u89c4\u5219\uff0c\u8fdb\u884c\u6784\u9020</li> </ul> </li> </ul> <p>\u6700\u7ec8\u5f97\u5230\u7684\u6700\u5c0f\u5316 DFA \u7684\u8f6c\u6362\u56fe\u5982\u4e0b\uff1a  </p>"},{"location":"CS/Compilers/ch2/#lex","title":"Lex \u8bcd\u6cd5\u5206\u6790\u5de5\u5177","text":""},{"location":"CS/Compilers/ch2/#_27","title":"\u5e38\u7528\u5de5\u5177\u7ec4\u5408","text":"<p>\u901a\u5e38\u4f7f\u7528 Lex/Flex \u751f\u6210\u8bcd\u6cd5\u5206\u6790\u5668\uff0c\u4e0e Yacc/Bison \u751f\u6210\u8bed\u6cd5\u5206\u6790\u5668\u914d\u5408\u4f7f\u7528\uff0c\u751f\u6210\u7f16\u8bd1\u5668\u524d\u7aef</p> <ul> <li>Lex + Yacc<ul> <li>Lex\uff1a\u8bcd\u6cd5\u5206\u6790\u5668\u751f\u6210\u5de5\u5177</li> <li>Yacc\uff1a\u8bed\u6cd5\u5206\u6790\u5668\u751f\u6210\u5de5\u5177</li> <li>\u901a\u8fc7 Lex \u751f\u6210\u7684\u8bcd\u6cd5\u5206\u6790\u5668\u5c06\u8f93\u5165\u4e32\u5206\u89e3\u4e3a Token\uff0c\u7136\u540e\u901a\u8fc7 Yacc \u751f\u6210\u7684\u8bed\u6cd5\u5206\u6790\u5668\u8fdb\u884c\u8bed\u6cd5\u5206\u6790</li> </ul> </li> <li>Flex + Bison</li> <li>ANTLR</li> </ul> \u7528 Lex \u521b\u5efa\u4e00\u4e2a\u8bcd\u6cd5\u5206\u6790\u5668 <p></p> <p>\u4ee5\u4e0b\u9762 Lex \u8bed\u6cd5\u793a\u4f8b\u4e2d\u7684\u8bcd\u6cd5\u5206\u6790\u5668\u4e3a\u4f8b\uff1a <pre><code>$ lex a.lex \n$ clang lex.yy.c \n$ ./a.out \nHello123World5\nSaw an integer: 123\nSaw an integer: 5\nTotal characters except integer: 10\n</code></pre></p>"},{"location":"CS/Compilers/ch2/#lex_1","title":"Lex \u8bed\u6cd5","text":"<p>Lex \u8bed\u6cd5\u7684\u57fa\u672c\u7ed3\u6784\u5982\u4e0b\uff1a</p> <ul> <li>\u58f0\u660e\u90e8\u5206<ul> <li>\u5e38\u91cf\uff1a\u8868\u793a\u5e38\u6570\u7684\u6807\u8bc6\u7b26</li> <li>\u6b63\u5219\u5b9a\u4e49</li> </ul> </li> <li>\u8f6c\u6362\u89c4\u5219<ul> <li>\u683c\u5f0f\u4e3a <code>pattern { action }</code></li> <li>pattern\uff1a\u6b63\u5219\u8868\u8fbe\u5f0f</li> <li>action\uff1a\u4e0e pattern \u5339\u914d\u65f6\u6267\u884c\u7684\u52a8\u4f5c</li> <li>\u5904\u7406\u65b9\u5f0f\u901a\u5e38\u7528 C \u8bed\u8a00\u4ee3\u7801\u8868\u793a</li> </ul> </li> <li>\u8f85\u52a9\u51fd\u6570<ul> <li>\u5404\u4e2a action \u4e2d\u4f7f\u7528\u7684\u51fd\u6570</li> </ul> </li> </ul> Lex \u8bed\u6cd5\u793a\u4f8b <p>\u4ee5\u8bc6\u522b\u6574\u6570\u7684\u8bcd\u6cd5\u5206\u6790\u5668\u4e3a\u4f8b\uff0c\u5176 Lex \u8bed\u6cd5\u5982\u4e0b\uff1a <pre><code>/*** Definition section ***/\n\n%{\n/* C code to be copied verbatim */\n#include &lt;stdio.h&gt;\nint i = 0;\n%}\n\n%%\n    /*** Rules section ***/\n\n    /* [0-9]+ matches a string of one or more digits */\n[0-9]+  {\n            /* yytext is a string containing the matched text. */\n            printf(\"Saw an integer: %s\\n\", yytext);\n        }\n\n.       {\n            i++;\n        }\n\n\\n      {\n            printf(\"Total characters except integer: %d\\n\", i);\n            i = 0;\n        }\n\n%%\n/*** C Code section ***/\n\n\nint yywrap() {return 0;}\n\nint main(void)\n{\n    /* Call the lexer, then quit. */\n    yylex();\n    return 0;\n}\n</code></pre></p>"},{"location":"CS/Compilers/ch2/#_28","title":"\u5de5\u4f5c\u65b9\u5f0f\u4e0e\u51b2\u7a81","text":"<p>Lex \u751f\u6210\u7684\u8bcd\u6cd5\u5206\u6790\u5668\u7684\u5de5\u4f5c\u65b9\u5f0f\u5982\u4e0b\uff1a</p> <ul> <li>Lex \u751f\u6210\u7684\u8bcd\u6cd5\u5206\u6790\u5668\u4f5c\u4e3a\u4e00\u4e2a\u51fd\u6570\u88ab\u8c03\u7528</li> <li>\u5728\u6bcf\u6b21\u8c03\u7528\u8fc7\u7a0b\u4e2d\uff0c\u4e0d\u65ad\u8bfb\u5165\u4f59\u4e0b\u7684\u8f93\u5165\u7b26\u53f7</li> <li>\u53d1\u73b0\u6700\u957f\u7684\u3001\u4e0e\u67d0\u4e2a\u6a21\u5f0f\u5339\u914d\u7684\u8f93\u5165\u524d\u7f00\u65f6<ul> <li>\u8c03\u7528\u76f8\u5e94\u7684\u52a8\u4f5c\uff0c\u8be5\u52a8\u4f5c\u8fdb\u884c\u76f8\u5173\u5904\u7406</li> <li>\u4e4b\u540e\u8bcd\u6cd5\u5206\u6790\u5668\u7ee7\u7eed\u5bfb\u627e\u5176\u5b83\u8bcd\u7d20</li> </ul> </li> </ul> <p>\u5728\u8fd9\u79cd\u65b9\u5f0f\u4e0b\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u51b2\u7a81\uff1a\u591a\u4e2a\u8f93\u5165\u524d\u7f00\u4e0e\u67d0\u4e2a\u6a21\u5f0f\u76f8\u5339\u914d\uff0c\u6216\u8005\u4e00\u4e2a\u524d\u7f00\u4e0e\u591a\u4e2a\u6a21\u5f0f\u76f8\u5339\u914d\u3002\u5e38\u7528\u7684\u89e3\u51b3\u65b9\u6cd5\u6709\uff1a</p> <ul> <li>\u6700\u957f\u5339\u914d\uff08Longest match\uff09\uff1a\u9009\u62e9\u6700\u957f\u7684\u5339\u914d\u524d\u7f00<ul> <li>\u5982 <code>&lt;=</code> \u88ab\u5f53\u4f5c\u4e00\u4e2a Token\uff0c\u800c\u4e0d\u662f <code>&lt;</code> \u548c <code>=</code></li> </ul> </li> <li>\u4f18\u5148\u7ea7\uff08Rule Priority\uff09\uff1a\u6700\u957f\u524d\u7f00\u4e0e\u591a\u4e2a\u6a21\u5f0f\u5339\u914d\u65f6\uff0c\u9009\u62e9\u5217\u5728\u524d\u9762\u7684\u6a21\u5f0f<ul> <li>\u5982 <code>R = Whitespace | 'new' | Integer | Identifier</code></li> <li>\u5bf9\u4e8e <code>new foo</code>\uff0c<code>new</code> \u4f1a\u88ab\u8bc6\u522b\u4e3a\u5199\u5728\u524d\u9762\u7684\u6a21\u5f0f <code>'new'</code>\uff0c\u800c\u4e0d\u662f <code>Identifier</code></li> </ul> </li> </ul>"},{"location":"CS/Compilers/ch3/","title":"\u8bed\u6cd5\u5206\u6790","text":"<p> \u7ea6 233 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 1 \u5206\u949f</p> \u8bed\u6cd5\u5206\u6790\u5668\u7684\u57fa\u672c\u4f5c\u7528 <p>\u4ece\u8bcd\u6cd5\u5206\u6790\u5668\u83b7\u5f97 Token \u5e8f\u5217\uff0c\u786e\u8ba4\u8be5\u5e8f\u5217\u662f\u5426\u53ef\u4ee5\u7531\u8bed\u8a00\u7684\u6587\u6cd5\u751f\u6210</p> <ul> <li>\u5bf9\u4e8e\u8bed\u6cd5\u9519\u8bef\u7684\u7a0b\u5e8f\uff0c\u62a5\u544a\u9519\u8bef\u4fe1\u606f</li> <li>\u5bf9\u4e8e\u8bed\u6cd5\u6b63\u786e\u7684\u7a0b\u5e8f\uff0c\u751f\u6210\u8bed\u6cd5\u5206\u6790\u6811\uff08\u7b80\u79f0\u8bed\u6cd5\u6811\uff09<ul> <li>\u901a\u5e38\u4ea7\u751f\u7684\u662f\u62bd\u8c61\u8bed\u6cd5\u6811 (AST)</li> </ul> </li> </ul> <p>Parse Tree \u4e0d\u662f AST</p> <p></p> <p>\u76ee\u524d\u8bed\u6cd5\u5206\u6790\u5668\u7684\u5b9e\u73b0\u6709\u4e0b\u9762\u4e24\u79cd\u65b9\u6cd5\uff1a</p> <ul> <li>By-hand (recursive descent)<ul> <li>Clang, gcc (Since 3.4)</li> <li>Libraries can make this easier (e.g.,parser combinators-parsec)</li> </ul> </li> <li>Use a parser generator<ul> <li>Much easier to get right (\"Specification is the implementation\")</li> <li>Gcc (Before 3.4), Glasgow Haskell Compiler, OCaml</li> <li>Parser generator: Yacc, Bison, ANTLR, menhir</li> </ul> </li> </ul> <p>\u624b\u5199\u7684\u539f\u56e0\u53ef\u80fd\u5305\u62ec\u8bed\u6cd5\u592a\u8fc7\u590d\u6742\uff0c\u624b\u5199\u53cd\u800c\u65b9\u4fbf\u4e00\u4e9b (GCC 3.4 later)</p> <p>\u7531\u4e8e\u8bed\u6cd5\u5206\u6790\u7684\u5185\u5bb9\u6bd4\u8f83\u591a\uff0c\u672c\u7ae0\u5c06\u5206\u4e3a\u56db\u90e8\u5206\u8fdb\u884c\u8bb0\u5f55\uff1a</p> <ul> <li>CFG \u53ca\u8bed\u6cd5\u5206\u6790\u6982\u8ff0</li> <li>\u81ea\u9876\u5411\u4e0b\u5206\u6790</li> <li>\u81ea\u5e95\u5411\u4e0a\u5206\u6790</li> <li>\u8bed\u6cd5\u5206\u6790\u5668\u4e0e\u5c0f\u7ed3</li> </ul>"},{"location":"CS/Compilers/ch3/ch3-1/","title":"CFG \u53ca\u8bed\u6cd5\u5206\u6790\u6982\u8ff0","text":"<p> \u7ea6 3121 \u4e2a\u5b57  3 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 10 \u5206\u949f</p>"},{"location":"CS/Compilers/ch3/ch3-1/#_1","title":"\u4e0a\u4e0b\u6587\u65e0\u5173\u6587\u6cd5","text":""},{"location":"CS/Compilers/ch3/ch3-1/#cfg_1","title":"CFG \u7b80\u4ecb","text":"\u4e0a\u4e0b\u6587\u65e0\u5173\u662f\u4ec0\u4e48\u610f\u601d\uff1f <p>\\(\\alpha A \\beta \\Rightarrow \\alpha \\gamma \\beta\\) \u5728\u6587\u6cd5\u63a8\u5bfc\u7684\u6bcf\u4e00\u6b65\uff0c\u7b26\u53f7\u4e32 \\(\\gamma\\) \u4ec5\u6839\u636e \\(A\\) \u7684\u4ea7\u751f\u5f0f\u63a8\u5bfc\uff0c\u65e0\u9700\u4f9d\u8d56 \\(A\\) \u7684\u4e0a\u4e0b\u6587 \\(\\alpha\\) \\(\\beta\\)</p> <p>\u57fa\u672c\u4f5c\u7528\uff1a\u6307\u5b9a\u7f16\u7a0b\u8bed\u8a00\u7684\u8bed\u6cd5\u7ed3\u6784</p> <p>CFG \u5b9a\u4e49\u7684\u65b9\u5f0f\u548c\u8ba1\u7b97\u7406\u8bba\u6240\u8bb2\u7684\u5f62\u5f0f\u7565\u4e0d\u540c\uff0c\u7b26\u53f7\u9700\u8981\u6ce8\u610f\u4e00\u4e0b</p> <p>\u4e00\u4e2a\u4e0a\u4e0b\u6587\u65e0\u5173\u6587\u6cd5 \\(G\\) \u662f\u4e00\u4e2a\u56db\u5143\u7ec4 \\(G = (T, N, P, S)\\)</p> <ul> <li>\\(T\\) \u662f\u7ec8\u7ed3\u7b26\u53f7\u96c6\u5408 (Terminal)</li> <li>\\(N\\) \u662f\u975e\u7ec8\u7ed3\u7b26\u53f7\u96c6\u5408 (Non-terminal)</li> <li>\\(P\\) \u662f\u4ea7\u751f\u5f0f\u96c6\u5408 (Production): e.g., \\(A \\rightarrow \\alpha, A \\in N, \\alpha \\in (T \\cup N)^*\\)</li> <li>\\(S\\) \u662f\u5f00\u59cb\u7b26\u53f7 (Start symbol): \\(S \\in N\\)</li> </ul> <p>\u81f3\u4e8e\u6027\u8d28\uff0c\u53ef\u4ee5\u53c2\u8003\u8ba1\u7b97\u7406\u8bba\u7684\u5185\u5bb9\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0</p> <p>\u5728\u8fd9\u91cc\u7684 CFG \u4e2d\uff0c\u6211\u4eec\u4f7f\u7528 EOF Marker \\(\\$\\) \u6765\u8868\u793a\u8f93\u5165\u4e32\u7684\u7ed3\u675f\uff0c\u5fc5\u987b\u4f4d\u4e8e\u5b8c\u6574\u7684 \\(S\\) \u4e4b\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7\u6dfb\u52a0\u4e00\u4e2a\u65b0\u7684\u5f00\u59cb\u7b26\u53f7 \\(S' \\rightarrow S \\$\\) \u6765\u5b9e\u73b0</p> <p>\u6b64\u5916\uff0c\u5bf9\u4e8e\u4e00\u7ec4\u6709\u76f8\u540c\u5de6\u90e8\u7684 \\(\\alpha\\) \u4ea7\u751f\u5f0f $$ \\alpha \\rightarrow \\beta_1, \\alpha \\rightarrow \\beta_2, \\ldots, \\alpha \\rightarrow \\beta_n $$ \u53ef\u4ee5\u7b80\u5199\u4e3a $$ \\alpha \\rightarrow \\beta_1 | \\beta_2 | \\ldots | \\beta_n $$ \u8bfb\u4f5c\uff1a\\(\\alpha\\) \u5b9a\u4e49\u4e3a \\(\\beta_1\\)\uff0c\u6216\u8005 \\(\\beta_2\\) ...\uff0c\u6216\u8005 \\(\\beta_n\\)</p> <p>\\(\\beta_i\\) \u79f0\u4e3a \\(\\alpha\\) \u7684\u5019\u9009\u5f0f (Candidate)</p>"},{"location":"CS/Compilers/ch3/ch3-1/#_2","title":"\u63a8\u5bfc\u548c\u89c4\u7ea6","text":"<p>\u7ed9\u5b9a\u6587\u6cd5 \\(G = (T, N, P, S)\\)</p> <ul> <li>\u76f4\u63a5\u63a8\u5bfc/\u89c4\u7ea6<ul> <li>\u76f4\u63a5\u63a8\u5bfc\uff1a\u628a\u4ea7\u751f\u5f0f\u770b\u6210\u91cd\u5199\u89c4\u5219\uff0c\u628a\u7b26\u53f7\u4e32\u4e2d\u7684\u975e\u7ec8\u7ed3\u7b26\u7528\u5176\u4ea7\u751f\u5f0f\u53f3\u90e8\u7684\u4e32\u6765\u4ee3\u66ff<ul> <li>\u5982\u679c \\(A \\rightarrow \\gamma \\in P\\)\uff0c\u4e14 \\(\\alpha, \\beta \\in (T \\cup N)^*\\)\uff0c\u5219\u79f0\u4e32 \\(\\alpha A \\beta\\) \u76f4\u63a5\u63a8\u5bfc\u51fa \\(\\alpha \\gamma \\beta\\)\uff0c\u8bb0\u4f5c \\(\\alpha A \\beta \\Rightarrow \\alpha \\gamma \\beta\\)</li> </ul> </li> <li>\u76f4\u63a5\u89c4\u7ea6\uff1a\u5982\u679c \\(\\alpha A \\beta \\Rightarrow \\alpha \\gamma \\beta\\)\uff0c\u5219\u79f0 \\(\\alpha \\gamma \\beta\\) \u76f4\u63a5\u89c4\u7ea6\u4e3a \\(\\alpha A \\beta\\)</li> </ul> </li> <li>\u591a\u6b65\u63a8\u5bfc/\u89c4\u7ea6<ul> <li>\u591a\u6b65\u63a8\u5bfc\uff1a\u5982\u679c \\(\\alpha_0 \\Rightarrow \\alpha_1, \\alpha_1 \\Rightarrow \\alpha_2, \\ldots, \\alpha_{n-1} \\Rightarrow \\alpha_n\\)\uff0c\u5219\u53ef\u4ee5\u8bb0\u4f5c \\(\\alpha_0 \\Rightarrow \\alpha_1 \\Rightarrow \\alpha_2 \\Rightarrow \\ldots \\Rightarrow \\alpha_n\\)\uff0c\u79f0\u7b26\u53f7\u4e32 \\(\\alpha_0\\) \u7ecf\u8fc7 \\(n\\) \u6b65\u63a8\u5bfc\u51fa \\(\\alpha_n\\)\uff0c\u53ef\u7b80\u8bb0\u4e3a \\(\\alpha_0 \\Rightarrow^n \\alpha_n\\)</li> <li>\u6b64\u5916\uff0c\u53ef\u4ee5\u4f7f\u7528<ul> <li>\\(\\Rightarrow^*\\) \u8868\u793a\u82e5\u5e72\uff08\u53ef\u4ee5\u662f 0\uff09\u6b65\u63a8\u5bfc</li> <li>\u4f7f\u7528 \\(\\Rightarrow^+\\) \u8868\u793a\u81f3\u5c11\u4e00\u6b65\u63a8\u5bfc</li> </ul> </li> </ul> </li> <li>\u6700\u5de6\u63a8\u5bfc/\u89c4\u7ea6<ul> <li>\u6700\u5de6\u63a8\u5bfc (Left-most Derivation)\uff1a\u6bcf\u6b65\u4ee3\u6362\u6700\u5de6\u8fb9\u7684\u975e\u7ec8\u7ed3\u7b26</li> <li>\u5982\u679c \\(S \\Rightarrow^*_{lm} \\alpha_0\\)\uff0c\u5219\u79f0 \\(\\alpha_0\\) \u662f\u5f53\u524d\u6587\u6cd5\u7684\u6700\u5de6\u53e5\u578b (left-sentential form)</li> <li>\u5728\u81ea\u9876\u5411\u4e0b\u7684\u8bed\u6cd5\u5206\u6790\u4e2d\uff0c\u603b\u662f\u91c7\u7528\u6700\u5de6\u63a8\u5bfc\u7684\u65b9\u5f0f </li> </ul> </li> <li>\u6700\u53f3\u63a8\u5bfc/\u89c4\u7ea6<ul> <li>\u6700\u53f3\u63a8\u5bfc (Right-most Derivation)\uff1a\u6bcf\u6b65\u4ee3\u6362\u6700\u53f3\u8fb9\u7684\u975e\u7ec8\u7ed3\u7b26</li> <li>\u5728\u81ea\u5e95\u5411\u4e0a\u7684\u5206\u6790\u4e2d\uff0c\u603b\u662f\u91c7\u7528\u6700\u5de6\u5f52\u7ea6\u7684\u65b9\u5f0f </li> </ul> </li> </ul> \u4ea7\u751f\u5f0f\u548c\u63a8\u5bfc\u7684\u8868\u793a <p>\u9f99\u4e66\u533a\u5206\u4e86 \\(\\rightarrow\\) (Production Rule)\u548c \\(\\Rightarrow\\)\uff08\u63a8\u5bfc\uff09\uff0c\u4f46\u662f\u864e\u4e66\u4f3c\u4e4e\u5728\u8868\u8fbe\u63a8\u5bfc\u65f6\u76f4\u63a5\u7528\u4e86 \\(\\rightarrow\\) \u770b\u8d77\u6765\u8fd8\u662f\u9f99\u4e66\u6bd4\u8f83\u7b26\u5408\u8ba1\u7b97\u7406\u8bba\u7684\u5e38\u7528\u7b26\u53f7\uff0c\u8fd9\u91cc\u7edf\u4e00\u4f7f\u7528\u9f99\u4e66\u7684\u8868\u793a</p>"},{"location":"CS/Compilers/ch3/ch3-1/#_3","title":"\u53e5\u578b\u3001\u53e5\u5b50\u548c\u8bed\u8a00","text":"<ul> <li>\u53e5\u578b (Sentential Form)\uff1a\u5bf9\u5f00\u59cb\u7b26\u53f7\u4e3a \\(S\\) \u7684\u6587\u6cd5 \\(G\\)\uff0c\u5982\u679c \\(S \\Rightarrow^* \\alpha, \\alpha \\in (T \\cup N)^*\\)\uff0c\u5219\u79f0 \\(\\alpha\\) \u662f\u6587\u6cd5 \\(G\\) \u7684\u4e00\u4e2a\u53e5\u578b<ul> <li>\u53e5\u578b\u4e2d\u65e2\u53ef\u4ee5\u5305\u542b\u7ec8\u7ed3\u7b26\uff0c\u53c8\u53ef\u4ee5\u5305\u542b\u975e\u7ec8\u7ed3\u7b26\uff0c\u53ef\u4ee5\u662f\u7a7a\u4e32\uff08\u5728\u864e\u4e66\u4e2d\u76f4\u63a5\u7528\u7a7a\u683c\u4ee3\u8868\u7a7a\u4e32\uff0c\u5982 \\(X \\rightarrow \\space\\)\uff0c\u4f46\u662f\u9f99\u4e66\u4f1a\u7528 \\(\\epsilon\\) \u6765\u8868\u793a\u7a7a\uff09</li> </ul> </li> <li>\u53e5\u5b50 (Sentence)\uff1a\u5982\u679c \\(S \\Rightarrow^* w, w \\in T^*\\)\uff0c\u5219\u79f0 \\(w\\) \u662f\u6587\u6cd5 \\(G\\) \u7684\u4e00\u4e2a\u53e5\u5b50<ul> <li>\u53e5\u5b50\u662f\u4e0d\u542b\u975e\u7ec8\u7ed3\u7b26\u7684\u53e5\u578b</li> <li>\u4ec5\u542b\u7ec8\u7ed3\u7b26\u53f7\u7684\u53e5\u578b\u662f\u4e00\u4e2a\u53e5\u5b50</li> </ul> </li> <li>\u8bed\u8a00 (Language): \u7531\u6587\u6cd5 \\(G\\) \u63a8\u5bfc\u51fa\u7684\u6240\u6709\u53e5\u5b50\u6784\u6210\u7684\u96c6\u5408\u79f0\u4e3a\u6587\u6cd5 \\(G\\) \u7684\u8bed\u8a00\uff0c\u8bb0\u4f5c \\(L(G)\\)<ul> <li>\\(L(G) = \\{w | S \\Rightarrow^* w, w \\in T^*\\}\\)</li> </ul> </li> </ul> \u53e5\u578b\u548c\u53e5\u5b50 <p>\u8003\u8651\u6587\u6cd5 \\(E \\rightarrow E + E | E * E | (E) | -E | \\textbf{id}\\)\uff0c\u5176\u4e2d \\(\\textbf{id}\\) \u8868\u793a\u6807\u8bc6\u7b26\uff0c\u4e3a\u7ec8\u7ed3\u7b26\u53f7 \u5b58\u5728\u5982\u4e0b\u7684\u63a8\u5bfc\u5e8f\u5217</p> \\[ \\begin{aligned} E &amp;\\Rightarrow -E \\\\ &amp;\\Rightarrow -(E) \\\\ &amp;\\Rightarrow -(E + E) \\\\ &amp;\\Rightarrow -(\\textbf{id} + E) \\\\ &amp;\\Rightarrow -(\\textbf{id} + \\textbf{id}) \\end{aligned} \\] <p>\u5219\u5176\u4e2d\uff1a</p> <ul> <li>\\(-(\\textbf{id} + \\textbf{id})\\) \u662f\u6587\u6cd5\u7684\u4e00\u4e2a\u53e5\u5b50</li> <li>\\(-(\\textbf{id} + E)\\) \u662f\u6587\u6cd5\u7684\u4e00\u4e2a\u53e5\u578b</li> </ul>"},{"location":"CS/Compilers/ch3/ch3-1/#_4","title":"\u8f93\u5165\u4e32\u7684\u5224\u5b9a","text":"<p>\u7ed9\u5b9a CFG\uff0c\u5982\u4f55\u5224\u5b9a\u8f93\u5165\u4e32\u5c5e\u4e8e\u6587\u6cd5\u89c4\u5b9a\u7684\u8bed\u8a00\uff1f</p> <p>\u6709\u4e24\u4e2a\u89d2\u5ea6\u53ef\u4ee5\u8003\u8651\uff1a</p> <ul> <li>\u4ece\u751f\u6210\u8bed\u8a00\u7684\u89d2\u5ea6<ul> <li>\u53e5\u5b50\u7684\u63a8\u5bfc\uff08\u6d3e\u751f\uff09</li> <li>\u4ece\u5f00\u59cb\u7b26\u53f7\u80fd\u63a8\u5bfc\u51fa\u8be5\u8bcd\u4e32</li> </ul> </li> <li>\u4ece\u8bc6\u522b\u8bed\u8a00\u7684\u89d2\u5ea6<ul> <li>\u53e5\u5b50\u7684\u5f52\u7ea6</li> <li>\u4ece\u8bcd\u4e32\u80fd\u5f52\u7ea6\u51fa\u5f00\u59cb\u7b26\u53f7</li> </ul> </li> </ul> <p></p>"},{"location":"CS/Compilers/ch3/ch3-1/#re-cfg","title":"RE \u548c CFG","text":"<p>\u4e3a\u4ec0\u4e48\u8bcd\u6cd5\u548c\u8bed\u6cd5\u5206\u6790\u7528\u4e0d\u540c\u5f62\u5f0f\u8bed\u8a00\uff1f</p>"},{"location":"CS/Compilers/ch3/ch3-1/#_5","title":"\u8bed\u6cd5\u5206\u6790\u548c\u8bcd\u6cd5\u5206\u6790\u7684\u6bd4\u8f83","text":"<p>\u4e8b\u5b9e\u4e0a\uff0c\u6211\u4eec\u53ef\u4ee5\u63a8\u51fa\uff1a</p>"},{"location":"CS/Compilers/ch3/ch3-1/#regular-grammar","title":"\u6b63\u5219\u6587\u6cd5 (Regular Grammar)","text":"<p>\u901a\u8fc7\u5c06\u6b63\u5219\u8bed\u8a00\u8fdb\u884c\u5f62\u5f0f\u6587\u6cd5\u523b\u753b\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u6b63\u5219\u6587\u6cd5 (Regular Grammar) \u7684\u5b9a\u4e49\uff1a $$ G = (T, N, P, S) $$ \u5176\u4e2d\uff1a</p> <ul> <li>\\(T\\) \u662f\u7ec8\u7ed3\u7b26\u53f7\u96c6\u5408</li> <li>\\(N\\) \u662f\u975e\u7ec8\u7ed3\u7b26\u53f7\u96c6\u5408</li> <li>\\(P\\) \u662f\u4ea7\u751f\u5f0f\u96c6\u5408\uff0c\u5f62\u5f0f\u5982\u4e0b\uff1a<ul> <li>\u53f3\u7ebf\u6027\u6587\u6cd5\uff1a\\(\\alpha \\rightarrow \\beta\\) \u5f62\u5982 \\(A \\rightarrow \\alpha B\\) \u6216 \\(A \\rightarrow \\alpha\\)\uff0c\u5176\u4e2d \\(A, B \\in N, \\alpha \\in T \\cup \\{\\epsilon\\}\\)</li> <li>\u5de6\u7ebf\u6027\u6587\u6cd5\uff1a\\(\\alpha \\rightarrow \\beta\\) \u5f62\u5982 \\(A \\rightarrow B \\alpha\\) \u6216 \\(A \\rightarrow \\alpha\\)\uff0c\u5176\u4e2d \\(A, B \\in N, \\alpha \\in T \\cup \\{\\epsilon\\}\\)</li> </ul> </li> <li>\\(S\\) \u662f\u5f00\u59cb\u7b26\u53f7\uff0c\\(S \\in N\\)</li> </ul> <p>\u6b63\u5219\u8bed\u8a00\u662f\u53f3\u7ebf\u6027\u6587\u6cd5/\u5de6\u7ebf\u6027\u6587\u6cd5\u4ea7\u751f\u7684\u6240\u6709\u53e5\u5b50\u7684\u96c6\u5408</p> \u4e3a\u4ec0\u4e48\u8bcd\u6cd5\u5206\u6790\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u4e0d\u7528\u6b63\u5219\u6587\u6cd5\uff1f <p>\u6b63\u5219\u8868\u8fbe\u5f0f\u63cf\u8ff0\u7b80\u6d01\uff08\u523b\u753bToken\uff09\uff0c\u4e14\u6613\u4e8e\u7406\u89e3</p> <p></p> \u6b63\u5219\u8bed\u8a00 vs \u4e0a\u4e0b\u6587\u65e0\u5173\u8bed\u8a00 <p>\u6bcf\u4e2a\u6b63\u5219\u8bed\u8a00\u90fd\u662f\u4e00\u4e2a\u4e0a\u4e0b\u6587\u65e0\u5173\u8bed\u8a00\uff0c\u53cd\u4e4b\u4e0d\u6210\u7acb</p> <ul> <li>\u4ece\u6587\u6cd5\u89d2\u5ea6\uff0c\u5bf9\u4ea7\u751f\u5f0f \\(\\alpha \\rightarrow \\beta\\) \u5f62\u5f0f\u7684\u9650\u5236\u4e0d\u540c<ul> <li>\u4e0a\u4e0b\u6587\u65e0\u5173\u6587\u6cd5\uff1a\u5de6\u90e8 \\(\\alpha\\) \u662f\u4e00\u4e2a\u975e\u7ec8\u7ed3\u7b26\u53f7\uff0c\u53f3\u90e8\u662f\u4e00\u4e2a\u7b26\u53f7\u4e32\uff08\u5305\u62ec\u7ec8\u7ed3\u7b26\u53f7\u548c\u975e\u7ec8\u7ed3\u7b26\u53f7\uff09</li> <li>\u6b63\u5219\u6587\u6cd5\uff1a\u53f3\u7ebf\u6027\u6587\u6cd5\u548c\u5de6\u7ebf\u6027\u6587\u6cd5\u7684\u9650\u5236</li> </ul> </li> <li>\u4ece\u5b9e\u7528\u89d2\u5ea6, \u6b63\u5219\u8bed\u8a00\u8868\u8fbe\u80fd\u529b\u6709\u9650\uff0c\u96be\u4ee5\u523b\u753b\u7f16\u7a0b\u8bed\u8a00\u7684\u8bed\u6cd5<ul> <li>\u5982\u4e0d\u80fd\u7528\u4e8e\u63cf\u8ff0\u914d\u5bf9\u6216\u5d4c\u5957\u7684\u7ed3\u6784\uff0c\u5b9e\u4f8b\u5305\u62ec\u914d\u5bf9\u62ec\u53f7\u4e32\u7684\u96c6\u5408\uff0ce.g., \\((^n)^n, n \\geq 1\\)</li> <li>\u539f\u56e0\u5728\u4e8e\u6709\u7a77\u81ea\u52a8\u673a\u65e0\u6cd5\u8bb0\u5f55\u8bbf\u95ee\u540c\u4e00\u72b6\u6001\u7684\u6b21\u6570</li> </ul> </li> </ul>"},{"location":"CS/Compilers/ch3/ch3-1/#_6","title":"\u8bcd\u6cd5\u5206\u6790\u548c\u8bed\u6cd5\u5206\u6790\u7684\u5206\u79bb","text":"<ul> <li>\u4e3a\u4ec0\u4e48\u7528\u6b63\u5219\u8bed\u8a00\u5b9a\u4e49\u8bcd\u6cd5<ul> <li>\u8bcd\u6cd5\u89c4\u5219\u975e\u5e38\u7b80\u5355\uff0c\u4e0d\u5fc5\u7528\u4e0a\u4e0b\u6587\u65e0\u5173\u6587\u6cd5</li> <li>\u5bf9\u4e8e Token\uff0c\u6b63\u5219\u8868\u8fbe\u5f0f\u63cf\u8ff0\u7b80\u6d01\u4e14\u6613\u4e8e\u7406\u89e3</li> <li>\u4ece\u6b63\u5219\u8868\u8fbe\u5f0f\u6784\u9020\u51fa\u7684\u8bcd\u6cd5\u5206\u6790\u5668\u6548\u7387\u9ad8</li> </ul> </li> <li>\u5206\u79bb\u8bcd\u6cd5\u5206\u6790\u548c\u8bed\u6cd5\u5206\u6790\u7684\u597d\u5904<ul> <li>\u7b80\u5316\u8bbe\u8ba1\u3001\u63d0\u5347\u6027\u80fd</li> <li>\u7f16\u8bd1\u5668\u7684\u53ef\u79fb\u690d\u6027\u52a0\u5f3a</li> <li>\u4fbf\u4e8e\u7f16\u8bd1\u5668\u524d\u7aef\u7684\u6a21\u5757\u5212\u5206</li> </ul> </li> </ul> *\u5f62\u5f0f\u6587\u6cd5\u7684\u5206\u7c7b <p>Chomsky \u5728 1956 \u521b\u7acb\u4e86\u5f62\u5f0f\u8bed\u8a00\u5b66\uff0c\u5e76\u5c06\u5f62\u5f0f\u8bed\u8a00\u7684\u6587\u6cd5\u5206\u4e3a\u56db\u7c7b\uff1a</p> <ul> <li>0 \u578b\u6587\u6cd5\uff08\u77ed\u8bed\u7ed3\u6784\u6587\u6cd5\uff09\uff1a\u9012\u5f52\u53ef\u679a\u4e3e\u8bed\u8a00<ul> <li>\\(\\alpha \\rightarrow \\beta\\), \\(\\alpha, \\beta \\in (T \\cup N)^*, \\left| \\alpha \\right| &gt; 1\\)</li> </ul> </li> <li>1 \u578b\u6587\u6cd5\uff08\u4e0a\u4e0b\u6587\u6709\u5173\u6587\u6cd5\uff09<ul> <li>\\(\\left| \\alpha \\right| \\leq \\left| \\beta \\right|\\)\uff0c\u4f46 \\(S \\rightarrow \\epsilon\\) \u53ef\u4ee5\u4f8b\u5916</li> </ul> </li> <li>2 \u578b\u6587\u6cd5\uff08\u4e0a\u4e0b\u6587\u65e0\u5173\u6587\u6cd5\uff09<ul> <li>\\(\\alpha \\rightarrow \\beta\\), \\(\\alpha \\in N, \\beta \\in (T \\cup N)^*\\)</li> </ul> </li> <li>3 \u578b\u6587\u6cd5\uff08\u6b63\u5219\u6587\u6cd5\uff09</li> </ul> *CFL-Reachability <p>\u7ed3\u5408 CFG \u548c\u56fe\u53ef\u8fbe\u6027\uff0c\u53ef\u4ee5\u7528\u4e8e\u5206\u6790\u7a0b\u5e8f\u8bed\u4e49\uff0c\u5982\u7c7b\u578b\u63a8\u5bfc\u3001\u6307\u9488\u5206\u6790\u3001\u6570\u636e\u6d41\u5206\u6790\u7b49</p> <p>\u5177\u4f53\u5b9e\u4f8b\u5982 LLVM \u5185\u90e8\u7684 cfl-aa</p>"},{"location":"CS/Compilers/ch3/ch3-1/#_7","title":"\u8bed\u6cd5\u5206\u6790\u6982\u8ff0","text":""},{"location":"CS/Compilers/ch3/ch3-1/#cfg-parse-tree","title":"CFG \u7684 Parse Tree","text":"<p>\u5206\u6790\u6811 (ParseTree) \u662f\u63a8\u5bfc\u7684\u56fe\u5f62\u5316\u8868\u793a\uff0c\u5177\u6709\u4e0b\u9762\u6027\u8d28\uff1a</p> <ul> <li>\u6839\u8282\u70b9\u4e3a\u6587\u6cd5\u7684\u521d\u59cb\u7b26\u53f7</li> <li>\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\u662f\u4e00\u4e2a\u7ec8\u7ed3\u7b26</li> <li>\u6bcf\u4e2a\u5185\u90e8\u8282\u70b9\u662f\u4e00\u4e2a\u975e\u7ec8\u7ed3\u7b26</li> <li>\u6bcf\u4e00\u4e2a\u7236\u8282\u70b9\u548c\u4ed6\u7684\u5b50\u8282\u70b9\u6784\u6210\u4e00\u6761\u4ea7\u751f\u5f0f</li> </ul> Parse Tree \u6784\u9020 <ul> <li>\u6587\u6cd5 \\(E \\rightarrow E + E | E * E | (E) | \\textbf{id}\\)</li> <li>\u4e32 \\(\\textbf{id} * \\textbf{id} + \\textbf{id}\\)</li> </ul> <p></p>"},{"location":"CS/Compilers/ch3/ch3-1/#_8","title":"\u8bed\u6cd5\u5206\u6790\u4f5c\u4e3a\u641c\u7d22\u95ee\u9898","text":"<p>\u8bed\u6cd5\u5206\u6790\u7684\u6838\u5fc3\u95ee\u9898\uff1a\u5bf9\u4e8e\u4e00\u4e2a\u7ec8\u7ed3\u7b26\u53f7\u4e32 \\(x\\)</p> <ul> <li>\u8bbe\u6cd5\u4ece \\(S\\) \u63a8\u5bfc\u51fa \\(x\\)</li> <li>\u6216\u8005\u53cd\u8fc7\u6765\uff0c\u8bbe\u6cd5\u5c06 \\(x\\) \u5f52\u7ea6\u4e3a \\(S\\)</li> </ul> <p></p> <p>\u6839\u636e\u63a8\u5bfc\u548c\u89c4\u7ea6\u7684\u4e0d\u540c\uff0c\u6211\u4eec\u53ef\u4ee5\u5206\u4e3a\u4e24\u79cd\u5206\u6790\u65b9\u5f0f\uff1a</p> <ul> <li>\u81ea\u9876\u5411\u4e0b (Top-down) \u5206\u6790<ul> <li>\u4ece\u5f00\u59cb\u7b26\u53f7 \\(S\\) \u51fa\u53d1\uff0c\u5c1d\u8bd5\u6839\u636e\u4ea7\u751f\u5f0f\u89c4\u5219\u63a8\u5bfc (derive) \u51fa \\(x\\)</li> <li>Parse Tree \u7684\u6784\u9020\u65b9\u6cd5\uff1a\u4ece\u6839\u90e8\u5f00\u59cb </li> </ul> </li> <li>\u81ea\u5e95\u5411\u4e0a (Bottom-up) \u5206\u6790<ul> <li>\u5c1d\u8bd5\u6839\u636e\u4ea7\u751f\u5f0f\u89c4\u5219\u5f52\u7ea6 (reduce) \u5230\u6587\u6cd5\u7684\u5f00\u59cb\u7b26\u53f7 \\(S\\)</li> <li>Parse Tree \u7684\u6784\u9020\u65b9\u6cd5: \u4ece\u53f6\u5b50\u5f00\u59cb </li> </ul> </li> </ul> <p>\u4f46\u662f\u968f\u641c\u7d22\u800c\u6765\u7684\u662f\u6bd4\u8f83\u9ad8\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\u5982\u679c\u5bf9\u6587\u6cd5\u7684\u683c\u5f0f\u6ca1\u6709\u9650\u5236\uff0c\u90a3\u4e48\u89e3\u6790 CFL \u9700\u8981 \\(\\Omicron(n^3)\\) \u7684\u65f6\u95f4\uff08\u5982 CYK \u7b97\u6cd5\uff09</p> <p>\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u9650\u5236\u6587\u6cd5\u7684\u5f62\u5f0f\uff0c\u4f7f\u5f97\u89e3\u6790 CFL \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u964d\u4f4e\u5230 \\(\\Omicron(n)\\)\uff0c\u5982</p> <ul> <li>LL(1) \u6587\u6cd5</li> <li>LR(1) \u6587\u6cd5</li> </ul>"},{"location":"CS/Compilers/ch3/ch3-1/#_9","title":"\u8bbe\u8ba1\u7f16\u7a0b\u8bed\u8a00\u7684\u6587\u6cd5","text":"<p>\u7531\u4e0a\u8ff0\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u95ee\u9898\uff0c\u4e3a\u4e86\u9ad8\u6548\u8bed\u6cd5\u5206\u6790\uff0c\u9700\u8981\u5bf9\u6587\u6cd5\u505a\u5904\u7406/\u9650\u5236\uff1a</p> <ul> <li>\u6d88\u9664\u4e8c\u4e49\u6027 (Resolving ambiguities)<ul> <li>\u4e8c\u4e49\u6027\uff1a\u53ef\u4ee5\u4e3a\u4e00\u4e2a\u53e5\u5b50\u751f\u6210\u591a\u9897\u4e0d\u540c\u7684\u5206\u6790\u6811</li> </ul> </li> <li>\u6d88\u9664\u5de6\u9012\u5f52 (Elimination of left recursions) - \u901a\u5e38\u9650\u4e8e\u81ea\u9876\u5411\u4e0b\u5206\u6790<ul> <li>\u907f\u514d\u81ea\u9876\u5411\u4e0b\u5206\u6790\u7684\u65e0\u9650\u5faa\u73af</li> </ul> </li> <li>\u63d0\u5de6\u516c\u56e0\u5b50 (Left-factoring) - \u901a\u5e38\u9650\u4e8e\u81ea\u9876\u5411\u4e0b\u5206\u6790<ul> <li>\u907f\u514d\u81ea\u9876\u5411\u4e0b\u5206\u6790\u7684\u56de\u6eaf</li> </ul> </li> </ul>"},{"location":"CS/Compilers/ch3/ch3-1/#_10","title":"\u4e8c\u4e49\u6027\u6587\u6cd5\u4e0e\u6d88\u9664\u4e8c\u4e49\u6027","text":"<p>\u5982\u679c\u6587\u6cd5\u7684\u67d0\u4e9b\u53e5\u5b50\u5b58\u5728\u4e0d\u6b62\u4e00\u68f5\u5206\u6790\u6811\uff0c\u5219\u8be5\u6587\u6cd5\u662f\u4e8c\u4e49\u7684</p> <p>\u201c\u7ed9\u5b9a CFG \u662f\u5426\u65e0\u4e8c\u4e49\u6027\uff1f\u201d\u662f\u4e0d\u53ef\u5224\u5b9a\u95ee\u9898\uff0c\u4f46\u662f\u80fd\u7ed9\u51fa\u4e00\u7ec4\u5145\u5206\u6761\u4ef6\uff0c\u4f7f\u5f97\u6ee1\u8db3\u8fd9\u7ec4\u5145\u5206\u6761\u4ef6\u7684\u6587\u6cd5\u662f\u65e0\u4e8c\u4e49\u6027\u7684</p> \u4e8c\u4e49\u6027\u6587\u6cd5\u7684\u4f8b\u5b50 <p>\u8003\u8651\u6587\u6cd5 \\(E \\rightarrow E + E | E * E | (E) | -E | \\textbf{id}\\)\uff0c\u4e32 \\(\\textbf{id} * \\textbf{id} + \\textbf{id}\\) \u6709\u4e24\u79cd\u4e0d\u540c\u7684\u6700\u5de6\u63a8\u5bfc\uff1a</p> \\[ \\begin{aligned} E &amp;\\Rightarrow E * E &amp; E &amp;\\Rightarrow E + E \\\\ &amp;\\Rightarrow \\textbf{id} * E &amp; &amp;\\Rightarrow E * E + E \\\\ &amp;\\Rightarrow \\textbf{id} * E + E &amp; &amp;\\Rightarrow \\textbf{id} * E + E \\\\ &amp;\\Rightarrow \\textbf{id} * \\textbf{id} + E &amp; &amp;\\Rightarrow \\textbf{id} * \\textbf{id} + E \\\\ &amp;\\Rightarrow \\textbf{id} * \\textbf{id} + \\textbf{id} &amp; &amp;\\Rightarrow \\textbf{id} * \\textbf{id} + \\textbf{id} \\end{aligned} \\] <p>\u4ece\u800c\u5bf9\u5e94\u4e24\u9897\u4e0d\u540c\u7684\u5206\u6790\u6811\uff1a</p> <p></p> <p>\u7f16\u7a0b\u8bed\u8a00\u7684\u6587\u6cd5\u901a\u5e38\u662f\u65e0\u4e8c\u4e49\u6027\u7684\uff0c\u5426\u5219\u5c31\u4f1a\u5bfc\u81f4\u4e00\u4e2a\u7a0b\u5e8f\u6709\u591a\u79cd\u201c\u6b63\u786e\u201d\u7684\u89e3\u91ca\uff0c\u4f8b\u5982\u5728\u4e0a\u4f8b\u4e2d\uff0c\u5de6\u8fb9\u7684\u5206\u6790\u6811\u4f1a\u5148\u8ba1\u7b97\u52a0\u6cd5\uff0c\u800c\u53f3\u8fb9\u7684\u5206\u6790\u6811\u4f1a\u5148\u8ba1\u7b97\u4e58\u6cd5</p> <p>\u4ee5\u62bd\u8c61\u7684\u601d\u7ef4\u601d\u8003\u4e8c\u4e49\u6027\u7684\u6839\u6e90\uff0c\u53ef\u4ee5\u8fd9\u6837\u8868\u8ff0\uff1a\u591a\u79cd\u201c\u6b63\u786e\u201d\u63a8\u5bfc\u5904\u4e8e\u6587\u6cd5\u540c\u4e00\u5c42\u3002\u56e0\u6b64\u53ef\u4ee5\u91c7\u7528\u5206\u5c42\u7684\u65b9\u5f0f\u6765\u786e\u4fdd\u53ea\u6709\u4e00\u79cd\u6700\u5de6\u63a8\u5bfc\uff0c\u6d88\u9664\u4e8c\u4e49\u6027\uff1a</p> <ul> <li>\u89c4\u5b9a\u7b26\u53f7\u7684\u4f18\u5148\u7ea7<ul> <li>\u6839\u636e\u7b97\u7b26\u4e0d\u540c\u7684\u4f18\u5148\u7ea7\uff0c\u5f15\u5165\u65b0\u7684\u975e\u7ec8\u7ed3\u7b26</li> <li>\u8d8a\u63a5\u8fd1\u5f00\u59cb\u7b26\u53f7 \\(S\\) \u7684\u6587\u6cd5\u7b26\u53f7\u4f18\u5148\u7ea7\u8d8a\u4f4e</li> </ul> </li> <li>\u89c4\u5b9a\u7b26\u53f7\u7684\u7ed3\u5408\u6027<ul> <li>\u9012\u5f52\u975e\u7ec8\u7ed3\u7b26\u5728\u7ec8\u7ed3\u7b26\u5de6\u8fb9\uff0c\u8fd0\u7b97\u5c31\u5de6\u7ed3\u5408\u3002\u5982 \\(A \\rightarrow A \\beta\\)\uff0c\\(A\\) \u5728\u7ec8\u7ed3\u7b26\uff08\u5982 \\(*\\)\uff09\u5de6\u4fa7\u51fa\u73b0\uff08\u5373\u7ec8\u7ed3\u7b26\u5728 \\(\\beta\\) \u4e2d\uff09</li> </ul> </li> </ul> \u6d88\u9664\u4e8c\u4e49\u6027 <p>\u4ee5\u4e0b\u539f\u59cb\u6587\u6cd5\u4e3a\u4f8b\uff1a</p> \\[ \\begin{aligned} E &amp;\\rightarrow E + E &amp; | E * E &amp; | (E) | \\textbf{id} \\end{aligned} \\] <p>\u901a\u8fc7\u5f15\u5165\u4f18\u5148\u7ea7\u548c\u7ed3\u5408\u6027\uff0c\u53ef\u4ee5\u6d88\u9664\u4e8c\u4e49\u6027\uff1a</p> \\[ \\begin{aligned} E &amp;\\rightarrow E + T | T \\\\ T &amp;\\rightarrow T * F | F \\\\ F &amp;\\rightarrow (E) | \\textbf{id} \\end{aligned} \\] <p>\u5728\u4fee\u6539\u540e\u7684\u6587\u6cd5\u4e2d\uff0c\\(+\\) \u548c \\(*\\) \u90fd\u662f\u5de6\u7ed3\u5408\u7684\uff0c\u4e14 \\(*\\) \u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e \\(+\\)</p> Parser \u81ea\u52a8\u751f\u6210\u5668\u4e2d\u6d88\u9664\u4e8c\u4e49\u6027 <p>\u5728 Yacc\uff08Parser\u81ea\u52a8\u751f\u6210\u5668\uff09\u7b49\u5de5\u5177\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u6307\u5b9a\u4f18\u5148\u7ea7\u3001\u7ed3\u5408\u6027\u800c\u65e0\u9700\u81ea\u5df1\u91cd\u5199\u6587\u6cd5</p> <pre><code>%left '+' '-'\n%left '*' '/'\n%right '-'\n</code></pre>"},{"location":"CS/Compilers/ch3/ch3-1/#_11","title":"*\u901a\u5e38\u7684\u7b26\u53f7\u7ea6\u5b9a","text":"<ul> <li>\u7ec8\u7ed3\u7b26 (Terminals, T)<ul> <li>\u5b57\u6bcd\u8868\u4e2d\u6392\u5728\u524d\u9762\u7684\u5c0f\u5199\u5b57\u6bcd\uff0c\u5982 \\(a,\\ b,\\ c\\)</li> <li>\u8fd0\u7b97\u7b26\uff0c\u5982 \\(+,\\ *\\) \u7b49</li> <li>\u6807\u70b9\u7b26\u53f7\uff0c\u5982\u62ec\u53f7\u3001\u9017\u53f7\u7b49</li> <li>\u6570\u5b57 \\(0,\\ 1,\\ \\ldots,\\ 9\\)</li> <li>\u7c97\u4f53\u5b57\u7b26\u4e32\uff0c\u5982 \\(\\textbf{id},\\ \\textbf{if}\\) \u7b49</li> </ul> </li> <li>\u975e\u7ec8\u7ed3\u7b26 (Nonterminals\uff0c N)<ul> <li>\u5b57\u6bcd\u8868\u4e2d\u6392\u5728\u524d\u9762\u7684\u5927\u5199\u5b57\u6bcd\uff0c\u5982 \\(A,\\ B,\\ C\\)</li> <li>\u5b57\u6bcd \\(S\\)\uff08\u901a\u5e38\u8868\u793a\u5f00\u59cb\u7b26\u53f7\uff09</li> <li>\u5c0f\u5199\u3001\u659c\u4f53\u7684\u540d\u5b57\uff0c\u5982 \\(expr,\\ stmt\\) \u7b49</li> <li>\u4ee3\u8868\u7a0b\u5e8f\u6784\u9020\u7684\u5927\u5199\u5b57\u6bcd\uff0c\u5982 \\(E\\)\uff08\u8868\u8fbe\u5f0f\uff09\u3001\\(T\\)\uff08\u9879\uff09</li> </ul> </li> <li>\u5176\u4ed6<ul> <li>\u5b57\u6bcd\u8868\u4e2d\u6392\u5728\u540e\u9762\u7684\u5927\u5199\u5b57\u6bcd\uff08\u5982 \\(X,\\ Y,\\ Z\\)\uff09\u8868\u793a\u6587\u6cd5\u7b26\u53f7\uff08\u5373\u7ec8\u7ed3\u7b26\u6216\u975e\u7ec8\u7ed3\u7b26\uff09</li> <li>\u5b57\u6bcd\u8868\u4e2d\u6392\u5728\u540e\u9762\u7684\u5c0f\u5199\u5b57\u6bcd\uff08\u4e3b\u8981\u662f \\(u,\\ v,\\ \\ldots,\\ z\\)\uff09\u8868\u793a\u7ec8\u7ed3\u7b26\u53f7\u4e32\uff08\u5305\u62ec\u7a7a\u4e32\uff09</li> <li>\u5c0f\u5199\u5e0c\u814a\u5b57\u6bcd\uff0c\u5982 \\(\\alpha,\\ \\beta,\\ \\gamma\\)\uff0c\u8868\u793a\u6587\u6cd5\u7b26\u53f7\u4e32\uff08\u5305\u62ec\u7a7a\u4e32\uff09</li> <li>\u9664\u975e\u7279\u522b\u8bf4\u660e\uff0c\u7b2c\u4e00\u4e2a\u4ea7\u751f\u5f0f\u7684\u5de6\u90e8\u5c31\u662f\u5f00\u59cb\u7b26\u53f7</li> </ul> </li> </ul>"},{"location":"CS/Compilers/ch3/ch3-1/#_12","title":"\u603b\u7ed3","text":"<p>\u57fa\u4e8e\u65e0\u4e8c\u4e49\u6587\u6cd5\u7684 Parsing \u6709\u4e24\u79cd\u4e3b\u8981\u65b9\u6cd5\uff1a</p> <ul> <li>\u81ea\u9876\u5411\u4e0b (Top-down): LL(1), ...<ul> <li>LL Parser \u7684\u4f18\u52bf\u5728\u4e8e\u4ee3\u7801\u7ed3\u6784\u4e0e\u6587\u6cd5\u5bf9\u5e94\uff0c\u4e14\u65b9\u4fbf\u624b\u52a8\u5b9e\u73b0</li> </ul> </li> <li>\u81ea\u5e95\u5411\u4e0a (Bottom-up): LR(1), LALR(1), ...<ul> <li>LR Parser \u7684\u4f18\u52bf\u5728\u4e8e\u8868\u8fbe\u80fd\u529b\u5f3a</li> </ul> </li> </ul> <p></p>"},{"location":"CS/Compilers/ch3/ch3-2/","title":"\u81ea\u9876\u5411\u4e0b\u5206\u6790","text":"<p> \u7ea6 2762 \u4e2a\u5b57  72 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 10 \u5206\u949f</p> <p>\u81ea\u9876\u5411\u4e0b\u5206\u6790\u9700\u8981\u4ece\u5206\u6790\u6811\u7684\u9876\u90e8\u5411\u5e95\u90e8\u65b9\u5411\u6784\u9020\u5206\u6790\u6811\uff0c\u5373\u4ece\u6587\u6cd5\u5f00\u59cb\u7b26\u53f7 \\(S\\) \u63a8\u5bfc\u51fa\u4e32 \\(w\\)\u3002\u5728\u6bcf\u4e00\u6b65\u63a8\u5230\u4e2d\uff0c\u90fd\u9700\u8981\u505a\u4e24\u4e2a\u9009\u62e9\uff1a</p> <ul> <li>\u66ff\u6362\u5f53\u524d\u53e5\u578b\u4e2d\u7684\u54ea\u4e2a\u975e\u7ec8\u7ed3\u7b26\uff1f<ul> <li>\u81ea\u9876\u5411\u4e0b\u5206\u6790\u603b\u662f\u9009\u62e9\u6bcf\u4e2a\u53e5\u578b\u7684\u6700\u5de6\u975e\u7ec8\u7ed3\u7b26\u8fdb\u884c\u66ff\u6362</li> </ul> </li> <li>\u7528\u8be5\u975e\u7ec8\u7ed3\u7b26\u7684\u54ea\u4e2a\u4ea7\u751f\u5f0f\u8fdb\u884c\u66ff\u6362\uff1f</li> </ul> <p>\u63a5\u4e0b\u6765\u5c06\u4f1a\u4e3a\u7b2c\u4e8c\u4e2a\u95ee\u9898\u63d0\u4f9b\u89e3\u51b3\u65b9\u6848</p>"},{"location":"CS/Compilers/ch3/ch3-2/#_2","title":"\u5141\u8bb8\u56de\u6eaf\u7684\u9012\u5f52\u4e0b\u964d\u5206\u6790","text":"<p>\u9012\u5f52\u4e0b\u964d\u5206\u6790 (Recursive-Descent Parsing) \u662f\u81ea\u9876\u5411\u4e0b\u5206\u6790\u7684\u901a\u7528\u5f62\u5f0f</p> <ul> <li>\u7531\u4e00\u7ec4\u8fc7\u7a0b/\u51fd\u6570\u7ec4\u6210\uff0c\u6bcf\u4e2a\u8fc7\u7a0b\u5bf9\u5e94\u4e00\u4e2a\u975e\u7ec8\u7ed3\u7b26</li> <li>\u4ece\u5f00\u59cb\u7b26\u53f7 \\(S\\) \u5bf9\u5e94\u7684\u8fc7\u7a0b\u5f00\u59cb\uff0c\uff08\u9012\u5f52\uff09\u8c03\u7528\u5176\u5b83\u8fc7\u7a0b</li> <li>\u5982\u679c \\(S\\) \u5bf9\u5e94\u7684\u8fc7\u7a0b\u6070\u597d\u626b\u63cf\u4e86\u6574\u4e2a\u8f93\u5165\u4e32\uff0c\u5219\u6210\u529f\u5b8c\u6210\u5206\u6790</li> </ul> <p>\u5bf9\u4e8e\u975e\u7ec8\u7ed3\u7b26 \\(A\\) \u7684\u6587\u6cd5\u89c4\u5219 \\(A \\rightarrow X_1 \\ldots X_k\\)\uff0c\u5bf9\u5e94\u7684\u8fc7\u7a0b\u4e3a\uff1a</p> <ul> <li>\u5982\u679c \\(X_i\\) \u662f\u975e\u7ec8\u7ed3\u7b26\uff0c\u5219\u8c03\u7528\u76f8\u5e94\u975e\u7ec8\u7ed3\u7b26\u5bf9\u5e94\u7684\u8fc7\u7a0b</li> <li>\u5982\u679c \\(X_i\\) \u662f\u7ec8\u7ed3\u7b26 \\(a\\)\uff0c\u5219\u68c0\u67e5\u8f93\u5165\u4e32\u662f\u5426\u5339\u914d\u8be5\u7ec8\u7ed3\u7b26\uff0c\u5339\u914d\u8f93\u5165\u4e32\u4e2d\u5bf9\u5e94\u7684\u7ec8\u7ed3\u7b26 \\(a\\)</li> <li>\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u5982\u679c\u9009\u62e9\u4e86\u4e0d\u5408\u9002\u7684\u4ea7\u751f\u5f0f\uff0c\u53ef\u80fd\u9700\u8981\u56de\u6eaf\uff08\u5982\u66f4\u6362\u4ea7\u751f\u5f0f\uff09</li> </ul> \u9012\u5f52\u4e0b\u964d\u5206\u6790\u7684\u4f8b\u5b50 <p>\u8003\u8651\u6587\u6cd5</p> \\[ \\begin{aligned} S &amp;\\rightarrow cAd \\\\ A &amp;\\rightarrow ab | a \\end{aligned} \\] <p>\u4e3a\u8f93\u5165\u4e32 \\(w = cad\\) \u4f7f\u7528\u9012\u5f52\u4e0b\u964d\u5206\u6790\u5efa\u7acb\u5206\u6790\u6811\uff08\u5047\u8bbe\u6309\u987a\u5e8f\u9009\u4ea7\u751f\u5f0f\uff09\uff0c\u8fc7\u7a0b\u5982\u4e0b\uff1a</p> <p></p> <p>\u4f46\u662f\u5728\u901a\u7528\u9012\u5f52\u4e0b\u964d\u4e2d\uff0c\u5b58\u5728\u4e00\u4e2a\u5f88\u5927\u7684\u95ee\u9898\uff1a\u56de\u6eaf</p> <ul> <li>\u590d\u6742\u7684\u56de\u6eaf\u5bfc\u81f4\u4ee3\u4ef7\u592a\u9ad8<ul> <li>\u975e\u7ec8\u7ed3\u7b26\u6709\u53ef\u80fd\u6709\u591a\u4e2a\u4ea7\u751f\u5f0f\uff0c\u7531\u4e8e\u4fe1\u606f\u7f3a\u5931\uff0c\u65e0\u6cd5\u51c6\u786e\u9884\u6d4b\u9009\u62e9\u54ea\u4e00\u4e2a</li> <li>\u8003\u8651\u5230\u5f80\u5f80\u9700\u8981\u5bf9\u591a\u4e2a\u975e\u7ec8\u7ed3\u7b26\u8fdb\u884c\u63a8\u5bfc\u5c55\u5f00\uff0c\u56e0\u6b64\u5c1d\u8bd5\u7684\u8def\u5f84\u53ef\u80fd\u5448\u6307\u6570\u7ea7\u7206\u70b8\uff08\u5982 \\(a \\rightarrow ab | a\\)\uff0c\u4e0d\u786e\u5b9a\u9009\u62e9\u54ea\u6761\u4ea7\u751f\u5f0f\uff09</li> </ul> </li> <li>\u8ba1\u7b97\u8fc7\u7a0b\u7c7b\u4f3c\u4e8e NFA</li> </ul> <p>\u6240\u4ee5\u9700\u8981\u6784\u9020\u4e00\u4e2a\u7c7b\u4f3c\u4e8e DFA \u7684\u5206\u6790\u65b9\u5f0f</p>"},{"location":"CS/Compilers/ch3/ch3-2/#ll1","title":"LL(1) \u548c\u9884\u6d4b\u5206\u6790\u6cd5","text":""},{"location":"CS/Compilers/ch3/ch3-2/#ll1_1","title":"LL(1) \u6587\u6cd5\u7684\u5b9a\u4e49","text":"<p>\u9884\u6d4b\u5206\u6790\u6cd5 (Predictive Parsing) \u53ef\u4ee5\u63a5\u53d7 LL(k) \u6587\u6cd5\uff0c\u5176\u4e2d\uff1a</p> <ul> <li>\u7b2c\u4e00\u4e2a L \u8868\u793a left-to-right\uff0c\u5373\u4ece\u5de6\u5230\u53f3\u626b\u63cf\u8f93\u5165\u4e32</li> <li>\u7b2c\u4e8c\u4e2a L \u8868\u793a leftmost derivation\uff0c\u5373\u6700\u5de6\u63a8\u5bfc</li> <li>k \u8868\u793a\u5411\u524d\u770b Token \u7684\u4e2a\u6570\uff0c\u5373\u5411\u524d\u770b \\(k\\) \u4e2a Token \u6765\u786e\u5b9a\u4ea7\u751f\u5f0f\uff08\u901a\u5e38 \\(k = 1\\)\uff09</li> </ul> <p>\u4e3a\u4e86\u7ed9\u6587\u6cd5\u52a0\u4ee5\u9650\u5236\u6765\u786e\u4fdd\u6ca1\u6709\u56de\u6eaf\uff0c\u6211\u4eec\u5148\u6765\u5b9a\u4e49 First \u96c6\u548c Follow \u96c6\u3002\u7ed9\u5b9a\u6587\u6cd5 \\(G = (T, N, P, S)\\)\uff1a</p> <ul> <li>\\(\\text{First}(\\alpha) = \\{a | \\alpha \\Rightarrow^* a \\ldots, a \\in T\\}, \\alpha \\in (T \\cup N)^*\\)<ul> <li>\u5373\u53ef\u4ece \\(\\alpha\\) \u63a8\u5bfc\u5f97\u5230\u7684\u4e32\u7684\u9996\u4e2a\u7ec8\u7ed3\u7b26\u7684\u96c6\u5408</li> </ul> </li> <li>\\(\\text{Follow}(A) = \\{a | S \\Rightarrow^* \\ldots Aa \\ldots, a \\in T\\}, A \\in N\\)<ul> <li>\u5373\u4ece \\(S\\) \u51fa\u53d1, \u53ef\u80fd\u5728\u63a8\u5bfc\u8fc7\u7a0b\u4e2d\u8ddf\u5728 \\(A\\) \u53f3\u8fb9\u7684\u7ec8\u7ed3\u7b26\u53f7\u96c6</li> <li>\u4f8b\u5982 \\(S \\rightarrow \\alpha A a \\beta\\)\uff0c\u5219\u7ec8\u7ed3\u7b26\u53f7 \\(a \\in \\text{Follow}(A)\\)</li> </ul> </li> </ul> <p>\u7531\u6b64\u6211\u4eec\u53ef\u4ee5\u7ed9\u51fa LL(1) \u6587\u6cd5\u7684\u5b9a\u4e49\uff1a\u6587\u6cd5G\u7684\u4efb\u4f55\u4e24\u4e2a\u4ea7\u751f\u5f0f \\(A \\rightarrow \\alpha | \\beta\\) \u90fd\u6ee1\u8db3\u4e0b\u5217\u6761\u4ef6</p> <ul> <li>\\(\\text{First}(\\alpha) \\cap \\text{First}(\\beta) = \\emptyset\\)\uff0c\u5373 \\(\\alpha\\) \u548c \\(\\beta\\) \u63a8\u5bfc\u4e0d\u51fa\u4ee5\u540c\u4e00\u4e2a\u5355\u8bcd\u4e3a\u9996\u7684\u4e32</li> <li>\u82e5 \\(\\beta \\Rightarrow^* \\epsilon\\)\uff0c\u5219 \\(\\alpha \\nRightarrow^* \\epsilon\\)\uff0c\u4e14 \\(\\text{First}(\\alpha) \\cap \\text{Follow}(A) = \\emptyset\\)</li> </ul> <p>\u8fd9\u6837\uff0c\u53ef\u4ee5\u4fdd\u8bc1\u4ea7\u751f\u5f0f\u9009\u62e9\u7684\u552f\u4e00\u6027</p> \u4e3a\u4ec0\u4e48\u8fd9\u4e48\u5b9a\u4e49 LL(1) \u6587\u6cd5\uff1f <p>\u5bf9\u4e8e\u7b2c\u4e00\u4e2a\u6761\u4ef6\u800c\u8a00\uff0c\u5b58\u5728\u7684\u610f\u4e49\u4e3a\uff1a\u5047\u8bbe\u4e0b\u4e00\u4e2a\u8f93\u5165\u662f \\(b\\)\uff0c\u4e14 \\(\\text{First}(\\alpha)\\) \u548c \\(\\text{First}(\\beta)\\) \u4e0d\u76f8\u4ea4\uff0c\u90a3\u4e48</p> <ul> <li>\u82e5 \\(b \\in \\text{First}(\\alpha)\\)\uff0c\u5219\u9009\u62e9 \\(\\alpha\\)</li> <li>\u82e5 \\(b \\in \\text{First}(\\beta)\\)\uff0c\u5219\u9009\u62e9 \\(\\beta\\)</li> </ul> <p>\u5bf9\u4e8e\u7b2c\u4e8c\u4e2a\u6761\u4ef6\u800c\u8a00\uff0c\u5b58\u5728\u7684\u610f\u4e49\u4e3a\uff1a\u5047\u8bbe\u4e0b\u4e00\u4e2a\u8f93\u5165\u662f \\(b\\) \u4e14 \\(\\beta \\Rightarrow^* \\epsilon\\)\uff0c\u90a3\u4e48</p> <ul> <li>\u82e5 \\(b \\in \\text{First}(\\alpha)\\)\uff0c\u5219\u9009\u62e9 \\(\\alpha\\)\uff08\u5c5e\u4e8e\u7b2c\u4e00\u4e2a\u6761\u4ef6\u4e2d\u7684\u60c5\u51b5\uff09</li> <li>\u82e5 \\(b \\in \\text{Follow}(A)\\)\uff0c\u5219\u9009\u62e9 \\(\\beta\\)\uff0c\u56e0\u4e3a\u8fd9\u6837\u53ef\u4ee5\u4f7f\u5f97 \\(A \\Rightarrow^* \\epsilon\\) \u4e14\u540e\u9762\u8ddf\u7740 \\(b\\)</li> </ul>"},{"location":"CS/Compilers/ch3/ch3-2/#ll1_2","title":"\u5b9e\u73b0 LL(1) \u9884\u6d4b\u5206\u6790","text":""},{"location":"CS/Compilers/ch3/ch3-2/#first-follow","title":"\u8ba1\u7b97 First \u548c Follow \u96c6","text":"<p>\u7531\u4e8e\u5728 First \u548c Follow \u96c6\u4e2d\u6d89\u53ca\u7a7a\u4e32\uff0c\u56e0\u6b64\u6211\u4eec\u5f15\u5165 Nullable \u7684\u6982\u5ff5\uff1a\\(X\\) \u662f Nullable \u7684\uff0c\u5373 \\(X\\) \u80fd\u63a8\u5bfc\u51fa\u7a7a\u4e32</p> <p>\u6211\u4eec\u63a5\u7740\u7ed9\u51fa Nullable\uff0cFirst \u548c Follow \u96c6\u7684\u5f52\u7eb3\u5b9a\u4e49\uff1a</p> <p>Nullable \u7684\u5f52\u7eb3\u5b9a\u4e49\uff1a\\(X\\) \u662f Nullable \u7684\uff0c\u5f53\u4e14\u4ec5\u5f53</p> <ul> <li>Base case: \\(X \\rightarrow \\epsilon\\)</li> <li>Inductive case: \u82e5 \\(X \\rightarrow Y_1 Y_2 \\ldots Y_k\\)\uff0c\u4e14 \\(Y_1, Y_2, \\ldots, Y_k \\in N\\) \u90fd\u662f Nullable \u7684</li> </ul> <p>First \u7684\u5f52\u7eb3\u5b9a\u4e49\uff1a\\(\\text{First}(\\alpha) = \\{a | \\alpha \\Rightarrow^* a \\ldots, a \\in T\\}\\)</p> <ul> <li>Base case: \\(\\text{First}(X) = \\{X\\}\\)\uff0c\u5982\u679c \\(X \\in T\\)</li> <li>Inductive case: \u82e5 \\(X \\rightarrow Y_1 Y_2 \\ldots Y_k\\)\uff0c\u5219<ul> <li>\\(\\text{First}(X) \\ \\cup= \\text{First}(Y_1)\\)</li> <li>\u5982\u679c \\(Y_1 \\in \\text{Nullable}\\)\uff0c\u5219 \\(\\text{First}(X) \\ \\cup= \\text{First}(Y_2)\\)</li> <li>\u5982\u679c \\(Y_1, Y_2 \\in \\text{Nullable}\\)\uff0c\u5219 \\(\\text{First}(X) \\ \\cup= \\text{First}(Y_3)\\)</li> <li>...</li> </ul> </li> </ul> <p>\u8865\u5145\u8bf4\u660e\uff1a\u867d\u7136\u4e0a\u8ff0\u89c4\u5219\u770b\u8d77\u6765\u662f\u5173\u4e8e\u5355\u4e2a\u975e\u7ec8\u7ed3\u7b26\u6216\u7ec8\u7ed3\u7b26\u7684\uff0c\u4f46\u662f\u5b9e\u9645\u4e2d First \u662f\u5173\u4e8e\u6587\u6cd5\u7b26\u53f7\u4e32 \\(\\alpha\\)\uff08\u7c7b\u4f3c\u4e8e\u4ea7\u751f\u5f0f\u53f3\u90e8\uff09\u7684\uff0c\u8ba1\u7b97\u89c4\u5219\u7c7b\u4f3c\u4e8e Inductive case</p> <p>Follow \u7684\u5f52\u7eb3\u5b9a\u4e49\uff1a\\(\\text{Follow}(A) = \\{a | S \\Rightarrow^* \\ldots Aa \\ldots, a \\in T\\}\\)</p> <ul> <li>Base case: \\(\\text{Follow}(S) = \\{\\$\\}\\)</li> <li>Inductive case: \u82e5\u5b58\u5728\u4ea7\u751f\u5f0f \\(B \\rightarrow s_1 A s_2, s_1, s_2 \\in (T \\cup N)^*\\)\uff0c\u5219<ul> <li>\\(\\text{Follow}(A) \\ \\cup= \\text{First}(s_2)\\)</li> <li>\u5982\u679c \\(s_2 \\in \\text{Nullable}\\)\uff0c\u5219 \\(\\text{Follow}(A) \\ \\cup= \\text{Follow}(B)\\)</li> </ul> </li> </ul> <p>\u8865\u5145\u8bf4\u660e\uff1a\u5173\u4e8e Inductive case \u7684\u7b2c 2 \u79cd\u60c5\u51b5, \u5047\u8bbe \\(S \\Rightarrow^* \\ldots B b \\ldots\\)\uff0c\u5373 \\(b \\in \\text{Follow}(B)\\)</p> <ul> <li>\u7528 \\(s_1 A s_2\\) \u66ff\u6362 \\(B\\)\uff0c\u5f97\u5230 \\(S \\Rightarrow^* \\ldots s_1 A s_2 b \\ldots\\)</li> <li>\u7531\u4e8e \\(s_2 \\in \\text{Nullable}\\)\uff0c\u56e0\u6b64 \\(b \\in \\text{Follow}(A)\\)</li> </ul> \u8ba1\u7b97 Nullable\uff0cFirst \u548c Follow \u96c6 <p></p> \u4f18\u5316 Nullable, First, Follow \u7684\u8ba1\u7b97 - Tiger book algorithm 3.13 <p><pre>\n\\begin{algorithm}\n\\caption{Calculate Nullable, First, Follow}\n\\begin{algorithmic}\n\\Function{CalculateNullableFirstFollow}{}\n    \\State Initialize \\(\\text{First}\\) and \\(\\text{Follow}\\) to all empty sets, and \\(\\text{Nullable}\\) to all false\n    \\For{each terminal symbol \\(Z\\)}\n        \\State \\(\\text{First}[Z] \\gets \\{Z\\}\\)\n    \\EndFor\n    \\Repeat\n        \\For{each production \\(X \\rightarrow Y_1 Y_2 \\ldots Y_k\\)}\n            \\For{each \\(i\\) from \\(1\\) to \\(k\\), each \\(j\\) from \\(i+1\\) to \\(k\\)}\n                \\If{all the \\(Y_i\\) are nullable}\n                    \\State \\(\\text{Nullable}[X] \\gets \\text{true}\\)\n                \\EndIf\n                \\If{\\(Y_1, \\ldots, Y_{i-1}\\) are all nullable}\n                    \\State \\(\\text{First}[X] \\gets \\text{First}[X] \\cup \\text{First}[Y_i]\\)\n                \\EndIf\n                \\If{\\(Y_{i+1}, \\ldots, Y_k\\) are all nullable}\n                    \\State \\(\\text{Follow}[Y_i] \\gets \\text{Follow}[Y_i] \\cup \\text{Follow}[X]\\)\n                \\EndIf\n                \\If{\\(Y_{i+1}, \\ldots, Y_{j-1}\\) are all nullable}\n                    \\State \\(\\text{Follow}[Y_i] \\gets \\text{Follow}[Y_i] \\cup \\text{First}[Y_j]\\)\n                \\EndIf\n            \\EndFor\n        \\EndFor\n    \\Until{\\(\\text{First}\\), \\(\\text{Follow}\\), and \\(\\text{Nullable}\\) no longer change}\n\\EndFunction\n\\end{algorithmic}\n\\end{algorithm}\n</pre></p>"},{"location":"CS/Compilers/ch3/ch3-2/#_3","title":"\u6784\u9020\u9884\u6d4b\u5206\u6790\u8868","text":"<p>\u9884\u6d4b\u5206\u6790\u8868\u662f\u8868\u9a71\u52a8\u5206\u6790\u7a0b\u5e8f\u9700\u8981\u7684\u4e8c\u7ef4\u8868\uff08\u8bb0\u4e3a \\(M\\)\uff09\uff0c\u5176\u4e2d</p> <ul> <li>\u8868\u7684\u6bcf\u4e00\u884c \\(A\\) \u5bf9\u5e94\u4e00\u4e2a\u975e\u7ec8\u7ed3\u7b26</li> <li>\u8868\u7684\u6bcf\u4e00\u5217 \\(a\\) \u5bf9\u5e94\u67d0\u4e2a\u7ec8\u7ed3\u7b26\u6216\u8f93\u5165\u7ed3\u675f\u7b26 \\(\\$\\)</li> <li>\u8868\u4e2d\u7684\u9879 \\(M(A,a)\\) \u8868\u793a: \u9488\u5bf9\u975e\u7ec8\u7ed3\u7b26\u4e3a \\(A\\)\uff0c\u5f53\u4e0b\u4e00\u4e2a\u8f93\u5165 Token \u4e3a \\(a\\) \u65f6\uff0c\u53ef\u9009\u7684\u4ea7\u751f\u5f0f\u96c6\u5408\uff08\u82e5\u4e3a\u7a7a\uff0c\u8868\u793a\u8bed\u6cd5\u9519\u8bef syntax errors\uff09</li> </ul> <p>\u6784\u9020\u65b9\u6cd5\u4e3a\uff1a\u5bf9\u6587\u6cd5 \\(G\\) \u7684\u6bcf\u4e2a\u4ea7\u751f\u5f0f \\(X \\rightarrow \\gamma\\)</p> <ul> <li>\u5bf9\u6bcf\u4e2a \\(t \\in \\text{First}(\\gamma)\\)\uff0c\u5219\u5c06 \\(X \\rightarrow \\gamma\\) \u52a0\u5165 \\(M[X, t]\\)</li> <li>\u53e6\u5982\u679c \\(\\gamma \\in \\text{Nullable}\\)\uff0c\u4e14 \\(t \\in \\text{Follow}(X)\\)\uff0c\u5219\u5c06 \\(X \\rightarrow \\gamma\\) \u52a0\u5165 \\(M[X, t]\\)</li> </ul> \u6784\u9020\u9884\u6d4b\u5206\u6790\u8868 <p>\u4ee5 \u8ba1\u7b97 Nullable\uff0cFirst \u548c Follow \u96c6 \u4e3a\u4f8b\uff0c\u6784\u9020\u9884\u6d4b\u5206\u6790\u8868\u5982\u4e0b\uff1a  \u53ef\u4ee5\u770b\u5230\u5728\u8868\u4e2d [\\(Z\\), \\(d\\)]\u3001[\\(Y\\), \\(c\\)]\u3001[\\(X\\), \\(a\\)] \u7b49\u9879\u5904\u6709\u591a\u4e2a\u4ea7\u751f\u5f0f\uff0c\u8868\u660e\u5b58\u5728\u4e8c\u4e49\u6027\uff0c\u8be5\u6587\u6cd5\u4e0d\u662f LL(1) \u6587\u6cd5</p> <p>\u7531\u9884\u6d4b\u5206\u6790\u8868\u53ef\u4ee5\u7ed9\u51fa LL(1) \u6587\u6cd5\u7684\u53e6\u4e00\u4e2a\u5b9a\u4e49\uff1a\u5982\u679c\u6587\u6cd5 \\(G\\) \u7684\u9884\u6d4b\u5206\u6790\u8868\u4e2d\u6bcf\u4e2a\u9879\u90fd\u81f3\u591a\u6709\u4e00\u4e2a\u4ea7\u751f\u5f0f\uff0c\u5219\u6587\u6cd5 \\(G\\) \u662f LL(1) \u6587\u6cd5</p>"},{"location":"CS/Compilers/ch3/ch3-2/#_4","title":"\u9884\u6d4b\u5206\u6790","text":"<p>\u5bf9\u4e8e LL(1) \u5206\u6790\uff0c\u6709\u4e24\u79cd\u5b9e\u73b0\u65b9\u5f0f\uff1a</p> <ul> <li>\u9012\u5f52\u4e0b\u964d\u5b9e\u73b0<ul> <li>\u9012\u5f52\u4e0b\u964d\u8bed\u6cd5\u5206\u6790\u7a0b\u5e8f\u7531\u4e00\u7ec4\u8fc7\u7a0b\u7ec4\u6210</li> <li>\u6bcf\u4e2a\u975e\u7ec8\u7ed3\u7b26\u53f7\u5bf9\u5e94\u4e8e\u4e00\u4e2a\u8fc7\u7a0b</li> <li>\u53ef\u4ee5\u901a\u8fc7\u5411\u524d\u770b\u4e00\u4e2a\u8f93\u5165\u7b26\u53f7\u6765\u552f\u4e00\u5730\u9009\u62e9\u4ea7\u751f\u5f0f</li> </ul> </li> <li>*\u975e\u9012\u5f52\u5b9e\u73b0<ul> <li>\u53ef\u4ee5\u770b\u4f5c\u662f\u5b9e\u73b0 LL(1) \u5bf9\u5e94\u7684\u7684 PDA (pushdown automata)</li> <li>\u9488\u5bf9\u8f93\u5165\u4e32 \\(w\\)\uff0c\u6709\u4e24\u4e2a\u57fa\u672c\u52a8\u4f5c<ul> <li>\u5982\u679c\u6808\u9876\u662f\u975e\u7ec8\u7ed3\u7b26 \\(A\\)\uff0c\u5219\u5229\u7528\u9884\u6d4b\u5206\u6790\u8868, \u9009\u62e9\u4ea7\u751f\u5f0f \\(A \\rightarrow \\alpha\\)\uff0c\u5c06\u6808\u9876\u7684\u975e\u7ec8\u7ed3\u7b26 \\(A\\) \u66ff\u6362\u6210\u4e32 \\(\\alpha\\)</li> <li>\u5982\u679c\u6808\u9876\u662f\u7ec8\u7ed3\u7b26 \\(\\alpha\\)\uff0c\u5219\u5c06\u6808\u9876\u8bb0\u53f7 \\(\\alpha\\) \u548c\u8f93\u5165\u4e2d\u7684 Token \u5339\u914d</li> </ul> </li> </ul> </li> </ul> <p>\u5bf9\u4e8e\u9012\u5f52\u4e0b\u964d\u5b9e\u73b0\u4e2d\uff0c\u4e00\u4e2a\u8fc7\u7a0b\u53ef\u4ee5\u8868\u793a\u4e3a\uff1a</p> <pre><code>void A() {\n    // \u6839\u636e Lookahead Token \u4e0e\u9884\u6d4b\u5206\u6790\u8868\u9009\u62e9\u4ea7\u751f\u5f0f\n    // \u8bb0\u8be5\u4ea7\u751f\u5f0f\u4e3a A -&gt; X1 X2 ... Xn\n    // ...\n\n    for (int i = 0; i &lt; k; i++) {\n        if (isNonterminal(Xi)) {\n            // \u8c03\u7528\u5bf9\u5e94\u7684\u8fc7\u7a0b\n            Xi();\n        } else if (Xi == inputToken) {\n            // \u5339\u914d\u8f93\u5165 Token\n            eat(inputToken);\n        } else {\n            // \u8bed\u6cd5\u9519\u8bef\n            error();\n        }\n    }\n}\n</code></pre> LL(1) \u7684\u9012\u5f52\u4e0b\u964d\u5b9e\u73b0 <p>\u8003\u8651\u6587\u6cd5</p> \\[ \\begin{aligned} S &amp;\\rightarrow \\textbf{if}\\ E\\ \\textbf{then}\\ S\\ \\textbf{else}\\ S\\ |\\ \\textbf{begin}\\ S\\ L\\ |\\ \\textbf{print}\\ E \\\\ L &amp;\\rightarrow \\textbf{end}\\ |\\ \\textbf{;}\\ S\\ L \\\\ E &amp;\\rightarrow \\textbf{num} = \\textbf{num} \\end{aligned} \\] <p>Step 1: Represent the token <pre><code>enum token {IF, THEN, ELSE, BEGIN, END, PRINT, SEMI, NUM, EQ};\n</code></pre></p> <p>Step 2: build infrastructure for reading tokens from lexer <pre><code>// call lexer\nextern enum token getToken(void);\n// store the next token\nenum token tok;\nvoid advance() {\n    tok=getToken();\n}\n// consume the next token and get the new one\nvoid eat(enum token t) {\n    if (tok==t) {\n        advance(); \n    } else {\n        error();\n    }\n}\n</code></pre></p> <p>Step 3: build a function for each non-terminal <pre><code>void S(void) {\n    switch(tok) {\n        case IF: eat(IF); E(); eat(THEN); S(); eat(ELSE); S(); break;\n        case BEGIN: eat(BEGIN); S(); L(); break;\n        case PRINT: eat(PRINT); E(); break;\n        default: error();\n    }\n}\nvoid L(void) {\n    switch(tok) {\n        case END: eat(END); break;\n        case SEMI: eat(SEMI); S(); L(); break;\n        default: error();\n    }\n}\nvoid E(void) {\n    eat(NUM); eat(EQ); eat(NUM);\n}\n</code></pre></p> <p>\u5f53\u7136\uff0c\u8fd9\u4e2a\u8bed\u6cd5\u6bd4\u8f83\u7279\u6b8a\uff1a\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u975e\u7ec8\u7ed3\u7b26\u7684\u6240\u6709\u7684\u4ea7\u751f\u5f0f\uff0c\u53f3\u8fb9\u7b2c\u4e00\u4e2a\u7b26\u53f7\u90fd\u662f\u4e0d\u540c\u7684\u7ec8\u7ed3\u7b26\uff0c\u6240\u4ee5\u53ef\u4ee5\u5f88\u8f7b\u677e\u7684\u5199\u51fa <code>switch</code> \u8bed\u53e5\u3002\u5982\u679c\u6ca1\u6709\u8fd9\u79cd\u201c\u4fbf\u5229\u201d\u7684\u6761\u4ef6\uff0c\u9700\u8981\u5148\u5199\u51fa\u9884\u6d4b\u5206\u6790\u8868\uff0c\u518d\u201c\u786c\u7f16\u7801\u201d\u5230switch\u8bed\u53e5</p> *LL(1) \u7684\u975e\u9012\u5f52\u5b9e\u73b0 <p></p>"},{"location":"CS/Compilers/ch3/ch3-2/#_5","title":"\u6d88\u9664\u5de6\u9012\u5f52\u4e0e\u5de6\u516c\u56e0\u5b50","text":"<p>LL(1)\u6587\u6cd5\u6709\u4e00\u4e9b\u660e\u663e\u7684\u6027\u8d28</p> <ul> <li>LL(1)\u6587\u6cd5\u662f\u65e0\u4e8c\u4e49\u7684</li> <li>LL(1)\u6587\u6cd5\u662f\u65e0\u5de6\u9012\u5f52\u7684</li> <li>LL(1)\u6587\u6cd5\u662f\u65e0\u5de6\u516c\u56e0\u5b50\u7684</li> </ul>"},{"location":"CS/Compilers/ch3/ch3-2/#_6","title":"\u65e0\u5de6\u9012\u5f52","text":"<p>\u5de6\u9012\u5f52 (left-recursive) \u6587\u6cd5</p> <ul> <li>\u5982\u679c\u4e00\u4e2a\u6587\u6cd5\u4e2d\u6709\u975e\u7ec8\u7ed3\u7b26\u53f7 \\(A\\) \u4f7f\u5f97 \\(A \\Rightarrow^+ A \\alpha\\)\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6587\u6cd5\u5c31\u662f\u5de6\u9012\u5f52\u7684</li> <li>\u7279\u522b\u7684\uff0c\u79f0 \\(S \\rightarrow S a | b\\) \u4e3a\u76f4\u63a5/\u7acb\u5373\u5de6\u9012\u5f52</li> </ul> <p>\u5de6\u9012\u5f52\u5e26\u6765\u7684\u95ee\u9898\u662f\uff1a\u5728\u9012\u5f52\u4e0b\u964d\u5206\u6790\u4e2d\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u65e0\u9650\u5faa\u73af</p> <ul> <li>\u5982\u8003\u8651\u4e32 \\(baaaaa\\)</li> <li>\u5728\u6700\u5de6\u63a8\u5bfc\u4e0b\uff0c\u82e5\u53ea\u770b\u4e0b\u4e2a Token\uff0c\u53ef\u80fd\u4ea7\u751f \\(S \\Rightarrow S a \\Rightarrow S a a \\Rightarrow S a a a \\Rightarrow \\ldots\\)</li> </ul> <p>\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u53ef\u4ee5\u8003\u8651\u9650\u5236\u6587\u6cd5\u6216\u8005\u8fdb\u884c\u6587\u6cd5\u53d8\u6362\u4ee5\u6d88\u9664\u5de6\u9012\u5f52\u3002\u5176\u4e2d\uff0c\u6d88\u9664\u5de6\u9012\u5f52\u7684\u6587\u6cd5\u53d8\u6362\u7684\u4e00\u4e2a\u4f8b\u5b50\u5982\u4e0b\uff1a</p> <ul> <li>\u539f\u5148\uff1a\\(A \\rightarrow A \\alpha | \\beta\\)\uff0c\u5176\u4e2d \\(\\alpha \\neq \\epsilon\\)\uff0c\\(\\alpha\\) \u548c \\(\\beta\\) \u90fd\u4e0d\u4ee5 \\(A\\) \u5f00\u5934\uff0c\u5982\u56fe\u4e2d a)</li> <li>\u4fee\u6539\u4e3a\uff1a\\(A \\rightarrow \\beta A'\\)\uff0c\\(A' \\rightarrow \\alpha A' | \\epsilon\\)\uff0c\u5982\u56fe\u4e2d b)</li> </ul> <p></p>"},{"location":"CS/Compilers/ch3/ch3-2/#_7","title":"\u65e0\u5de6\u516c\u56e0\u5b50","text":"<p>\u6709\u5de6\u516c\u56e0\u5b50\u7684 (left-factored) \u6587\u6cd5\u5982\uff1a\\(P \\rightarrow \\alpha \\beta | \\alpha \\gamma\\)\uff0c\u4e0e\u4e4b\u800c\u6765\u7684\u95ee\u9898\u662f\u540c\u4e00\u975e\u7ec8\u7ed3\u7b26\u7684\u591a\u4e2a\u5019\u9009\u5f0f\u5b58\u5728\u5171\u540c\u524d\u7f00\uff0c\u53ef\u80fd\u5bfc\u81f4\u56de\u6eaf\u3002\u540c\u6837\u53ef\u4ee5\u8003\u8651\u9650\u5236\u6587\u6cd5\u6216\u8fdb\u884c\u6587\u6cd5\u53d8\u6362\uff0c\u5176\u4e2d\u6d88\u9664\u8be5\u4ea7\u751f\u5f0f\u7684\u5de6\u516c\u56e0\u5b50\u7684\u6587\u6cd5\u53d8\u6362\u4e3a\uff1a</p> \\[ \\begin{aligned} P &amp;\\rightarrow \\alpha Q \\\\ Q &amp;\\rightarrow \\beta | \\gamma \\end{aligned} \\] <p>\u5176\u4e2d \\(Q\\) \u4e3a\u65b0\u6dfb\u52a0\u7684\u672a\u51fa\u73b0\u8fc7\u7684\u975e\u7ec8\u7ed3\u7b26</p> <p>\u8fd9\u79cd\u65b9\u6cd5\u7c7b\u4f3c\u4e8e\u901a\u8fc7\u6539\u5199\u4ea7\u751f\u5f0f\u6765\u63a8\u8fdf\u51b3\u5b9a\uff0c\u7b49\u8bfb\u5165\u4e86\u8db3\u591f\u591a\u7684\u8f93\u5165\u3001\u83b7\u5f97\u8db3\u591f\u4fe1\u606f\u540e\u518d\u505a\u9009\u62e9</p>"},{"location":"CS/Compilers/ch3/ch3-2/#_8","title":"\u9519\u8bef\u6062\u590d","text":"<p>\u4e0a\u6587\u63d0\u53ca\uff0c\u9884\u6d4b\u5206\u6790\u8868\u4e2d\u4e00\u4e2a\u7a7a\u767d\u7684\u9879\u8868\u793a\u8bed\u6cd5\u9519\u8bef\uff0c\u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\uff0c\u6709\u4e24\u79cd\u89e3\u51b3\u65b9\u5f0f\uff1a</p> <ul> <li>\u629b\u51fa\u5f02\u5e38\u5e76\u505c\u6b62\u5206\u6790</li> <li>\u6253\u5370\u9519\u8bef\u4fe1\u606f\uff0c\u5e76\u4ece\u5f53\u524d\u9519\u8bef\u4e2d\u6062\u590d\uff0c\u7ee7\u7eed\u5206\u6790<ul> <li>\u5e38\u7528\u7684\u65b9\u6cd5\u6709 deleting, replacing, inserting</li> </ul> </li> </ul> \u9519\u8bef\u6062\u590d\u7684\u4f8b\u5b50 <ul> <li>Through inserting: pretend we have the token and return normally <pre><code>void T( ) {\n    switch (tok) {\n        case ID:\n        case NUM:\n        case LPAREN: F( ); Tprime( ); break;\n        default: print(\"expected id, num, or left-paren\");\n    }\n}\n</code></pre></li> <li>Deleting tokens is safer, because the loop must eventually terminate when EOF is reached. Simple recover by deletion works by skipping tokens util a token in the FOLLOW set is reached <pre><code>int Tprime_follow[] = {PLUS, RPAREN, EOF};\nvoid Tprime() {\n    switch (tok) {\n        case PLUS: break;\n        case TIMES: eat(TIMES); F(); Tprime(); break;\n        case RPAREN: break;\n        case EOF: break;\n        default: print(\"expected +, *, right-paren, or\n        end-of-file\");\n        skipto(Tprime_follow);\n    }\n}\n</code></pre></li> </ul>"},{"location":"CS/Compilers/ch3/ch3-3/","title":"\u81ea\u5e95\u5411\u4e0a\u5206\u6790","text":"<p> \u7ea6 3948 \u4e2a\u5b57  11 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 13 \u5206\u949f</p> <p>\u5728\u81ea\u9876\u5411\u4e0b\u5206\u6790\u4e2d\uff0c\u6211\u4eec\u4e86\u89e3\u4e86 LL(1) \u6587\u6cd5\u7684\u6982\u5ff5\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230 LL(1) \u6587\u6cd5\u7684\u7279\u70b9\u6709</p> <ul> <li>\u4f18\u70b9<ul> <li>\u8fd0\u884c\u9ad8\u6548(\u7ebf\u6027\u65f6\u95f4)</li> <li>\u9012\u5f52\u5b9e\u73b0\u7b26\u5408\u6587\u6cd5\u7ed3\u6784\u3001\u9002\u5408\u624b\u52a8\u6784\u9020\u4e0e\u81ea\u52a8\u751f\u6210</li> </ul> </li> <li>\u5c40\u9650\u6027<ul> <li>\u80fd\u5206\u6790\u7684\u6587\u6cd5\u7c7b\u578b\u53d7\u9650</li> </ul> </li> </ul> <p>\u7531\u6b64\u6211\u4eec\u5f15\u51fa\u57fa\u4e8e LR(k) \u7684\u6587\u6cd5\u3002\u8fd9\u662f\u4e00\u79cd\u66f4\u5f3a\u5927\u7684\u6587\u6cd5\uff0c\u6bcf\u79cd LL(k) \u6587\u6cd5\u90fd\u662f LR(k) \u6587\u6cd5\uff0c\u4f46\u53cd\u4e4b\u4e0d\u7136\u3002\u8fd9\u7c7b\u6587\u6cd5\u88ab Parser \u81ea\u52a8\u751f\u6210\u5668\u5e7f\u6cdb\u91c7\u7528\uff08\u5982 Yacc, Bison \u7b49\uff09</p> <ul> <li>L \u8868\u793a left-to-right scanning\uff0c\u5373\u81ea\u5de6\u5411\u53f3\u626b\u63cf</li> <li>R \u8868\u793a rightmost derivation in reverse\uff0c\u5373\u6700\u53f3\u63a8\u5bfc\u7684\u9006</li> <li>k \u8868\u793a\u5411\u524d\u770b\u7684\u5b57\u7b26\u7684\u4e2a\u6570\uff08\u5f53 k \u88ab\u7701\u7565\u7684\u65f6\u5019, \u9ed8\u8ba4\u4e3a 1\uff09</li> </ul>"},{"location":"CS/Compilers/ch3/ch3-3/#-shift-reduce","title":"\u79fb\u8fdb-\u89c4\u7ea6 (Shift-Reduce)","text":"<p>LR \u5206\u6790\u5e76\u4e0d\u9700\u8981\u6d88\u9664\u5de6\u9012\u5f52\u6216\u5de6\u516c\u56e0\u5b50\uff0c\u4f8b\u5982\u5982\u4e0b\u7684\u6587\u6cd5</p> \\[ E \\rightarrow E + (E) | \\textbf{int} \\] <p>\u4e0d\u662f LL(1) \u4f46\u662f\u662f LR(1) \u7684</p> <p>\u5bf9\u4e00\u4e2a\u5177\u4f53\u7684\u8f93\u5165\u4e32 \\(\\textbf{int} + (\\textbf{int}) + (\\textbf{int})\\)\uff0c\u79fb\u8fdb-\u89c4\u7ea6\u7684\u4e3b\u8981\u601d\u60f3\u662f\u5c06\u4e32\u5206\u6210\u4e24\u4e2a\u5b50\u4e32\uff1a</p> <ul> <li>\u53f3\u4fa7\u5b50\u4e32\uff08\u7531\u7ec8\u7ed3\u7b26\u7ec4\u6210\uff09\u8fd8\u6ca1\u6709\u88ab Parser \u5904\u7406</li> <li>\u5de6\u4fa7\u5b50\u4e32\uff08\u7531\u7ec8\u7ed3\u7b26\u548c\u975e\u7ec8\u7ed3\u7b26\u7ec4\u6210\uff09\u5df2\u7ecf\u88ab Parser \u5904\u7406</li> <li>\u5206\u9694\u7b26\u662f\u4e00\u4e2a\u7279\u6b8a\u7684\u7b26\u53f7 \\(|\\)<ul> <li>\u8bf7\u6ce8\u610f\u8fd9\u5e76\u4e0d\u662f\u4e32\u7684\u4e00\u90e8\u5206</li> </ul> </li> <li>\u521d\u59cb\u65f6\uff0c\u6240\u6709\u7684\u8f93\u5165\u90fd\u6ca1\u6709\u88ab\u5904\u7406\uff0c\u5373\u5de6\u4fa7\u5b50\u4e32\u4e3a\u7a7a\uff0c\u53f3\u4fa7\u5b50\u4e32\u662f\u6574\u4e2a\u8f93\u5165\u4e32<ul> <li>\u4f8b\u5982 \\(| \\textbf{int} + (\\textbf{int}) + (\\textbf{int})\\)</li> </ul> </li> </ul> \u79fb\u8fdb-\u89c4\u7ea6\u7684\u4f8b\u5b50 <p>\u4ee5\u4e0a\u8ff0\u7684\u8f93\u5165\u4e32\u4e3a\u4f8b\uff0c\u79fb\u8fdb-\u89c4\u7ea6\u7684\u8fc7\u7a0b\u5982\u4e0b\uff1a</p> <p></p> <p>\u603b\u7ed3\u4e00\u4e0b</p> <ul> <li>LR \u5206\u6790\u662f\u6700\u53f3\u63a8\u5bfc\u7684\u9006\u8fc7\u7a0b<ul> <li>\u7c7b\u4f3c LL \u4e2d\u7684\u6700\u5de6\u63a8\u5bfc\uff0c\u540c\u6837\u9650\u5236\u4e86\u89c4\u7ea6\u65b9\u5f0f</li> </ul> </li> <li>LR \u5206\u6790\u7684\u6bcf\u4e00\u6b65\u90fd\u662f\u6700\u53f3\u53e5\u578b\uff08\u6700\u53f3\u63a8\u5bfc\u8fc7\u7a0b\u4e2d\u51fa\u73b0\u7684\u53e5\u578b\uff09<ul> <li>\\(\\alpha | \\beta\\) \u662f\u6700\u53f3\u53e5\u578b</li> </ul> </li> </ul> <p>\u5177\u4f53\u7684\u5b9e\u73b0\u65b9\u6cd5\u5982\u4e0b\uff1a</p>"},{"location":"CS/Compilers/ch3/ch3-3/#-","title":"\u57fa\u4e8e\u6808\u7684\u79fb\u8fdb-\u5f52\u7ea6","text":"<p>\u57fa\u4e8e\u6808\u7684\u79fb\u8fdb-\u5f52\u7ea6\u662f LR \u5b9e\u73b0\u7684\u4e00\u822c\u6a21\u5f0f\uff0c\u5305\u62ec\u5982\u4e0b\u7684\u5185\u5bb9\uff1a</p> <ul> <li>\u4e24\u4e2a\u7ec4\u6210\u90e8\u5206<ul> <li>\u6808 (Stack)\uff1a\u5b58\u50a8\u5de6\u5b50\u4e32 \\(\\alpha\\)\uff08\u5df2\u7ecf\u5904\u7406\u7684\u90e8\u5206\uff0c\u5305\u62ec\u7ec8\u7ed3\u7b26\u548c\u975e\u7ec8\u7ed3\u7b26\uff09</li> <li>\u8f93\u5165\u6d41 (Input steam)\uff1a\u5b58\u50a8\u53f3\u5b50\u4e32 \\(\\beta\\)\uff08\u8fd8\u672a\u5904\u7406\u7684\u90e8\u5206\uff0c\u53ea\u5305\u62ec\u7ec8\u7ed3\u7b26\uff09</li> </ul> </li> <li>\u56db\u4e2a\u57fa\u672c\u52a8\u4f5c<ul> <li>\u79fb\u8fdb (Shift)<ul> <li>\u5c06\u8f93\u5165\u6d41\u4e0b\u4e00\u4e2a\u8f93\u5165\uff08\u7ec8\u7ed3\u7b26\uff09\u538b\u5165\u6808\u9876</li> </ul> </li> <li>\u89c4\u7ea6 (Reduce)<ul> <li>\u6808\u9876\u90e8\u7684\u7b26\u53f7\u4e32\u5339\u914d\u67d0\u4e2a\u4ea7\u751f\u5f0f\u53f3\u90e8\uff08\u5982 \\(X \\rightarrow ABC\\) \u4e2d\u7684 \\(ABC\\)\uff09</li> <li>\u4ece\u6808\u9876\u90e8\u5f39\u51fa\u76f8\u5e94\u7684\u7b26\u53f7\u4e32\uff08\u5982\u4f9d\u6b21\u5f39\u51fa \\(C\\) \\(B\\) \\(A\\)\uff09</li> <li>\u5c06\u4ea7\u751f\u5f0f\u5de6\u90e8\u538b\u5165\u6808\u9876\uff08\u5982\u538b\u5165 \\(X\\)\uff09</li> </ul> </li> <li>\u9519\u8bef (Error)\uff1a\u5206\u6790\u5931\u8d25</li> <li>\u63a5\u53d7 (Accept)\uff1a\u79fb\u8fdb \\(\\$\\) \u5e76\u548c\u6808\u4e2d\u5269\u4f59\u7684\u6240\u6709\u7b26\u53f7\u4e00\u8d77\u89c4\u7ea6\u4e3a\u5f00\u59cb\u7b26\u53f7</li> </ul> </li> </ul> <p>\u6838\u5fc3\u95ee\u9898\u5728\u4e8e\u5982\u4f55\u9009\u62e9\u79fb\u8fdb\u548c\u89c4\u7ea6\u7684\u65f6\u673a</p>"},{"location":"CS/Compilers/ch3/ch3-3/#lr","title":"\u8868\u9a71\u52a8\u7684 LR \u5206\u6790","text":"<p>\u8868\u9a71\u52a8\u7684 LR \u5206\u6790\u662f\u6700\u901a\u7528\u7684\u65e0\u56de\u6eaf\u79fb\u5165-\u89c4\u7ea6\u5206\u6790</p> <ul> <li>\u6240\u6709\u7684\u5206\u6790\u5668\u90fd\u4f7f\u7528\u76f8\u540c\u7684\u9a71\u52a8\u7a0b\u5e8f<ul> <li>\u867d\u7136\u590d\u6742\u8bed\u6cd5\u5bf9\u5e94\u7684\u8868\u5f88\u5927\uff0c\u4f46\u5206\u6790\u8868\u53ef\u4ee5\u81ea\u52a8\u751f\u6210</li> <li>\u5206\u6790\u8868\u968f LR \u5206\u6790\u6587\u6cd5\u7684\u4e0d\u540c\u800c\u4e0d\u540c</li> </ul> </li> </ul> <p>\u793a\u4f8b\u56fe\u5982\u4e0b\uff1a</p> <p></p>"},{"location":"CS/Compilers/ch3/ch3-3/#lr0","title":"LR(0) \u5206\u6790","text":"\u5982\u4f55\u77e5\u9053\u6808\u9876\u7684\u5185\u5bb9\u53ef\u4ee5\u5f52\u7ea6\u4e86\uff1f <p>\u7ef4\u62a4\u4e00\u4e2a\u72b6\u6001\uff0c\u8bb0\u5f55\u5f53\u524d\u8bc6\u522b\u7684\u8fdb\u5ea6</p>"},{"location":"CS/Compilers/ch3/ch3-3/#lr0_1","title":"LR(0) \u8bed\u6cd5\u5206\u6790\u601d\u8def","text":"<p>\u5f15\u5165\u5982\u4e0b\u7684\u6982\u5ff5\uff1a</p> <ul> <li>\u9879 (Item)\uff1a\u4e00\u4e2a\u4ea7\u751f\u5f0f\u52a0\u4e0a\u5728\u5176\u4e2d\u67d0\u5904\u7684\u4e00\u4e2a\u70b9<ul> <li>\\(A \\rightarrow \\alpha \\cdot \\beta\\) \u610f\u5473\u7740\u5df2\u7ecf\u626b\u63cf/\u89c4\u7ea6\u5230\u4e86 \\(\\alpha\\)\uff0c\u5e76\u671f\u671b\u5728\u63a5\u4e0b\u6765\u7684\u8f93\u5165\u4e2d\u7ecf\u8fc7\u626b\u63cf/\u5f52\u7ea6\u5f97\u5230 \\(\\beta\\)\uff0c\u7136\u540e\u628a \\(\\alpha \\beta\\) \u5f52\u7ea6\u5230 \\(A\\)</li> <li>\\(A \\rightarrow \\alpha \\beta \\cdot\\) \u610f\u5473\u7740\u5df2\u7ecf\u626b\u63cf/\u89c4\u7ea6\u5f97\u5230\u4e86 \\(\\alpha \\beta\\)\uff0c\u53ef\u4ee5\u5c06 \\(\\alpha \\beta\\) \u5f52\u7ea6\u5230 \\(A\\)</li> <li>\u4ee5\u4ea7\u751f\u5f0f \\(A \\rightarrow \\cdot XYZ\\) \u4e3a\u4f8b\uff0c\u9879\u6709 \\(A \\rightarrow \\cdot XYZ\\), \\(A \\rightarrow X \\cdot YZ\\), \\(A \\rightarrow XY \\cdot Z\\), \\(A \\rightarrow XYZ \\cdot\\)</li> <li>LR(0) \u7684 Item \u7c7b\u4f3c\u6709\u7a77\u81ea\u52a8\u673a\u7684\u72b6\u6001</li> </ul> </li> <li>\u72b6\u6001\u8df3\u8f6c<ul> <li>\u4e00\u4e2a\u9879\u8bfb\u5165\u4e00\u4e2a\u7b26\u53f7\u540e\uff0c\u53ef\u53d8\u4e3a\u53e6\u4e00\u4e2a\u9879</li> <li>\\(A \\rightarrow \\cdot xyz\\) \u53ef\u4ee5\u53d8\u4e3a \\(A \\rightarrow x \\cdot yz\\)\uff0c\u7c7b\u4f3c\u72b6\u6001\u95f4\u7684\u8df3\u8f6c</li> </ul> </li> </ul> <p>\u6587\u6cd5\u4ea7\u751f\u5f0f\u662f\u6709\u9650\u7684\uff0c\u9879\u7684\u6570\u91cf\u4e5f\u662f\u6709\u9650\u7684\uff0c\u6bcf\u4e2a\u4ea7\u751f\u5f0f\u53f3\u90e8\u7684\u957f\u5ea6\u4e5f\u662f\u6709\u9650\u7684\uff0c\u7ed3\u5408\u72b6\u6001\u548c\u8df3\u8f6c\u7684\u6982\u5ff5\uff0c\u53ef\u4ee5\u770b\u4f5c\u4e00\u53f0\u6709\u7a77\u81ea\u52a8\u673a\uff0c\u79f0\u4e3a LR(0)\u81ea\u52a8\u673a</p> <p></p>"},{"location":"CS/Compilers/ch3/ch3-3/#lr0-parsing-nfa","title":"LR(0) Parsing NFA","text":"<p>\u6b64\u5904\u7684NFA\u4e0d\u662f\u6307\u76f4\u63a5\u7528\u6765\u8bc6\u522b LR(0) \u8bed\u8a00\u7684\u81ea\u52a8\u673a\uff08NFA \u53ea\u80fd\u8bc6\u522b\u6b63\u5219\u8bed\u8a00\uff0c\u7136\u800c\u6b63\u5219\u8bed\u8a00 &lt; LR(0)\uff09\u3002\u8be5 NFA \u662f\u7528\u6765\u8bb0\u5f55\u5f53\u524d\u8bc6\u522b\u8fdb\u5ea6\u7684\uff08\u5e2e\u52a9\u5224\u65ad\u6808\u9876\u5185\u5bb9\u662f\u5426\u53ef\u5f52\u7ea6\u4e86\uff09</p> <ul> <li>\u8d77\u59cb\u548c\u7ec8\u7ed3\u72b6\u6001<ul> <li>\u6587\u6cd5 \\(G\\) \u4e2d\u589e\u52a0\u65b0\u5f00\u59cb\u7b26\u53f7 \\(S'\\)\uff0c\u5e76\u52a0\u5165\u4ea7\u751f\u5f0f \\(S' \\rightarrow S\\$\\)</li> <li>\u6309 \\(S' \\rightarrow S\\$\\) \u8fdb\u884c\u5f52\u7ea6\uff08\u5c06\u8f93\u5165\u7b26\u53f7\u4e32\u5f52\u7ea6\u6210\u4e3a\u5f00\u59cb\u7b26\u53f7\uff09</li> <li>\u52a0\u5165 \\(S'\\) \u65b9\u4fbf\u8868\u793a\u8d77\u59cb\u548c\u7ec8\u7ed3\u72b6\u6001</li> </ul> </li> <li>\u72b6\u6001\u8fc1\u79fb<ul> <li>LR(0) Item \u4e4b\u95f4\u4f1a\u6709\u8f6c\u6362\u5173\u7cfb\uff0c\u5982<ul> <li>\\(X \\rightarrow \\cdot \\alpha \\beta\\) \u63a5\u6536 \\(\\alpha\\) \u540e\u8f6c\u6362\u4e3a \\(X \\rightarrow \\alpha \\cdot \\beta\\)</li> <li>\u82e5\u5b58\u5728\u4ea7\u751f\u5f0f \\(X \\rightarrow \\alpha Y \\beta\\) \u548c \\(Y \\rightarrow \\gamma\\)\uff0c\u5219 \\(X \\rightarrow \\alpha \\cdot Y \\beta\\) \u53ef\u4ee5\u8f6c\u6362\u5230 \\(Y \\rightarrow \\cdot \\gamma\\) </li> </ul> </li> </ul> </li> </ul> LR(0) Parsing NFA <p>\u4ee5\u6587\u6cd5</p> \\[ \\begin{aligned} S' &amp;\\rightarrow S \\$ \\\\ S &amp;\\rightarrow ( S ) \\\\ S &amp;\\rightarrow \\epsilon \\end{aligned} \\] <p>\u4e3a\u4f8b\uff0cLR(0) Parsing NFA \u5982\u4e0b\uff1a</p> <p></p> <p>\u56de\u60f3\u5b50\u96c6\u6784\u9020\u6cd5\uff0c\u53ef\u4ee5\u5c06\u4e00\u7ec4 LR(0) Items\uff08\u79f0\u4e3a\u9879\u96c6\uff09\u770b\u4f5c\u4e00\u4e2a DFA \u7684\u72b6\u6001\uff0c\u5f97\u5230\u5982\u4e0b\u7684 LR(0) Parsing DFA</p> <p></p>"},{"location":"CS/Compilers/ch3/ch3-3/#lr0-parsing-dfa","title":"LR(0) Parsing DFA","text":"<p>\u7c7b\u4f3c LR(0) Parsing NFA\uff0c\u6b64\u5904\u7684 DFA \u4e0d\u662f\u6307\u76f4\u63a5\u7528\u6765\u8bc6\u522b LR(0) \u8bed\u8a00\u7684\u81ea\u52a8\u673a\uff08DFA\u53ea\u80fd\u8bc6\u522b\u6b63\u5219\u8bed\u8a00\uff0c\u7136\u800c\u6b63\u5219\u8bed\u8a00 &lt; LR(0)\uff09\u3002\u8be5DFA\u662f\u7528\u6765\u8bb0\u5f55\u5f53\u524d\u8bc6\u522b\u8fdb\u5ea6\u7684\uff08\u5e2e\u52a9\u5224\u65ad\u6808\u9876\u5185\u5bb9\u662f\u5426\u53ef\u5f52\u7ea6\u4e86\uff09</p> <p>\u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u6784\u9020\u4e86 LR(0) Parsing NFA \u5e76\u5c06\u5176\u8f6c\u6362\u4e3a DFA\uff0c\u4e0d\u8fc7\u5728\u5b9e\u9645\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u8df3\u8fc7 NFA \u76f4\u63a5\u6784\u9020 DFA</p> <p>\u5047\u5b9a</p> <ul> <li>\\(I\\) \u662f\u4e00\u4e2a\u9879\u96c6</li> <li>\\(X\\) \u662f\u4e00\u4e2a\u7b26\u53f7\uff08\u7ec8\u7ed3\u7b26\u6216\u975e\u7ec8\u7ed3\u7b26\uff09</li> <li>\\(T\\) \u662f\u4e00\u4e2a\u9879\u96c6\u7684\u96c6\u5408</li> <li>\\(E\\) \u662f\u4e00\u4e2a\u8fb9\u7684\u96c6\u5408</li> </ul> <p>\u6211\u4eec\u5b9a\u4e49\u4e24\u4e2a\u8fc7\u7a0b\uff1a</p> <ul> <li>Closure(\\(I\\))<ul> <li>\u7c7b\u4f3c NFA \u8f6c DFA \u8fc7\u7a0b\u4e2d\u7684 \\(\\epsilon\\)-closure</li> </ul> </li> <li>Goto(\\(I\\), \\(X\\))<ul> <li>\u7c7b\u4f3c NFA \u8f6c DFA \u8fc7\u7a0b\u4e2d\u8ba1\u7b97\u65b0\u7684 DFA \u72b6\u6001</li> </ul> </li> </ul> <pre>\n\\begin{algorithm}\n\\caption{LR(0) Parsing DFA - Closure}\n\\begin{algorithmic}\n\\Function{Closure}{$I$}\n    \\Repeat\n        \\For{any item $A \\rightarrow \\alpha \\cdot X \\beta$ in $I$}\n            \\For{any production $X \\rightarrow \\gamma$}\n                \\State $I \\gets I \\cup \\{X \\rightarrow \\cdot \\gamma\\}$\n            \\EndFor\n        \\EndFor\n    \\Until{no new items can be added to $I$}\n    \\State \\Return $I$\n\\EndFunction\n\\end{algorithmic}\n\\end{algorithm}\n</pre> <pre>\n\\begin{algorithm}\n\\caption{LR(0) Parsing DFA - Goto}\n\\begin{algorithmic}\n\\Function{Goto}{$I$, $X$}\n    \\State set $J$ to the empty set\n    \\For{any item $A \\rightarrow \\alpha \\cdot X \\beta$ in $I$}\n        \\State $J \\gets J \\cup \\{A \\rightarrow \\alpha X \\cdot \\beta\\}$\n    \\EndFor\n    \\State \\Return \\Call{Closure}{$J$}\n\\EndFunction\n\\end{algorithmic}\n\\end{algorithm}\n</pre> <p>\u7ed3\u5408 Closure \u548c Goto \u8fc7\u7a0b\uff0c\u53ef\u4ee5\u6574\u7406\u51fa LR(0) Parsing DFA \u6784\u9020\u7684\u7b97\u6cd5</p> <pre>\n\\begin{algorithm}\n\\caption{LR(0) Parsing DFA}\n\\begin{algorithmic}\n\\Function{LR0DFA}{}\n    \\State Initialize $T$ to $\\{$\\Call{Closure}{$\\{S' \\rightarrow \\cdot S\\$$}$\\}$\n    \\State Initialize $E$ to empty set (set of edges)\n    \\Repeat\n        \\For{each state $I$ in $T$}\n            \\For{each item $A \\rightarrow \\alpha \\cdot X \\beta$ in $I$}\n                \\State $J \\gets$ \\Call{Goto}{$I$, $X$}\n                \\State $T \\gets T \\cup \\{J\\}$\n                \\State $E \\gets E \\cup \\{I \\xrightarrow{X} J\\}$\n            \\EndFor\n        \\EndFor\n    \\Until{no new members are added to $T$ or $E$}\n    \\State \\Return $T$, $E$\n\\EndFunction\n\\end{algorithmic}\n\\end{algorithm}\n</pre> LR(0) Parsing DFA <p>\u4ee5\u6587\u6cd5</p> \\[ \\begin{aligned} 0: S' &amp;\\rightarrow S \\$ \\\\ 1: S &amp;\\rightarrow x S \\\\ 2: S &amp;\\rightarrow y \\end{aligned} \\] <p>\u4e3a\u4f8b\uff0cLR(0) Parsing DFA \u5982\u4e0b\uff1a</p> <p></p>"},{"location":"CS/Compilers/ch3/ch3-3/#lr0_2","title":"LR(0) \u8bed\u6cd5\u5206\u6790\u8868","text":"<p>\u4ee5\u4e0a\u4f8b LR(0) Parsing DFA \u4e3a\u4f8b\uff0c\u6784\u9020\u51fa\u7684 LR(0) \u8bed\u6cd5\u5206\u6790\u8868\u5982\u4e0b\uff1a</p> <p></p> <p>\u8868\u7531\u4e24\u4e2a\u90e8\u5206\u7ec4\u6210\uff1a\u52a8\u4f5c (Action) \u4e0e \u8f6c\u6362 (GOTO)</p> <ul> <li>Action \u8868\u9879\u7684\u53c2\u6570\uff1a\u72b6\u6001 \\(i\\)\uff0c\u7ec8\u7ed3\u7b26\u53f7 \\(t\\)<ul> <li>\u79fb\u5165 (Shift)\uff1a\u82e5\u4ece\u72b6\u6001 \\(i\\) \u5230\u72b6\u6001 \\(j\\) \u6709\u4e00\u6761\u8fb9\u6807\u8bb0\u4e3a \\(t\\)\uff0c\u5219\u5728 Action \u8868\u4e2d \\([i, t] = sj\\) (shift j)\uff1b\u6d89\u53ca\u6808\u5206\u6790\u65f6\uff0c\u5411\u524d\u79fb\u52a8\u4e00\u4e2a Token\uff0c\u628a\u65b0\u72b6\u6001 \\(j\\) \u538b\u5165\u6808</li> <li>\u89c4\u7ea6 (Reduce)\uff1a\u5728\u72b6\u6001 \\(i\\) \u4e2d\u6709\u4e00\u4e2a\u9879 \\(A \\rightarrow \\beta \\cdot\\)\uff0c\u5219\u5728\u4e14 \\(A \\rightarrow \\beta\u6d89\u53ca\u6808\u5206\u6790\u65f6\uff0c\\) \u662f\u7b2c \\(k\\) \u6761\u4ea7\u751f\u5f0f\uff0c\u5219\u5728 Action \u8868\u4e2d \\([i, \\text{each terminal symbol}] = rk\\) (reduce k)\uff1b\u6d89\u53ca\u6808\u5206\u6790\u65f6\uff0c\u5f39\u51fa \\(|\\beta|\\) \u4e2a\u72b6\u6001\uff0c\u7136\u540e\u6839\u636e GOTO \u8868\u5c06\u5176\u4e2d \\(\\text{GOTO}[\\text{top(stack)}, A]\\) \u538b\u5165\u6808</li> <li>\u63a5\u53d7 (Accept)\uff1a\u5bf9\u4e8e\u6bcf\u4e2a\u5305\u542b \\(S' \\rightarrow S \\cdot \\$\\) \u7684\u72b6\u6001 \\(i\\)\uff0c\u5728 Action \u8868\u4e2d \\([i, \\$] = \\text{accept}\\)\uff1b\u6d89\u53ca\u6808\u5206\u6790\u65f6\uff0c\u7ed3\u675f\u5206\u6790\uff0c\u63a5\u53d7\u8f93\u5165\u8fd4\u56de\u6210\u529f</li> <li>\u62a5\u9519\uff1a\u5728\u8f93\u5165\u4e2d\u53d1\u73b0\u8bed\u6cd5\u9519\u8bef\uff0c\u505c\u6b62\u5206\u6790\u5e76\u62a5\u9519</li> </ul> </li> <li>GOTO \u8868\u9879\u7684\u53c2\u6570\uff1a\u72b6\u6001 \\(i\\)\uff0c\u975e\u7ec8\u7ed3\u7b26 \\(A\\)<ul> <li>\u82e5\u4ece\u72b6\u6001 \\(i\\) \u5230\u72b6\u6001 \\(j\\) \u6709\u4e00\u6761\u8fb9\u6807\u8bb0\u4e3a \\(A\\)\uff08\u5373\u51fd\u6570 \\(\\text{Goto}[I_i, A] = I_j\\)\uff09\uff0c\u5219\u5728 GOTO \u8868\u4e2d \\(\\text{GOTO}[i, A] = j\\)</li> </ul> </li> </ul> <p>\u4e0a\u8ff0\u63d0\u53ca\u7684\u6d89\u53ca\u6808\u5206\u6790\u662f\u4e00\u5957\u53ef\u4ee5\u88ab\u5176\u4ed6 LR \u5206\u6790\u5668\u4f7f\u7528\u7684\u901a\u7528\u7b97\u6cd5</p> <p>\u8f93\u5165\u6587\u6cd5\u7684 LR \u8bed\u6cd5\u5206\u6790\u8868\u4e0e\u8f93\u5165\u4e32 \\(w\\)\uff0c\u5206\u6790\u7b97\u6cd5\u7684\u4e00\u4e2a\u7b80\u7565\u8868\u8ff0\u4e3a\uff1a</p> <pre><code>// \u4ee4 s \u662f\u6808\u9876\u72b6\u6001, a \u662f w$ \u7684\u7b2c\u4e00\u4e2a\u7b26\u53f7;\nwhile (1) { // \u4e00\u5f00\u59cb s \u4e3a Parsing DFA \u7684\u72b6\u6001 1\n    if (Action[s, a] = \"shift s'\") {\n        // \u5c06 s' \u538b\u5165\u6808\u5185\uff1b\n        // \u5c06\u4e0b\u4e00\u4e2a\u8f93\u5165\u7b26\u53f7\u8d4b\u503c\u7ed9 a\uff1b\n    } else if (Action[s, a] = \"reduce A \u2192 \u03b2\") {\n        // \u4ece\u6808\u9876\u5f39\u51fa |\u03b2| \u4e2a\u72b6\u6001\uff1b\n        // \u4ee4 s' \u662f\u5f53\u524d\u6808\u9876\u72b6\u6001, \u628a GOTO[s', A] \u5165\u6808\uff1b\n    } else if (Action[s, a] = \u201cAccept\u201d) break;\n    else error( ); // \u8c03\u7528\u540e\u9762\u4f1a\u63d0\u53ca\u7684\u9519\u8bef\u6062\u590d\u7a0b\u5e8f;\n}\n</code></pre> <p>LR \u5b9e\u9645\u5b9e\u73b0\u53ea\u6709\u72b6\u6001\u6808\uff0c\u7b26\u53f7\u4fe1\u606f\u53ef\u4ece\u76f8\u5e94\u72b6\u6001\u4e2d\u83b7\u53d6\u3002\u4e0b\u9762\u4f8b\u5b50\u4e2d\u7684\u6587\u6cd5\u7b26\u53f7\u6808\u662f\u4e3a\u4e86\u65b9\u4fbf\u7406\u89e3</p> \u5b8c\u6574\u7684 LR(0) \u8bed\u6cd5\u5206\u6790 <p>\u793a\u4f8b\u4e00 </p> <p>\u793a\u4f8b\u4e8c </p>"},{"location":"CS/Compilers/ch3/ch3-3/#lr0_3","title":"LR(0) \u7684\u95ee\u9898/\u5c40\u9650\u6027","text":"\u4e3a\u4ec0\u4e48\u8bf4 LR(0) \u6ca1\u6709 Lookahead\uff1f <p>LR(0) Item \u4e2d\u6ca1\u6709 lookahead terminal \u7b49\u4fe1\u606f\uff0c\u4f7f\u5f97\u662f\u5426\u5f52\u7ea6\u3001\u9009\u62e9\u54ea\u4e2a\u4ea7\u751f\u5f0f\u89c4\u7ea6\u4ec5\u7531\u6808\u9876\u72b6\u6001\u51b3\u5b9a</p> <p>\u5bf9\u4e8e LR(0) \u6587\u6cd5\u800c\u8a00\uff0c\u4e00\u65e6\u5b58\u5728\u72b6\u6001 \\(X \\rightarrow \\alpha \\cdot\\)\uff0c\u5c31\u4f1a\u76f2\u76ee\u7684\u5c06 \\(\\alpha\\) \u89c4\u7ea6\u4e3a \\(X\\)\uff0c\u53ef\u80fd\u5bfc\u81f4\u51b2\u7a81\uff0c\u5982\u4ece\u6587\u6cd5</p> \\[ \\begin{aligned} 0:\\ &amp;S \\rightarrow E \\$ \\\\ 1:\\ &amp;E \\rightarrow T + E \\\\ 2:\\ &amp;E \\rightarrow T \\\\ 3:\\ &amp;T \\rightarrow x \\end{aligned} \\] <p>\u51fa\u53d1\uff0c\u6784\u9020\u7684 LR(0) Parsing DFA \u4e0e LR(0) \u8bed\u6cd5\u5206\u6790\u8868\u5982\u4e0b\uff1a</p> <p></p> <p>\u6807\u7ea2\u7684\u5730\u65b9\u5b58\u5728\u79fb\u5165-\u89c4\u7ea6\u51b2\u7a81 (shift-reduce conflict)\uff0c\u5373\u72b6\u6001 3 \u4e2d\u65e0\u6cd5\u786e\u5b9a\u662f\u79fb\u5165 \\(+\\) \u8fd8\u662f\u89c4\u7ea6\u5230 \\(E\\)</p>"},{"location":"CS/Compilers/ch3/ch3-3/#slr1","title":"SLR(1) \u5206\u6790","text":"<p>\u4e3a\u4e86\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u6539\u5584 LR(1) \u5b58\u5728\u7684\u95ee\u9898\uff0cSLR(1) \u5229\u7528\u66f4\u591a\u4fe1\u606f\u6765\u6307\u5bfc\u89c4\u7ea6\u64cd\u4f5c\uff0c\u5373\u6bcf\u6b65\u5f52\u7ea6\u90fd\u5e94\u8be5\u6ee1\u8db3 \\(t \\in \\text{Follow}(E)\\)\uff0c\u5176\u4e2d</p> <ul> <li>\\(E\\) \u662f\u7528\u6765\u5f52\u7ea6\u7684\u4ea7\u751f\u5f0f\u7684\u5de6\u90e8</li> <li>\\(t\\) \u662f Next Token</li> </ul> <p>\u56e0\u6b64</p> <ul> <li>SLR(1) Parsing DFA \u548c LR(0) \u7684\u76f8\u540c</li> <li>\u6784\u9020\u5206\u6790\u8868\u65f6\u7684\u5f52\u7ea6\u52a8\u4f5c\u4e0d\u540c\uff0c\u6bcf\u6b65\u5f52\u7ea6\u90fd\u5e94\u8be5\u6ee1\u8db3 \\(t \\in \\text{Follow}(E)\\)</li> </ul> <pre>\n\\begin{algorithm}\n\\caption{SLR(1) - Reduce}\n\\begin{algorithmic}\n\\Function{Reduce}{$T$}\n    \\State set $R$ to the empty set\n    \\For{each state $I$ in $T$}\n        \\For{each item $A \\rightarrow \\alpha \\cdot$ in $I$}\n            \\For{each token $X$ in $\\text{Follow}(A)$}\n                \\State $R \\gets R \\cup \\{(I, X, A \\rightarrow \\alpha)\\}$\n            \\EndFor\n        \\EndFor\n    \\EndFor\n    \\State \\Return $R$\n\\EndFunction\n\\end{algorithmic}\n\\end{algorithm}\n</pre> <p>\u4f8b\u5982\u4e0a\u8ff0\u6d89\u53ca LR(0) \u5c40\u9650\u6027\u7684\u4f8b\u5b50\uff0cSLR(1) \u8bed\u6cd5\u5206\u6790\u8868\u5982\u4e0b\uff1a</p> <p></p> <p>\u89e3\u51b3\u4e86 LR(0) \u4e2d\u5b58\u5728\u7684 shift-Reduce conflict</p>"},{"location":"CS/Compilers/ch3/ch3-3/#slr1_1","title":"SLR(1) \u7684\u95ee\u9898/\u5c40\u9650\u6027","text":"<p>\u8003\u8651\u6587\u6cd5</p> \\[ \\begin{aligned} S' &amp;\\rightarrow S \\$ \\\\ S &amp;\\rightarrow L = R | R \\\\ L &amp;\\rightarrow * R | id \\\\ R &amp;\\rightarrow L \\end{aligned} \\] <p>\u6211\u4eec\u53ef\u4ee5\u77e5\u9053 \\(\\text{Follow}(R) = \\text{Follow}(L) = \\{=, \\$\\}\\)\uff0c\u56e0\u6b64\uff0c\u5728\u5982\u4e0b\u7684 DFA \u4e2d\uff0c\u72b6\u6001 3 \u5b58\u5728 shift-reduce conflict</p> <p></p>"},{"location":"CS/Compilers/ch3/ch3-3/#lr1","title":"LR(1) \u5206\u6790","text":"<p>LR(1)</p> <ul> <li>\u9879\u4e2d\u5305\u542b\u66f4\u591a\u4fe1\u606f\u6765\u6d88\u9664\u4e00\u4e9b\u5f52\u7ea6\u52a8\u4f5c\uff0c\u5b9e\u9645\u7684\u505a\u6cd5\u76f8\u5f53\u4e8e\u201c\u5206\u88c2\u201d\u4e00\u4e9b LR(0) \u72b6\u6001\uff0c\u7cbe\u786e\u6307\u660e\u4f55\u65f6\u5e94\u8be5\u5f52\u7ea6</li> <li>\u5f62\u5f0f\u4e3a \\(A \\rightarrow \\alpha \\cdot \\beta, a\\)<ul> <li>\\(a\\) \u79f0\u4e3a\u5411\u524d\u770b\u7b26\u53f7\uff0c\u53ef\u4ee5\u662f\u7ec8\u7ed3\u7b26\u53f7\u6216\u8005 \\(\\$\\)</li> <li>\\(A \\rightarrow \\alpha \\cdot \\beta, a\\) \u8868\u793a\u5e8f\u5217 \\(\\alpha\\) \u5728\u201c\u7b26\u53f7\u6808\u201d\u7684\u6808\u9876\uff0c\u63a5\u4e0b\u6765\u7684\u8f93\u5165\u4e32\u7684\u5934\u90e8\u662f\u4e00\u4e2a\u53ef\u4ee5\u7531 \\(\\beta a\\) \u63a8\u5bfc\u51fa\u7684\u4e32</li> </ul> </li> </ul>"},{"location":"CS/Compilers/ch3/ch3-3/#lr1-closure-goto-reduce-action","title":"LR(1) \u7684 Closure, Goto \u548c Reduce Action","text":"<p>\u4e00\u4e9b\u63d0\u793a</p> <ul> <li>\u5bf9\u4e8e Closure\uff0c\u5904\u7406 \\(\\epsilon\\)-transations\uff08\u6dfb\u52a0 \\(X \\rightarrow \\cdot \\gamma\\)\uff09\u65f6\uff0c\u9700\u8981\u8bb0\u5f55 \\(w \\in \\text{First}(\\beta z)\\)\uff0c\u628a \\(A \\rightarrow \\alpha \\cdot X \\beta, z\\) \u7684\u4fe1\u606f\u201c\u4f20\u9012\u201d\u5230 \\(X \\rightarrow \\cdot \\gamma, w\\) \u4e2d</li> <li>\u8d77\u59cb\u72b6\u6001\u662f LR(1) \u9879 \\(S\u2032 \\rightarrow \u2022 S \\$, ?\\) \u7684\u95ed\u5305\uff0c\u5176\u4e2d \\(?\\) \u662f\u4ec0\u4e48\u65e0\u5173\u7d27\u8981\uff0c\u56e0\u4e3a \\(\\$\\) \u4e0d\u4f1a\u88ab\u79fb\u8fdb</li> <li>\u5728 Reduce \u4e2d\uff0caction \\(\\(I, z, A \\rightarrow \\alpha\\)\\) \u8868\u793a\u5728\u72b6\u6001 \\(I\\) \u4e2d\uff0c\u9047\u5230\u4e86\u4e00\u4e2a\u5411\u524d\u770b\u7b26\u53f7 (lookahead symbol) \\(z\\)\uff0c\u53ef\u4ee5\u6309 \\(A \\rightarrow \\alpha\\) \u89c4\u5219\u89c4\u7ea6<ul> <li>\u8fd9\u6837\u7684\u8bdd\uff0cLR(1) \u7684\u5411\u524d\u770b\u7b26\u53f7\u8981\u6bd4 SLR(1) \u66f4\u52a0\u7cbe\u786e\uff08\u56e0\u4e3a\u4e00\u4e9b\u5728 \\(\\text{Follow}(A)\\) \u4e2d\u7684\u7b26\u53f7\u53ef\u80fd\u4e0d\u4f1a\u89e6\u53d1\u89c4\u7ea6\uff09</li> <li>\u5982\u679c\u8981\u6839\u636e \\(A \\rightarrow \\alpha \\cdot, z\\) \u89c4\u7ea6\uff0c\u4e0b\u4e00\u4e2a\u8f93\u5165\u7b26\u53f7\u5fc5\u987b\u662f \\(z\\)</li> </ul> </li> </ul> <pre>\n\\begin{algorithm}\n\\caption{LR(1) Parsing DFA - Closure}\n\\begin{algorithmic}\n\\Function{Closure}{$I$}\n    \\Repeat\n        \\For{any item $A \\rightarrow \\alpha \\cdot X \\beta, z$ in $I$}\n            \\For{any production $X \\rightarrow \\gamma$}\n                \\For{any $w \\in \\text{First}(\\beta z)$}\n                    \\State $I \\gets I \\cup \\{(X \\rightarrow \\cdot \\gamma, w)\\}$\n                \\EndFor\n            \\EndFor\n        \\EndFor\n    \\Until{no new items can be added to $I$}\n    \\State \\Return $I$\n\\EndFunction\n\\end{algorithmic}\n\\end{algorithm}\n</pre> <pre>\n\\begin{algorithm}\n\\caption{LR(1) Parsing DFA - Goto}\n\\begin{algorithmic}\n\\Function{Goto}{$I$, $X$}\n    \\State set $J$ to the empty set\n    \\For{any item $(A \\rightarrow \\alpha \\cdot X \\beta, z)$ in $I$}\n        \\State $J \\gets J \\cup \\{(A \\rightarrow \\alpha X \\cdot \\beta, z)\\}$\n    \\EndFor\n    \\State \\Return \\Call{Closure}{$J$}\n\\EndFunction\n\\end{algorithmic}\n\\end{algorithm}\n</pre> <pre>\n\\begin{algorithm}\n\\caption{LR(1) - Reduce}\n\\begin{algorithmic}\n\\Function{Reduce}{$T$}\n    \\State set $R$ to the empty set\n    \\For{each state $I$ in $T$}\n        \\For{each item $(A \\rightarrow \\alpha \\cdot, z)$ in $I$}\n            \\State $R \\gets R \\cup \\{(I, z, A \\rightarrow \\alpha)\\}$\n        \\EndFor\n    \\EndFor\n    \\State \\Return $R$\n\\EndFunction\n\\end{algorithmic}\n\\end{algorithm}\n</pre> LR(1) Parsing <p>\u4ee5\u6587\u6cd5</p> \\[ \\begin{aligned}     0:\\ &amp;S' \\rightarrow S \\$ \\\\     1:\\ &amp;S \\rightarrow V = E \\\\     2:\\ &amp;S \\rightarrow E \\\\     3:\\ &amp;E \\rightarrow V \\\\     4:\\ &amp;V \\rightarrow x \\\\     5:\\ &amp;V \\rightarrow * E \\end{aligned} \\] <p>\u4e3a\u4f8b\uff0c\u8ba1\u7b97 \\(S' \\rightarrow S \\$\\) \u7684\u95ed\u5305\uff0c\u7ed3\u679c\u4e3a\uff1a</p> <p></p> <p>\u4e2d\u95f4\u8fc7\u7a0b\u8fc7\u4e8e\u590d\u6742\uff0c\u7701\u7565\uff0c\u6700\u7ec8\u7684 LR(1) Parsing Table \u5982\u4e0b\uff1a</p> <p></p>"},{"location":"CS/Compilers/ch3/ch3-3/#lr1_1","title":"LR(1) \u7684\u95ee\u9898/\u5c40\u9650\u6027","text":"<p>\u6b63\u5982\u4e0a\u4f8b LR(1) Parsing \u6240\u793a\uff0cLR(1) \u8bed\u6cd5\u5206\u6790\u8868\u7684\u5927\u5c0f\u53ef\u80fd\u4f1a\u975e\u5e38\u5927\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u9879\u90fd\u6709\u4e00\u4e2a\u5411\u524d\u770b\u7b26\u53f7\uff0c\u8fd9\u53ef\u80fd\u5bfc\u81f4\u8868\u7684\u5927\u5c0f\u8d85\u8fc7\u5b9e\u9645\u9700\u8981</p>"},{"location":"CS/Compilers/ch3/ch3-3/#lalr1","title":"LALR(1) \u5206\u6790","text":"<p>\u4ee5\u4e0a\u4f8b LR(1) Parsing \u4e3a\u57fa\u7840\uff0c\u753b\u51fa LR(1) Parsing DFA</p> <p></p> <p>\u88ab\u76f8\u540c\u989c\u8272\u6846\u9009\u51fa\u7684\u72b6\u6001\u53ea\u6709\u5728\u5411\u524d\u770b\u7b26\u53f7\u4e0d\u540c\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u5c06\u5176\u5408\u5e76</p>"},{"location":"CS/Compilers/ch3/ch3-3/#lr1-core","title":"LR(1) \u9879\u96c6\u4e2d\u7684 Core","text":"<p>LR \u9879\u96c6\u7684 core \u662f\u6307\u9879\u96c6\u4e2d\u7684\u9879\u53bb\u6389\u5411\u524d\u770b\u7b26\u53f7\u540e\u7684\u90e8\u5206\uff08\u5373\u524d\u534a\u90e8\u5206\uff09</p> <p>\u4f8b\u5982 \\(\\{(X \\rightarrow \\alpha \\cdot \\beta, b), (Y \\rightarrow \\gamma \\cdot \\delta, d)\\}\\) \u7684 core \u662f \\(\\{ X \\rightarrow \\alpha \\cdot \\beta, Y \\rightarrow \\gamma \\cdot \\delta \\}\\)</p>"},{"location":"CS/Compilers/ch3/ch3-3/#lalr1_1","title":"LALR(1) \u7684\u6784\u9020","text":"<p>\u7531\u6b64\u5f15\u51fa LALR(1)\uff1a\u5c06 LR(1) Parsing DFA/Table \u4e2d core \u76f8\u540c\u7684\u9879\u96c6\uff08\u9664\u4e86\u5411\u524d\u770b\u7b26\u53f7\u4e0d\u540c\u4e4b\u5916\uff0c\u5176\u4ed6\u90e8\u5206\u662f\u76f8\u540c\u7684\u72b6\u6001\uff09\u5408\u5e76</p> <p>\u5177\u4f53\u7684\u6784\u9020\u65b9\u6cd5\u5982\u4e0b\uff1a</p> <ul> <li>\u91cd\u590d\u4ee5\u4e0b\u7684\u6b65\u9aa4\u76f4\u5230\u6240\u6709\u72b6\u6001\u90fd\u6709\u4e0d\u540c\u7684\u6838\u5fc3<ul> <li>\u9009\u62e9\u5177\u6709\u76f8\u540c\u6838\u5fc3\u7684\u4e24\u4e2a\u4e0d\u540c\u72b6\u6001</li> <li>\u901a\u8fc7\u5c06\u8fd9\u4e24\u4e2a\u72b6\u6001\u7684\u9879\u96c6\u5408\u5e76\u5728\u4e00\u8d77\uff0c\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u72b6\u6001</li> <li>\u5c06\u6307\u5411\u539f\u5148\u4e24\u4e2a\u72b6\u6001\u7684\u8fb9\u91cd\u5b9a\u5411\u5230\u65b0\u72b6\u6001\uff0c\u5c06\u539f\u5148\u4e24\u4e2a\u72b6\u6001\u6307\u5411\u5176\u4ed6\u72b6\u6001\u7684\u8fb9\u91cd\u65b0\u7531\u65b0\u72b6\u6001\u6307\u51fa\uff0c\u5982\u4e0b\u56fe </li> </ul> </li> </ul> \u4ece LR(1) \u5230 LALR(1) <p>\u5728\u4f8b\u5b50 LR(1) Parsing \u7684\u57fa\u7840\u4e0a\uff0c\u6784\u9020 LALR(1) Parsing Table \u5982\u4e0b\uff1a</p> <p></p> <p>\u53ef\u4ee5\u770b\u5230 LALR(1) Parsing Table \u6bd4 LR(1) Parsing Table \u5c0f\u5f88\u591a\uff0c\u5b9e\u9645\u5e94\u7528\u4e2d\u5360\u7528\u7684\u7a7a\u95f4\u66f4\u5c0f</p>"},{"location":"CS/Compilers/ch3/ch3-3/#lalr1-vs-lr1","title":"LALR(1) vs. LR(1)","text":"<ul> <li>LR(1)<ul> <li>\u628a\u671f\u671b\u7684\u5411\u524d\u770b\u7b26\u53f7\u4e5f\u52a0\u5165\u9879\u4e2d\u6210\u4e3a LR(1) \u9879</li> <li>\u5411\u524d\u770b\u7b26\u53f7\uff08\u4e32\uff09\u7684\u957f\u5ea6\u5373\u4e3a LR(k) \u4e2d\u7684 k</li> <li>\u5145\u5206\u5229\u7528\u5411\u524d\u770b\u7b26\u53f7\uff0c\u4f46\u662f\u72b6\u6001\u5f88\u591a</li> </ul> </li> <li>LALR(1)<ul> <li>\u4ecb\u4e8e SLR(1) \u548c LR(1) \u4e4b\u95f4\uff0c\u4e14\u5206\u6790\u8868\u548c SLR \u4e00\u6837\u5927</li> <li>LALR \u5df2\u7ecf\u53ef\u4ee5\u5904\u7406\u5927\u90e8\u5206\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00</li> </ul> </li> </ul>"},{"location":"CS/Compilers/ch3/ch3-3/#_2","title":"\u9519\u8bef\u6062\u590d","text":"<p>\u9519\u8bef\u6062\u590d\u7684\u52a8\u673a\u5728\u4e8e\uff1a\u5206\u6790\u65f6\uff0c\u5e94\u5f53\u80fd\u591f\u62a5\u544a\u51fa\u5c3d\u53ef\u80fd\u591a\u7684\u9519\u8bef\uff0c\u800c\u4e0d\u662f\u5728\u9047\u5230\u4e00\u4e2a\u9519\u8bef\u540e\u5c31\u505c\u6b62\u5206\u6790</p> <p>\u4e00\u822c\u6709\u5982\u4e0b\u4e24\u79cd\u9519\u8bef\u6062\u590d\u7684\u65b9\u5f0f\uff1a</p> <ul> <li>Local error recovery<ul> <li>\u5728\u68c0\u6d4b\u5230\u9519\u8bef\u7684\u5730\u65b9\uff0c\u8c03\u6574\u6808\u548c\u8f93\u5165\u6d41\uff0c\u4f7f\u5f97\u5206\u6790\u53ef\u4ee5\u6062\u590d</li> </ul> </li> <li>Global error repair<ul> <li>\u627e\u5230\u4f7f\u5f97\u539f\u59cb\u8f93\u5165\u4e32\u53d8\u5f97\u8bed\u6cd5\u6b63\u786e\u7684\u6700\u5c0f\u7684\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\u96c6\u5408\uff0c\u5373\u4f7f\u64cd\u4f5c\u5e76\u4e0d\u5728 LL \u6216 LR Parser \u9996\u5148\u62a5\u544a\u9519\u8bef\u7684\u4f4d\u7f6e</li> </ul> </li> </ul>"},{"location":"CS/Compilers/ch3/ch3-3/#local-error-recovery","title":"Local Error Recovery","text":"<p>Yacc \u4e2d\u4f7f\u7528\u7684\u4e00\u79cd local error recovery \u673a\u5236\u662f\uff1a\u4f7f\u7528\u4e00\u4e2a\u7279\u6b8a\u7684 <code>error</code> \u7b26\u53f7\u6765\u63a7\u5236\u9519\u8bef\u6062\u590d</p> <p>\u4f8b\u5982\uff0c\u5bf9\u4e8e\u5982\u4e0b\u6587\u6cd5</p> \\[ \\begin{aligned} exp &amp;\\rightarrow \\textbf{ID} \\\\ exp &amp;\\rightarrow exp + exp \\\\ exp &amp;\\rightarrow ( exps ) \\\\ exps &amp;\\rightarrow exp \\\\ exps &amp;\\rightarrow exps ; exp \\end{aligned} \\] <p>\u6dfb\u52a0\u989d\u5916\u7684\u9519\u8bef\u4ea7\u751f\u5f0f\uff08\u5982 \\(A \\rightarrow \\textbf{error} \\alpha\\)\uff09\u6765\u5b8c\u6210\u8bed\u6cd5\u9519\u8bef\u6062\u590d</p> \\[ \\begin{aligned} exp &amp;\\rightarrow \\textbf{error} \\\\ exps &amp;\\rightarrow \\textbf{error} ; exp \\end{aligned} \\] <p>\u8fd9\u6837\uff0c\u5982\u679c\u9047\u5230\u5728\u8868\u8fbe\u5f0f\u7684\u4e2d\u95f4\u9047\u5230\u8bed\u6cd5\u9519\u8bef\uff0c\u89e3\u6790\u5668\u53ef\u4ee5\u6709\u67d0\u79cd\u65b9\u6cd5\u8df3\u5230\u4e0b\u4e00\u4e2a\u5206\u53f7\u6216\u8005\u53f3\u62ec\u53f7\u5904\u7ee7\u7eed\u89e3\u6790</p> <p>\u4e00\u4e9b\u63d0\u793a</p> <ul> <li>\u8fd9\u6837\u7684\u5206\u53f7\u6216\u8005\u53f3\u62ec\u53f7\u88ab\u79f0\u4e3a\u540c\u6b65\u8bb0\u53f7 (synchronizing tokens)</li> <li>\\(\\textbf{error}\\) \u88ab\u5f53\u4f5c\u4e00\u4e2a\u7279\u6b8a\u7684\u7ec8\u7ed3\u7b26\u53f7\uff0c\u7528\u6765\u8868\u793a\u9519\u8bef</li> </ul> <p>\u5f53 LR Parser \u9047\u5230\u9519\u8bef\u65f6\uff0c\u5b83\u4f1a\u91c7\u53d6\u5982\u4e0b\u7684\u6b65\u9aa4\uff1a</p> <ul> <li>\u4e0d\u65ad\u5f39\u51fa\u6808\u4e2d\u72b6\u6001\uff0c\u76f4\u5230\u6808\u9876\u72b6\u6001\u5305\u542b\u9879 \\(A \\rightarrow \\alpha \\cdot \\textbf{error} \\beta\\)</li> <li>\u5206\u6790\u5668\u5c06 \\(\\textbf{error}\\) \u79fb\u5165</li> <li>\u5982\u679c \\(\\beta\\) \u4e3a\u7a7a\uff0c\u5206\u6790\u5668\u76f4\u63a5\u6267\u884c\u5f52\u7ea6\uff0c\u5e76\u8c03\u7528\u76f8\u5173\u7684\u8bed\u4e49\u52a8\u4f5c\uff1b\u5426\u5219\u8df3\u8fc7\u4e00\u4e9b\u7b26\u53f7\uff0c\u627e\u5230\u53ef\u4ee5\u5f52\u7ea6\u4e3a \\(\\beta\\) \u7684\u4e32\u4e3a\u6b62</li> <li>\u5206\u6790\u5668\u7ee7\u7eed\u5206\u6790\u8f93\u5165</li> </ul> Local Error Recovery \u7684\u4f8b\u5b50 <p>\u4ee5\u4e0a\u8ff0\u7ed9\u51fa\u7684\u6587\u6cd5</p> \\[ \\begin{aligned} exp &amp;\\rightarrow \\textbf{ID} \\\\ exp &amp;\\rightarrow exp + exp \\\\ exp &amp;\\rightarrow ( exps ) \\\\ exps &amp;\\rightarrow exp \\\\ exps &amp;\\rightarrow exps ; exp \\\\ exp &amp;\\rightarrow \\textbf{error} \\\\ exps &amp;\\rightarrow \\textbf{error} ; exp \\end{aligned} \\] <p>\u4e3a\u4f8b\uff0c\u5bf9\u4e8e\u8f93\u5165\u4e32 \\((\\textbf{ID}++)\\)\uff0c\u5206\u6790\u8fc7\u7a0b\u5982\u4e0b\uff08\u6ce8\u610f\uff0c\u8fd9\u91cc\u6ca1\u6709\u523b\u753b\u72b6\u6001\u6808\uff0c\u4ec5\u4ec5\u4f7f\u7528\u201c\u7b26\u53f7\u6808\u201d\u6765\u793a\u610f\uff09\uff1a </p> <p>\u603b\u7ed3\u4e00\u4e0b Local Error Recovery\uff1a</p> <ul> <li>\u4f7f\u7528\u9519\u8bef\u4ea7\u751f\u5f0f\u6765\u5b8c\u6210\u8bed\u6cd5\u9519\u8bef\u6062\u590d<ul> <li>\u5982 \\(A \\rightarrow \\textbf{error} \\alpha\\), \\(stmt \\rightarrow \\textbf{error};\\)</li> </ul> </li> <li>\u5b9a\u4e49\u54ea\u4e9b\u975e\u7ec8\u7ed3\u7b26\u53f7\u6709\u9519\u8bef\u6062\u590d\u52a8\u4f5c<ul> <li>\u5982\u8868\u8fbe\u5f0f\u3001\u8bed\u53e5\u3001\u5757\u3001\u51fd\u6570\u5b9a\u4e49\u7b49\u975e\u7ec8\u7ed3\u7b26\u53f7</li> </ul> </li> <li>\u5f53\u8bed\u6cd5\u5206\u6790\u5668\u9047\u5230\u9519\u8bef\u65f6<ul> <li>\u6267\u884c\u4e0a\u8ff0\u7684\u9519\u8bef\u6062\u590d\u52a8\u4f5c</li> </ul> </li> </ul>"},{"location":"CS/Compilers/ch3/ch3-3/#global-error-repair","title":"Global Error Repair","text":"<p>TODO: Add more about Burke-Fisher error repair</p> <p>\u4e00\u79cd\u5168\u5c40\u9519\u8bef\u4fee\u590d\u7684\u65b9\u6cd5\u662f Burke-Fisher error repair\uff0c\u601d\u8def\u662f\u5728 Parser \u62a5\u544a\u9519\u8bef\u7684\u5730\u65b9\u4e4b\u524d\u4e0d\u591a\u4e8e K \u4e2a Token \u7684\u6bcf\u4e2a\u70b9\u4e0a\u8fdb\u884c\u5355 Token \u63d2\u5165\u3001\u5220\u9664\u6216\u66ff\u6362</p> <ul> <li>LL(k) \u6216 LR(k)\uff08\u6216 LALR \u7b49\uff09\u8bed\u6cd5\u6839\u672c\u6ca1\u6709\u4fee\u6539\uff08\u6ca1\u6709\u9519\u8bef\u4ea7\u751f\u5f0f\uff09</li> <li>\u89e3\u6790\u8868\u4e5f\u6ca1\u6709\u4fee\u6539</li> </ul>"},{"location":"CS/Compilers/ch3/ch3-3/#lr0-slr1-lr1-lalr1","title":"\u5c0f\u7ed3\uff1aLR(0) SLR(1) LR(1) LALR(1)","text":""},{"location":"CS/Compilers/ch3/ch3-4/","title":"CFG \u53ca\u8bed\u6cd5\u5206\u6790\u6982\u8ff0","text":"<p> \u7ea6 763 \u4e2a\u5b57  23 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 3 \u5206\u949f</p>"},{"location":"CS/Compilers/ch3/ch3-4/#_1","title":"\u8bed\u6cd5\u5206\u6790\u5668\u7684\u751f\u6210\u5668","text":"<p>\u5728 \u8bcd\u6cd5\u5206\u6790 \u4e2d\uff0c\u6211\u4eec\u4ecb\u7ecd\u8fc7 Lex/Flex\uff0c\u5b83\u4eec\u662f\u7528\u6765\u751f\u6210\u8bcd\u6cd5\u5206\u6790\u5668\u7684\u5de5\u5177\u3002\u7c7b\u4f3c\u7684\uff0cYacc/Bison \u662f\u7528\u6765\u751f\u6210\u8bed\u6cd5\u5206\u6790\u5668\u7684\u5de5\u5177</p>"},{"location":"CS/Compilers/ch3/ch3-4/#yacc","title":"\u8bed\u6cd5\u5206\u6790\u5668\u7684\u751f\u6210\u5668 Yacc","text":"<p>Yacc: yet another compiler-compiler\uff0c\u662f\u57fa\u4e8e LALR(1) \u7684\u8bed\u6cd5\u5206\u6790\u5668\u751f\u6210\u5668\uff0c\u9700\u8981\u4f7f\u7528 BNF (Backus-Naur Form) \u5f62\u5f0f\u4e66\u5199\u6587\u6cd5</p> <p>Yacc \u7684 GNU \u7248\u53eb\u505a Bison</p> <p></p> <p>Yacc \u4e0e Lex \u7684\u8054\u7cfb\u5982\u4e0b\uff1a</p> <p></p>"},{"location":"CS/Compilers/ch3/ch3-4/#yacc_1","title":"Yacc \u6e90\u7a0b\u5e8f\u7684\u7ed3\u6784","text":"<p>Yacc \u6e90\u7a0b\u5e8f\u5206\u4e3a\u4e09\u90e8\u5206\uff1a</p> <ul> <li>\u58f0\u660e<ul> <li>\u653e\u7f6e C \u58f0\u660e\u548c\u5bf9\u8bcd\u6cd5\u5355\u5143\u7684\u58f0\u660e</li> </ul> </li> <li>\u7ffb\u8bd1\u89c4\u5219<ul> <li>\u6307\u660e\u4ea7\u751f\u5f0f\u53ca\u76f8\u5173\u7684\u8bed\u4e49\u52a8\u4f5c</li> <li>\u683c\u5f0f\u4e3a <code>lhs : rhs { action }</code><ul> <li><code>lhs</code> \u662f\u4ea7\u751f\u5f0f\u5de6\u90e8\uff0c<code>rhs</code> \u662f\u4ea7\u751f\u5f0f\u53f3\u90e8\uff0c<code>action</code> \u662f\u8bed\u4e49\u52a8\u4f5c\uff08\u5728\u89c4\u7ea6\u52a8\u4f5c\u53d1\u751f\u65f6\u6267\u884c\uff09</li> <li>\u4e00\u4e2a\u793a\u4f8b\u7684\u8bed\u4e49\u52a8\u4f5c\u662f <code>$$ = $1 + $3;</code><ul> <li><code>$$</code> \u8868\u793a\u548c\u4ea7\u751f\u5f0f\u5934\u76f8\u5173\u7684\u5c5e\u6027\u503c\uff08\u5373\u89c4\u7ea6\u7684\u7ed3\u679c\uff09</li> <li><code>$i</code> \u8868\u793a\u4ea7\u751f\u5f0f\u4f53\u4e2d\u7b2c \\(i\\) \u4e2a\u6587\u6cd5\u7b26\u53f7\u7684\u5c5e\u6027\u503c</li> </ul> </li> </ul> </li> </ul> </li> <li>\u8f85\u52a9\u6027 C \u8bed\u8a00\u4f8b\u7a0b<ul> <li>\u88ab\u76f4\u63a5\u62f7\u8d1d\u5230\u751f\u6210\u7684 C \u8bed\u8a00\u6e90\u7a0b\u5e8f\u4e2d</li> <li>\u53ef\u5728\u8bed\u4e49\u52a8\u4f5c\u4e2d\u8c03\u7528</li> <li>\u5305\u62ec <code>yylex()</code>\uff0c\u8fd9\u4e2a\u51fd\u6570\u8fd4\u56de\u8bcd\u6cd5\u5355\u5143\uff0c\u53ef\u4ee5\u7531 Lex \u751f\u6210</li> </ul> </li> </ul> <pre><code>\u58f0\u660e\u90e8\u5206\n%%\n\u7ffb\u8bd1\u89c4\u5219\u90e8\u5206\n%%\n\u8f85\u52a9\u6027 C \u8bed\u8a00\u4f8b\u7a0b\n</code></pre> Yacc \u7684\u4f7f\u7528 <p>\u5bf9\u4e8e\u5982\u4e0b\u6587\u6cd5</p> \\[ \\begin{aligned} exp &amp;\\rightarrow exp\\ addop\\ term\\ |\\ term \\\\ addop &amp;\\rightarrow +\\ |\\ - \\\\ term &amp;\\rightarrow term\\ mulop\\ factor\\ |\\ factor \\\\ mulop &amp;\\rightarrow * \\\\ factor &amp;\\rightarrow (\\ exp\\ )\\ |\\ number \\end{aligned} \\] <p>\u53ef\u4ee5\u4f7f\u7528 Yacc \u7f16\u5199\u5982\u4e0b\u7684\u6e90\u7a0b\u5e8f</p> <pre><code>%{\n#include &lt;stdio.h&gt;\n#include &lt;ctype.h&gt;\nint yylex(void);\nint yyerror (char * s);\n%}\n%token NUMBER\n%%\ncommand: exp {printf(\"%d\\n\", $1);};\nexp: exp '+' term {$$ = $1 + $3;}\n| exp '-' term {$$ = $1 - $3;}\n| term {$$ = $1}\n;\nterm: term '*' factor {$$ = $1 * $3;}\n| factor {$$ = $1;}\n;\nfactor: NUMBER {$$ = $1;}\n| '(' exp ')' {$$ = $2;}\n;\n</code></pre>"},{"location":"CS/Compilers/ch3/ch3-4/#yacc_2","title":"Yacc \u6587\u4ef6\u683c\u5f0f\u4e2d\u7684\u51e0\u4e2a\u95ee\u9898","text":"<ul> <li>\u6d88\u9664\u4e8c\u4e49\u6027\uff1a\u4e3a\u7b97\u7b26\u6307\u5b9a\u4f18\u5148\u7ea7\u4e0e\u7ed3\u5408\u5f8b <pre><code>%left '-' '+\u2019\n%left '*' '/\u2019\n%right UMINUS /* negation--unary minus */\n%right '^'    /* exponentiation */\n</code></pre></li> <li>\u51b2\u7a81\u89e3\u51b3<ul> <li>\u5f52\u7ea6/\u5f52\u7ea6\u51b2\u7a81\uff1a\u9009\u62e9 Yacc \u8bf4\u660e\u4e2d\u5148\u51fa\u73b0\u7684\u4ea7\u751f\u5f0f</li> <li>\u79fb\u8fdb/\u5f52\u7ea6\u51b2\u7a81\uff1a\u79fb\u8fd1\u4f18\u5148</li> </ul> </li> </ul> <p>\u66f4\u901a\u7528\u7684\u65b9\u6cd5\uff1a\u6539\u5199\u6587\u6cd5\u4ee5\u6d88\u9664\u51b2\u7a81\u3002\u4f8b\u5982, \u6d88\u9664\u4e8c\u4e49\u6027\u7684\u540c\u65f6\u4e5f\u53ef\u80fd\u51cf\u5c11\u4e86\u51b2\u7a81</p>"},{"location":"CS/Compilers/ch3/ch3-4/#_2","title":"\u8bed\u6cd5\u5206\u6790\u5c0f\u7ed3","text":""},{"location":"CS/Compilers/ch3/ch3-4/#_3","title":"\u5404\u79cd\u6587\u6cd5\u7684\u8868\u8fbe\u80fd\u529b","text":""},{"location":"CS/Compilers/ch3/ch3-4/#slr-lr1","title":"SLR \u548c LR(1) \u5206\u6790\u5bf9\u6bd4","text":"SLR(1)LR(1)\u52a8\u4f5c\u79fb\u8fdb $$ A \\rightarrow \\alpha \\cdot a \\beta \\in I_i \\\\ \\text{Goto}(I_i, a) = I_j \\\\ \\text{Action}[i, a] = sj $$  $$ A \\rightarrow \\alpha \\cdot a \\beta, b \\in I_i \\\\ \\text{Goto}(I_i, a) = I_j \\\\ \\text{Action}[i, a] = sj $$ \u89c4\u7ea6 $$ A \\rightarrow \\alpha \\cdot \\in I_i \\\\ a \\in \\text{Follow}(A) \\\\ \\text{Action}[i, a] = rj $$  $$ A \\rightarrow \\alpha \\cdot, a \\in I_i \\\\ \\text{Action}[i, a] = rj $$"},{"location":"CS/Compilers/ch3/ch3-4/#ll1-lr1","title":"LL(1) \u548c LR(1) \u5206\u6790\u5bf9\u6bd4","text":"LR(1) \u65b9\u6cd5 LL(1) \u65b9\u6cd5 \u5efa\u7acb\u5206\u6790\u6811 \u81ea\u5e95\u800c\u4e0a \u81ea\u9876\u800c\u4e0b \u5f52\u7ea6 or \u63a8\u5bfc \u89c4\u8303\u5f52\u7ea6\uff08\u6700\u53f3\u63a8\u5bfc\u7684\u9006\uff09 \u6700\u5de6\u63a8\u5bfc \u5206\u6790\u8868 \u72b6\u6001\u00d7\u6587\u6cd5\u7b26\u53f7\uff0c\u5927 \u975e\u7ec8\u7ed3\u7b26\u00d7\u7ec8\u7ed3\u7b26\uff0c\u5c0f \u5206\u6790\u6808 \u72b6\u6001\u6808\uff0c\u4fe1\u606f\u66f4\u591a \u6587\u6cd5\u7b26\u53f7\u6808\uff08\u975e\u9012\u5f52\u5b9e\u73b0\uff09 <p>\u6b64\u5916\uff0c\u5c3d\u7ba1\u90fd\u8981\u5411\u524d\u770b\u4e00\u4e2a\u7b26\u53f7\uff0c\u4e8c\u8005\u4e5f\u6709\u533a\u522b\uff1a</p> <ul> <li>LR(1)\uff1a\u5728\u8bc6\u522b\u51fa\u6574\u4e2a rhs \u540e\uff0c\u518d\u5f80\u524d\u770b 1 \u4e2a\u7b26\u53f7\uff0c\u7136\u540e\u786e\u5b9a\u4f7f\u7528\u54ea\u6761\u4ea7\u751f\u5f0f\u5f52\u7ea6 \\(A \\rightarrow \\alpha, B \\rightarrow \\alpha\\)</li> <li>LL(1)\uff1a\u5411\u524d\u770b 1 \u4e2a\u7b26\u53f7\u540e\u6839\u636e First, Follow\uff08\u4e5f\u5c31\u662f\u9884\u6d4b\u5206\u6790\u8868\uff09\u6765\u786e\u5b9a\u4f7f\u7528\u54ea\u6761\u4ea7\u751f\u5f0f\u63a8\u5bfc \\(A \\rightarrow \\alpha_1 | \\alpha_2 | \\alpha_3\\)</li> </ul>"},{"location":"CS/Compilers/ch3/ch3-4/#ll1-slrlr1","title":"LL(1), SLR\u548cLR(1)\u5bf9\u6bd4","text":""}]}