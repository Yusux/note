{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"( \uff3e\u2200\uff3e )\uff0f","text":""},{"location":"friends/","title":"\u670b\u53cb\u4eec","text":"<p>Tips</p> <p>\u56e0\u4e3a\u521a\u5efa\u8d77\u6765\uff0c\u5c31\u53ea\u80fd\u5148\u5355\u65b9\u9762\u6dfb\u52a0\u4e86 awa</p> <p>\u6837\u5f0f\u6765\u6e90\u4e8e\u9e64\u7fd4\u4e07\u91cc\u8001\u5e08</p> \u9e64\u7fd4\u4e07\u91cc\u7684\u7b14\u8bb0\u672c \u4f1f\u5927\uff0c\u65e0\u9700\u591a\u8a00 FFox's Notes \u6478\u4e00\u6478\uff0c\u5c31\u4f1a\u88ab\u5403\u6389\u6570\u7406\u57fa\u7840\uff01 HobbitQia \u7684\u7b14\u8bb0\u672c \u5c5e\u4e8e\u6bcf\u4e00\u4e2a\u4eba\u7684\u5b66\u4e1a\u5bfc\u5e08"},{"location":"CS/","title":"\u8ba1\u7b97\u673a\u79d1\u5b66","text":"<p> \u7ea6 34 \u4e2a\u5b57 </p> <p>\u7b80\u4ecb</p> <p>\u6d89\u53ca\u5e73\u65f6\u4e0a\u8bfe\u65f6\u968f\u8bb0\u548c\u4e0b\u8bfe\u540e\u6574\u7406\u7684\u7b14\u8bb0\uff0c\u5f88\u591a\u8bfe\u7a0b\u4e0d\u592a\u5b8c\u6574\u3002</p>"},{"location":"CS/Compilers/","title":"\u7f16\u8bd1\u539f\u7406","text":"<p> \u7ea6 141 \u4e2a\u5b57 </p> <p>\u7b80\u4ecb</p> <p>\u6d59\u6c5f\u5927\u5b66\u300a\u7f16\u8bd1\u539f\u7406\u300b\u8bfe\u7a0b\u7b14\u8bb0\uff0c\u6388\u8bfe\u8001\u5e08\u4e3a\u59da\u57f9\u68ee\u8001\u5e08\u3002</p>"},{"location":"CS/Compilers/#_2","title":"\u5206\u6570\u7ec4\u6210","text":"<ul> <li>\u8bfe\u540e\u4f5c\u4e1a 10%</li> <li>\u968f\u5802\u6d4b\u8bd5 10%</li> <li>\u671f\u4e2d\u8003\u8bd5 15%</li> <li>\u8bfe\u7a0b\u8bbe\u8ba1 25%</li> <li>\u671f\u672b\u8003\u8bd5 40%</li> </ul> <p>\u5176\u4e2d\uff0c\u671f\u672b\u8003\u8bd5\u4f4e\u4e8e 40\uff0c\u5219\u603b\u8bc4\u4e0d\u53ca\u683c\u3002</p>"},{"location":"CS/Compilers/#_3","title":"\u5b9e\u9a8c\u5b89\u6392","text":"<p>\u9664 Lab 0 \u4e3a\u4e2a\u4eba\u5b9e\u9a8c\u5916\uff0c\u5176\u4ed6\u4e3a\u5c0f\u7ec4\u5b9e\u9a8c\uff0c\u6bcf\u7ec4 2-3 \u4eba\u3002\u6574\u4f53\u5b9e\u9a8c\u5b89\u6392\u5982\u4e0b\uff1a</p> <ul> <li>Lab 0: Setup &amp; Warm-up, just for fun</li> <li>Lab 1: Lexer &amp; Parser</li> <li>Lab 2: Semantic Analysis</li> <li>Lab 3: Accipit IR Generation</li> <li>Lab 4: Emit RISC-V Assembly</li> </ul> <p>\u6b64\u5916\uff0c\u53ef\u80fd\u6709\u96f6\u6563\u7684 Bonus \u5b9e\u9a8c\u3002</p>"},{"location":"CS/Compilers/ch1/","title":"\u6982\u8ff0","text":"<p> \u7ea6 1991 \u4e2a\u5b57  28 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 7 \u5206\u949f</p>"},{"location":"CS/Compilers/ch1/#_2","title":"\u7f16\u7a0b\u8bed\u8a00\u53ca\u8bbe\u8ba1","text":""},{"location":"CS/Compilers/ch1/#_3","title":"\u7f16\u7a0b\u8bed\u8a00","text":"<p>\u5b9a\u4e49\uff1aA programming language is a notation for describing computations to people and to machines.</p> <p>\u5e38\u89c1\u7684\u7f16\u7a0b\u8bed\u8a00\u6cdb\u578b\u5305\u62ec\uff1a</p> <ul> <li>\u8fc7\u7a0b\u5f0f (Procedural): C, Fortran, Pascal</li> <li>\u51fd\u6570\u5f0f (Functional): Lisp/Scheme, Haskell</li> <li>\u903b\u8f91\u5f0f (Logic): Prolog, Datlog</li> <li>\u9762\u5411\u5bf9\u8c61 (Object-Oriented): Smalltalk, Java, Eiffel</li> </ul>"},{"location":"CS/Compilers/ch1/#_4","title":"\u8bed\u6cd5\u4e0e\u8bed\u4e49","text":"<ul> <li>\u8bed\u6cd5 (Syntax): \u8bed\u8a00\u7684\u7ed3\u6784\u548c\u5f62\u5f0f\uff0c\u6307\u660e\u4ec0\u4e48\u662f\u5408\u6cd5\u7684\u7a0b\u5e8f</li> <li>\u8bed\u4e49 (Semantics): \u8bed\u8a00\u7684\u542b\u4e49\uff0c\u6307\u660e\u5408\u6cd5\u7a0b\u5e8f\u7684\u884c\u4e3a<ul> <li>\u64cd\u4f5c\u8bed\u4e49\uff1a\u7a0b\u5e8f\u7684\u6267\u884c\u8fc7\u7a0b</li> <li>\u516c\u7406\u8bed\u4e49\uff1a\u7a0b\u5e8f\u7684\u63a8\u5bfc\u8fc7\u7a0b</li> <li>\u6307\u79f0\u8bed\u4e49\uff1a\u7a0b\u5e8f\u8ba1\u7b97\u7684\u51fd\u6570</li> </ul> </li> </ul>"},{"location":"CS/Compilers/ch1/#_5","title":"\u7f16\u8bd1\u5668\u53ca\u5176\u5f62\u5f0f","text":""},{"location":"CS/Compilers/ch1/#_6","title":"\u7f16\u8bd1\u5668","text":"<p>\u7f16\u8bd1\u5668\u662f\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u8bfb\u5165\u6e90\u7a0b\u5e8f\u5e76\u5c06\u5176\u7ffb\u8bd1\u6210\u8bed\u4e49\u7b49\u4ef7\u7684\u76ee\u6807\u7a0b\u5e8f\uff08Translate from the syntax of one language to another but preserve the semantics\uff09</p> <p></p> <p>\u5176\u4e2d\uff0c\u76ee\u6807\u7a0b\u5e8f\u5982\u679c\u662f\u53ef\u6267\u884c\u7684\u673a\u5668\u8bed\u8a00\u7a0b\u5e8f\uff0c\u5219\u53ef\u4ee5\u88ab\u7528\u6237\u8c03\u7528\uff0c\u5904\u7406\u8f93\u5165\u5e76\u4ea7\u751f\u8f93\u51fa\uff1b\u5982\u679c\u662f\u6c47\u7f16\u8bed\u8a00\u7a0b\u5e8f\uff0c\u5219\u987b\u7ecf\u6c47\u7f16\u5668\u6c47\u7f16\u540e\u65b9\u53ef\u6267\u884c\u3002\u82e5\u4ece\u72ed\u4e49\u770b\u6765\uff1a</p> <ul> <li>\u6e90\u7a0b\u5e8f\uff1a\u7528\u67d0\u79cd\u9ad8\u7ea7\u8bed\u8a00\u7f16\u5199</li> <li>\u76ee\u6807\u7a0b\u5e8f\uff1a\u7528\u76ee\u6807\u4ee3\u7801\u6216\u673a\u5668\u8bed\u8a00\u7f16\u5199</li> <li>\u8fc7\u7a0b\u5982\uff1aC++ =&gt; \u673a\u5668\u8bed\u8a00</li> </ul> <p>\u82e5\u4ece\u5e7f\u4e49\u6765\u770b\uff1a</p> <ul> <li>\u76ee\u6807\u7a0b\u5e8f\uff1a\u4ecb\u4e8e\u6e90\u8bed\u8a00\u548c\u673a\u5668\u8bed\u8a00\u4e4b\u95f4\u7684\u201c\u4e2d\u95f4\u8bed\u8a00\u201d\uff0c\u53ef\u4ee5\u662f\u53e6\u4e00\u79cd\u9ad8\u7ea7\u8bed\u8a00</li> <li>\u8fc7\u7a0b\u5982\uff1aC++ =&gt; C\uff0cPascal =&gt; C</li> </ul> C \u8bed\u8a00\u7f16\u8bd1\u5668 <p></p> Clang \u7f16\u8bd1\u5668\u7684\u4f18\u5316\u7b49\u7ea7 \u4f18\u5316\u7b49\u7ea7 \u7b80\u8981\u8bf4\u660e -Ofast \u5728 -O3 \u7ea7\u522b\u7684\u57fa\u7840\u4e0a\uff0c\u5f00\u542f\u66f4\u591a\u6fc0\u8fdb\u4f18\u5316\u9879\uff0c\u8be5\u4f18\u5316\u7b49\u7ea7\u4e0d\u4f1a\u4e25\u683c\u9075\u5faa\u8bed\u8a00\u6807\u51c6 -O3 \u5728 -O2 \u7ea7\u522b\u7684\u57fa\u7840\u4e0a\uff0c\u5f00\u542f\u4e86\u66f4\u591a\u7684\u9ad8\u7ea7\u4f18\u5316\u9879\uff0c\u4ee5\u7f16\u8bd1\u65f6\u95f4\u3001\u4ee3\u7801\u5927\u5c0f\u3001\u5185\u5b58\u4e3a\u4ee3\u4ef7\u83b7\u53d6\u66f4\u9ad8\u7684\u6027\u80fd -Os \u5728 -O2 \u7ea7\u522b\u7684\u57fa\u7840\u4e0a\uff0c\u5f00\u542f\u964d\u4f4e\u751f\u6210\u4ee3\u7801\u4f53\u91cf\u7684\u4f18\u5316 -O2 \u5f00\u542f\u4e86\u5927\u591a\u6570\u4e2d\u7ea7\u4f18\u5316\uff0c\u4f1a\u6539\u5584\u7f16\u8bd1\u65f6\u95f4\u5f00\u9500\u548c\u6700\u7ec8\u751f\u6210\u4ee3\u7801\u6027\u80fd -O/-O1 \u4f18\u5316\u6548\u679c\u4ecb\u4e8e -O0 \u548c -O2 \u4e4b\u95f4 -O0 \u9ed8\u8ba4\u4f18\u5316\u7b49\u7ea7\uff0c\u5373\u4e0d\u5f00\u542f\u7f16\u8bd1\u4f18\u5316\uff0c\u53ea\u5c1d\u8bd5\u51cf\u5c11\u7f16\u8bd1\u65f6\u95f4"},{"location":"CS/Compilers/ch1/#_7","title":"\u89e3\u91ca\u5668","text":"<p>\u89e3\u91ca\uff1a\u5728\u4e00\u79cd\u8bed\u8a00\u7684\u673a\u5668\u4e0a\uff0c\u76f4\u63a5\u6267\u884c\u7528\u53e6\u4e00\u79cd\u8bed\u8a00\u5199\u7684\u7a0b\u5e8f\u7684\u8fc7\u7a0b\uff0c\u79f0\u4e3a\u89e3\u91ca</p> <p>\u89e3\u91ca\u5668\uff1a\u63a5\u53d7\u7528\u6237\u63d0\u4f9b\u7684\u8f93\u5165\uff0c\u8fdb\u884c\u89e3\u91ca\u5e76\u9010\u53e5\u6267\u884c</p> <p></p>"},{"location":"CS/Compilers/ch1/#_8","title":"\u7f16\u8bd1\u5668\u7684\u5176\u4ed6\u5f62\u5f0f","text":"<ul> <li>\u4ea4\u53c9\u7f16\u8bd1\u5668 (Cross Compiler)<ul> <li>\u5728\u4e00\u4e2a\u5e73\u53f0\u4e0a\u751f\u6210\u53e6\u4e00\u4e2a\u5e73\u53f0\u4e0a\u7684\u4ee3\u7801\uff0c\u5982 PC -&gt; <code>arm-linux-gcc</code> -&gt; ARM</li> </ul> </li> <li>\u589e\u91cf\u7f16\u8bd1\u5668 (Incremental Compiler)<ul> <li>\u589e\u91cf\u5730\u7f16\u8bd1\u6e90\u7a0b\u5e8f\uff08\u53ea\u7f16\u8bd1\u4fee\u6539\u7684\u90e8\u5206\uff09</li> </ul> </li> <li>\u5373\u65f6\u7f16\u8bd1\u5668 (Just-in-time Compiler)<ul> <li>\u5728\u8fd0\u884c\u65f6\u5bf9 IR \u4e2d\u6bcf\u4e2a\u88ab\u8c03\u7528\u7684\u65b9\u6cd5\u8fdb\u884c\u7f16\u8bd1\uff0c\u5f97\u5230\u76ee\u6807\u673a\u5668\u7684\u672c\u5730\u4ee3\u7801\uff0c\u5982 Java VM \u4e2d\u7684\u5373\u65f6\u7f16\u8bd1\u5668</li> </ul> </li> <li>\u9884\u5148\u7f16\u8bd1\u5668 (Ahead-of-time Compiler)<ul> <li>\u5728\u7a0b\u5e8f\u6267\u884c\u524d\u5c06 IR \u7ffb\u8bd1\u6210\u672c\u5730\u7801\uff0c\u5982 ART \u4e2d\u7684 AOT</li> </ul> </li> </ul> Java \u865a\u62df\u673a"},{"location":"CS/Compilers/ch1/#_9","title":"\u7f16\u8bd1\u5668\u7684\u4f5c\u7528","text":"<ul> <li>\u63d0\u9ad8\u5f00\u53d1\u6548\u7387<ul> <li>\u5c4f\u853d\u786c\u4ef6\u67b6\u6784\u4fe1\u606f</li> <li>\u652f\u6301\u9ad8\u5c42\u7f16\u7a0b\u62bd\u8c61</li> </ul> </li> <li>\u63d0\u9ad8\u8fd0\u884c\u6027\u80fd<ul> <li>\u786c\u4ef6\u65e0\u5173\u7f16\u8bd1\u4f18\u5316</li> <li>\u786c\u4ef6\u76f8\u5173\u7f16\u8bd1\u4f18\u5316</li> </ul> </li> <li>\u5b89\u5168\u53ef\u9760<ul> <li>\u7c7b\u578b\u5b89\u5168</li> <li>\u529f\u80fd\u6b63\u786e</li> <li>\u4fe1\u606f\u6d41\u5b89\u5168</li> </ul> </li> </ul> \u7f16\u8bd1\u4f18\u5316 <p>\u5e38\u89c1\u7684\u7f16\u8bd1\u4f18\u5316\u601d\u8def  \u4f18\u5316\u53ef\u80fd\u5728\u4e0d\u540c\u7684\u9636\u6bb5\u8fdb\u884c\uff0c\u5177\u4f53\u7684\u5206\u7c7b\u5305\u62ec\uff1a\u5c40\u90e8/\u5168\u5c40/\u8fc7\u7a0b\u95f4\uff0c\u673a\u5668\u65e0\u5173/\u53ca\u5176\u76f8\u5173</p> \u4e00\u4e9b LLVM \u7f16\u8bd1\u4e4b\u5916\u7684\u5de5\u5177\u94fe \u5de5\u5177 \u4f5c\u7528 Clang static analyzer \u9759\u6001\u4ee3\u7801\u67e5\u9519 llcov \u52a8\u6001\u76d1\u63a7\u8986\u76d6\u7387 AddressSanitizer (ASan) \u52a8\u6001\u76d1\u63a7\u5b89\u5168\u95ee\u9898 DataflowSanitizer (DFSan) \u52a8\u6001\u6c61\u70b9\u5206\u6790 libFuzzer \u6a21\u7cca\u6d4b\u8bd5 LLDB \u8c03\u8bd5\u5668"},{"location":"CS/Compilers/ch1/#_10","title":"\u7f16\u8bd1\u5668\u7684\u9636\u6bb5","text":""},{"location":"CS/Compilers/ch1/#_11","title":"\u7f16\u8bd1\u8fc7\u7a0b\u6982\u89c8","text":"<p>\u4e00\u4e2a\u8fc7\u7a0b\u5212\u5206\u7684\u793a\u4f8b\u5982\u4e0b\uff1a</p> <p></p> <p>\u8fc7\u7a0b\u4e2d\u6d89\u53ca\u5230\uff1a</p> <ul> <li>\u7b26\u53f7\u8868 (Symbol Table)<ul> <li>\u8bb0\u5f55\u7a0b\u5e8f\u4e2d\u53d8\u91cf\u3001\u51fd\u6570\u7b49\u5bf9\u8c61\u7684\u5404\u79cd\u5c5e\u6027</li> <li>\u7b26\u53f7\u8868\u53ef\u7531\u7f16\u8bd1\u5668\u7684\u5404\u4e2a\u6b65\u9aa4\u4f7f\u7528</li> </ul> </li> <li>\u9519\u8bef\u5904\u7406 (Error Handler)<ul> <li>\u8bed\u6cd5\u9519\u8bef: \u5982\u7b97\u672f\u8868\u8fbe\u5f0f\u7684\u62ec\u53f7\u4e0d\u914d\u5bf9</li> <li>\u8bed\u4e49\u9519\u8bef: \u5982\u7b97\u7b26\u4f5c\u7528\u4e8e\u4e0d\u76f8\u5bb9\u7684\u8fd0\u7b97\u5bf9\u8c61</li> </ul> </li> </ul> <p>\u5173\u4e8e\u8fc7\u7a0b\u5212\u5206</p> <p>\u524d\u4e2d\u540e\u7aef\u7684\u5212\u5206\u4e0d\u4e00\u5b9a\u548c\u4e0a\u56fe\u8fc7\u7a0b\u5b8c\u5168\u4e00\u81f4</p>"},{"location":"CS/Compilers/ch1/#_12","title":"\u4e00\u4e9b\u6bd4\u8f83\u91cd\u8981\u7684\u8fc7\u7a0b","text":""},{"location":"CS/Compilers/ch1/#_13","title":"\u8bcd\u6cd5\u5206\u6790","text":"<p>\u8bcd\u6cd5\u5206\u6790\uff08Lexing/Scanning/Lexical Analysis\uff09\uff1a\u5c06\u7a0b\u5e8f\u5b57\u7b26\u6d41\u5206\u89e3\u4e3a token \u5e8f\u5217\u7684\u8fc7\u7a0b</p> <p></p> \u793a\u4f8b <p>\u4ee5\u5982\u4e0b\u7a0b\u5e8f\u4e3a\u4f8b <pre><code>int main() {\n    float initial, rate, position;\n\n    initial = 2;\n    rate = 0.1;\n    position = initial + rate * 60;\n\n    return 0;\n}\n</code></pre> \u53ef\u4ee5\u4f7f\u7528 <pre><code>clang -cc1 -dump-tokens a.c\n</code></pre> \u67e5\u770b\u8bcd\u6cd5\u5206\u6790\u7684\u7ed3\u679c <pre><code>int 'int'        [StartOfLine]  Loc=&lt;a.c:1:1&gt;\nidentifier 'main'        [LeadingSpace] Loc=&lt;a.c:1:5&gt;\nl_paren '('             Loc=&lt;a.c:1:9&gt;\nr_paren ')'             Loc=&lt;a.c:1:10&gt;\nl_brace '{'      [LeadingSpace] Loc=&lt;a.c:1:12&gt;\nfloat 'float'    [StartOfLine] [LeadingSpace]   Loc=&lt;a.c:2:5&gt;\nidentifier 'initial'     [LeadingSpace] Loc=&lt;a.c:2:11&gt;\ncomma ','               Loc=&lt;a.c:2:18&gt;\nidentifier 'rate'        [LeadingSpace] Loc=&lt;a.c:2:20&gt;\ncomma ','               Loc=&lt;a.c:2:24&gt;\nidentifier 'position'    [LeadingSpace] Loc=&lt;a.c:2:26&gt;\nsemi ';'                Loc=&lt;a.c:2:34&gt;\nidentifier 'initial'     [StartOfLine] [LeadingSpace]   Loc=&lt;a.c:4:5&gt;\nequal '='        [LeadingSpace] Loc=&lt;a.c:4:13&gt;\nnumeric_constant '2'     [LeadingSpace] Loc=&lt;a.c:4:15&gt;\nsemi ';'                Loc=&lt;a.c:4:16&gt;\nidentifier 'rate'        [StartOfLine] [LeadingSpace]   Loc=&lt;a.c:5:5&gt;\nequal '='        [LeadingSpace] Loc=&lt;a.c:5:10&gt;\nnumeric_constant '0.1'   [LeadingSpace] Loc=&lt;a.c:5:12&gt;\nsemi ';'                Loc=&lt;a.c:5:15&gt;\nidentifier 'position'    [StartOfLine] [LeadingSpace]   Loc=&lt;a.c:6:5&gt;\nequal '='        [LeadingSpace] Loc=&lt;a.c:6:14&gt;\nidentifier 'initial'     [LeadingSpace] Loc=&lt;a.c:6:16&gt;\nplus '+'         [LeadingSpace] Loc=&lt;a.c:6:24&gt;\nidentifier 'rate'        [LeadingSpace] Loc=&lt;a.c:6:26&gt;\nstar '*'         [LeadingSpace] Loc=&lt;a.c:6:31&gt;\nnumeric_constant '60'    [LeadingSpace] Loc=&lt;a.c:6:33&gt;\nsemi ';'                Loc=&lt;a.c:6:35&gt;\nreturn 'return'  [StartOfLine] [LeadingSpace]   Loc=&lt;a.c:8:5&gt;\nnumeric_constant '0'     [LeadingSpace] Loc=&lt;a.c:8:12&gt;\nsemi ';'                Loc=&lt;a.c:8:13&gt;\nr_brace '}'      [StartOfLine]  Loc=&lt;a.c:9:1&gt;\neof ''          Loc=&lt;a.c:9:2&gt;\n</code></pre></p>"},{"location":"CS/Compilers/ch1/#_14","title":"\u8bed\u6cd5\u5206\u6790","text":"<p>\u8bed\u6cd5\u5206\u6790\uff08Parsing/Syntax Analysis\uff09: \u5c06\u8bb0\u53f7\u5e8f\u5217\u89e3\u6790\u4e3a\u8bed\u6cd5\u7ed3\u6784\uff08\u4e00\u822c\u4e3a\u62bd\u8c61\u8bed\u6cd5\u6811 AST\uff09\u7684\u8fc7\u7a0b</p> <p></p> \u793a\u4f8b <p>\u540c\u4e0a\u4e00\u793a\u4f8b\u4ee3\u7801\uff0c\u53ef\u4ee5\u4f7f\u7528 <pre><code>clang -cc1 -ast-dump a.c\n</code></pre> \u67e5\u770b\u8bcd\u6cd5\u5206\u6790\u7684\u7ed3\u679c <pre><code>TranslationUnitDecl 0x5a0edc6d2588 &lt;&lt;invalid sloc&gt;&gt; &lt;invalid sloc&gt;\n|-TypedefDecl 0x5a0edc6d2db0 &lt;&lt;invalid sloc&gt;&gt; &lt;invalid sloc&gt; implicit __int128_t '__int128'\n| `-BuiltinType 0x5a0edc6d2b50 '__int128'\n|-TypedefDecl 0x5a0edc6d2e20 &lt;&lt;invalid sloc&gt;&gt; &lt;invalid sloc&gt; implicit __uint128_t 'unsigned __int128'\n| `-BuiltinType 0x5a0edc6d2b70 'unsigned __int128'\n|-TypedefDecl 0x5a0edc6d3128 &lt;&lt;invalid sloc&gt;&gt; &lt;invalid sloc&gt; implicit __NSConstantString 'struct __NSConstantString_tag'\n| `-RecordType 0x5a0edc6d2f00 'struct __NSConstantString_tag'\n|   `-Record 0x5a0edc6d2e78 '__NSConstantString_tag'\n|-TypedefDecl 0x5a0edc6d31c0 &lt;&lt;invalid sloc&gt;&gt; &lt;invalid sloc&gt; implicit __builtin_ms_va_list 'char *'\n| `-PointerType 0x5a0edc6d3180 'char *'\n|   `-BuiltinType 0x5a0edc6d2630 'char'\n|-TypedefDecl 0x5a0edc6d34b8 &lt;&lt;invalid sloc&gt;&gt; &lt;invalid sloc&gt; implicit __builtin_va_list 'struct __va_list_tag[1]'\n| `-ConstantArrayType 0x5a0edc6d3460 'struct __va_list_tag[1]' 1 \n|   `-RecordType 0x5a0edc6d32a0 'struct __va_list_tag'\n|     `-Record 0x5a0edc6d3218 '__va_list_tag'\n`-FunctionDecl 0x5a0edc72a940 &lt;a.c:1:1, line:9:1&gt; line:1:5 main 'int ()'\n`-CompoundStmt 0x5a0edc72ae30 &lt;col:12, line:9:1&gt;\n    |-DeclStmt 0x5a0edc72abd0 &lt;line:2:5, col:34&gt;\n    | |-VarDecl 0x5a0edc72aa48 &lt;col:5, col:11&gt; col:11 used initial 'float'\n    | |-VarDecl 0x5a0edc72aac8 &lt;col:5, col:20&gt; col:20 used rate 'float'\n    | `-VarDecl 0x5a0edc72ab48 &lt;col:5, col:26&gt; col:26 used position 'float'\n    |-BinaryOperator 0x5a0edc72ac40 &lt;line:4:5, col:15&gt; 'float' '='\n    | |-DeclRefExpr 0x5a0edc72abe8 &lt;col:5&gt; 'float' lvalue Var 0x5a0edc72aa48 'initial' 'float'\n    | `-ImplicitCastExpr 0x5a0edc72ac28 &lt;col:15&gt; 'float' &lt;IntegralToFloating&gt;\n    |   `-IntegerLiteral 0x5a0edc72ac08 &lt;col:15&gt; 'int' 2\n    |-BinaryOperator 0x5a0edc72acb8 &lt;line:5:5, col:12&gt; 'float' '='\n    | |-DeclRefExpr 0x5a0edc72ac60 &lt;col:5&gt; 'float' lvalue Var 0x5a0edc72aac8 'rate' 'float'\n    | `-ImplicitCastExpr 0x5a0edc72aca0 &lt;col:12&gt; 'float' &lt;FloatingCast&gt;\n    |   `-FloatingLiteral 0x5a0edc72ac80 &lt;col:12&gt; 'double' 1.000000e-01\n    |-BinaryOperator 0x5a0edc72ade0 &lt;line:6:5, col:33&gt; 'float' '='\n    | |-DeclRefExpr 0x5a0edc72acd8 &lt;col:5&gt; 'float' lvalue Var 0x5a0edc72ab48 'position' 'float'\n    | `-BinaryOperator 0x5a0edc72adc0 &lt;col:16, col:33&gt; 'float' '+'\n    |   |-ImplicitCastExpr 0x5a0edc72ada8 &lt;col:16&gt; 'float' &lt;LValueToRValue&gt;\n    |   | `-DeclRefExpr 0x5a0edc72acf8 &lt;col:16&gt; 'float' lvalue Var 0x5a0edc72aa48 'initial' 'float'\n    |   `-BinaryOperator 0x5a0edc72ad88 &lt;col:26, col:33&gt; 'float' '*'\n    |     |-ImplicitCastExpr 0x5a0edc72ad58 &lt;col:26&gt; 'float' &lt;LValueToRValue&gt;\n    |     | `-DeclRefExpr 0x5a0edc72ad18 &lt;col:26&gt; 'float' lvalue Var 0x5a0edc72aac8 'rate' 'float'\n    |     `-ImplicitCastExpr 0x5a0edc72ad70 &lt;col:33&gt; 'float' &lt;IntegralToFloating&gt;\n    |       `-IntegerLiteral 0x5a0edc72ad38 &lt;col:33&gt; 'int' 60\n    `-ReturnStmt 0x5a0edc72ae20 &lt;line:8:5, col:12&gt;\n    `-IntegerLiteral 0x5a0edc72ae00 &lt;col:12&gt; 'int' 0\n</code></pre></p>"},{"location":"CS/Compilers/ch1/#_15","title":"\u8bed\u4e49\u5206\u6790","text":"<p>\u8bed\u4e49\u5206\u6790\uff08Semantic Analysis\uff09\uff1a\u6536\u96c6\u6807\u8bc6\u7b26\u7684\u7c7b\u578b\u7b49\u5c5e\u6027\u4fe1\u606f\u7684\u8fc7\u7a0b</p> <p></p>"},{"location":"CS/Compilers/ch1/#_16","title":"\u4e2d\u95f4\u4ee3\u7801\u751f\u6210","text":"<p>\u4e2d\u95f4\u4ee3\u7801/\u4e2d\u95f4\u8868\u793a\uff08IR\uff09\uff1a\u6e90\u8bed\u8a00\u4e0e\u76ee\u6807\u8bed\u8a00\u4e4b\u95f4\u7684\u6865\u6881</p> <p></p> \u793a\u4f8b <p>\u540c\u4e0a\u4e00\u793a\u4f8b\u4ee3\u7801\uff0c\u53ef\u4ee5\u4f7f\u7528 <pre><code>clang -cc1 a.c -emit-llvm -o a.ll\n</code></pre> \u67e5\u770b\u8bcd\u6cd5\u5206\u6790\u7684\u7ed3\u679c <pre><code>; ModuleID = 'a.c'\nsource_filename = \"a.c\"\ntarget datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n; Function Attrs: noinline nounwind optnone\ndefine dso_local i32 @main() #0 {\nentry:\n  %retval = alloca i32, align 4\n  %initial = alloca float, align 4\n  %rate = alloca float, align 4\n  %position = alloca float, align 4\n  store i32 0, ptr %retval, align 4\n  store float 2.000000e+00, ptr %initial, align 4\n  store float 0x3FB99999A0000000, ptr %rate, align 4\n  %0 = load float, ptr %initial, align 4\n  %1 = load float, ptr %rate, align 4\n  %mul = fmul float %1, 6.000000e+01\n  %add = fadd float %0, %mul\n  store float %add, ptr %position, align 4\n  ret i32 0\n}\n\nattributes #0 = { noinline nounwind optnone \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-features\"=\"+cx8,+mmx,+sse,+sse2,+x87\" }\n\n!llvm.module.flags = !{!0}\n!llvm.ident = !{!1}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{!\"clang version 16.0.6\"}\n</code></pre></p>"},{"location":"CS/Compilers/ch1/#_17","title":"\u57fa\u4e8e\u4e2d\u95f4\u8868\u793a\u7684\u4f18\u5316","text":"<p>\u57fa\u4e8e\u4e2d\u95f4\u8868\u793a\u7684\u4f18\u5316\uff1a\u57fa\u4e8e\u4e2d\u95f4\u8868\u793a\u8fdb\u884c\u5206\u6790\u4e0e\u53d8\u6362\uff0c\u4ee5\u964d\u4f4e\u6267\u884c\u65f6\u95f4\u3001\u51cf\u5c11\u8d44\u6e90\u6d88\u8017\u7b49</p> <p></p> \u793a\u4f8b <p>\u4f7f\u7528 -O3 \u4f18\u5316 <pre><code>clang -cc1 -S a.c -emit-llvm -O3 -o a.ll\n</code></pre> \u4e0e\u4e0a\u4e00\u793a\u4f8b\u5bf9\u6bd4\uff0c\u5f97\u5230\u7684\u7ed3\u679c\u660e\u663e\u66f4\u77ed <pre><code>; ModuleID = 'a.c'\nsource_filename = \"a.c\"\ntarget datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-pc-linux-gnu\"\n\n; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none)\ndefine dso_local i32 @main() local_unnamed_addr #0 {\nentry:\nret i32 0\n}\n\nattributes #0 = { mustprogress nofree norecurse nosync nounwind willreturn memory(none) \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-features\"=\"+cx8,+mmx,+sse,+sse2,+x87\" }\n\n!llvm.module.flags = !{!0}\n!llvm.ident = !{!1}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{!\"clang version 16.0.6\"}\n</code></pre></p>"},{"location":"CS/Compilers/ch1/#_18","title":"\u76ee\u6807\u4ee3\u7801\u751f\u6210","text":"<p>\u76ee\u6807\u4ee3\u7801\u751f\u6210\uff1a\u628a\u4e2d\u95f4\u8868\u793a\u5f62\u5f0f\u7ffb\u8bd1\u5230\u76ee\u6807\u8bed\u8a00\u7684\u8fc7\u7a0b\uff0c\u53ef\u6d89\u53ca\u6307\u4ee4\u9009\u62e9\u3001\u5bc4\u5b58\u5668\u5206\u914d\u3001\u6307\u4ee4\u8c03\u5ea6\u8fc7\u7a0b</p> <p></p> \u793a\u4f8b <p>\u4f7f\u7528 <pre><code>llc a.ll -o a.s\n</code></pre> \u8fdb\u884c\u4ee3\u7801\u751f\u6210 <pre><code>    .text\n    .file   \"a.c\"\n    .globl  main                        # -- Begin function main\n    .p2align    4, 0x90\n    .type   main,@function\nmain:                                   # @main\n# %bb.0:                                # %entry\n    xorl    %eax, %eax\n    retq\n.Lfunc_end0:\n    .size   main, .Lfunc_end0-main\n                                        # -- End function\n    .ident  \"clang version 16.0.6\"\n    .section    \".note.GNU-stack\",\"\",@progbits\n</code></pre></p>"},{"location":"CS/Compilers/ch1/#tiger","title":"\u6574\u4f53\u793a\u4f8b\uff1aTiger \u7f16\u8bd1\u5668","text":"<ul> <li>AST (\u62bd\u8c61\u8bed\u6cd5\u6811): \u8bed\u6cd5\u5206\u6790 + \"Parsing Actions\" \u751f\u6210</li> <li>IR Tree: \u8bed\u4e49\u5206\u6790\u540e\u6309\u4e00\u5b9a\u89c4\u5219\u751f\u6210\uff08\u6811\u578b\u4e2d\u95f4\u8868\u793a\uff09</li> <li>Canonicalized IR Tree: \u5bf9 IR Tree \u505a\u53d8\u6362\u6240\u5f97\uff08\u65b9\u4fbf\u751f\u6210\u6c47\u7f16\uff09</li> <li>Assem: \u6307\u4ee4\u9009\u62e9\u5668\u751f\u6210\uff08\u4e00\u79cd\u7279\u6b8a\u7684\u6c47\u7f16\uff09</li> <li>CFG (Control Flow Graph, \u63a7\u5236\u6d41\u56fe): \u65b9\u4fbf\u8fdb\u884c\u6570\u636e\u6d41\u5206\u6790<ul> <li>\u5982\u6d3b\u8dc3\u53d8\u91cf\u5206\u6790\uff08Liveness Analysis\uff09</li> </ul> </li> <li>Interference Graph: \u4ece\u6d3b\u8dc3\u53d8\u91cf\u5206\u6790\u7684\u7ed3\u679c\u6784\u9020\uff0c\u7528\u4e8e\u6307\u5bfc\u5bc4\u5b58\u5668\u5206\u914d</li> </ul>"},{"location":"CS/Compilers/ch1/#_19","title":"\u5176\u4ed6","text":"<p>\u63a8\u8350\u4e00\u4e2a\u73a9\u5177\uff1aCompiler Explorer</p>"},{"location":"CS/Compilers/ch2/","title":"\u8bcd\u6cd5\u5206\u6790","text":"<p> \u7ea6 4265 \u4e2a\u5b57  55 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 15 \u5206\u949f</p>"},{"location":"CS/Compilers/ch2/#_2","title":"\u6982\u8ff0","text":"<p>\u7a0b\u5e8f\u662f\u4ee5\u5b57\u7b26\u4e32\u7684\u5f62\u5f0f\u4f20\u9012\u7ed9\u7f16\u8bd1\u5668\u7684\uff0c\u8bcd\u6cd5\u5206\u6790\u7684\u4f5c\u7528\u5728\u4e8e\uff1a</p> <ul> <li>\u5c06\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u8bc6\u522b\u4e3a\u6709\u610f\u4e49\u7684\u5b57\u4e32</li> <li>\u8fc7\u6ee4\u6ce8\u91ca\u3001\u7a7a\u683c</li> <li>...</li> </ul> <p>\u57fa\u4e8e\u6b64\uff0c\u6709\u4e24\u4e2a\u57fa\u672c\u6982\u5ff5\uff1a</p> <ul> <li>Token</li> <li>\u7c7b\u4f3c\u4e8e\u82f1\u8bed\u4e2d\u7684 noun, verb, adjective, ...</li> <li>\u5728\u7f16\u7a0b\u8bed\u8a00\u4e2d keyword, identifier, operator, ...</li> <li>Lexeme</li> <li>\u662f Token \u96c6\u5408\u4e2d\u7684\u4e00\u4e2a\u5143\u7d20\uff0c\u7c7b\u4f3c\u4e8e <code>if</code> <code>else</code></li> <li>\u53ef\u4ee5\u79f0\u4e3a Token \u7684\u4e00\u4e2a\u5b9e\u4f8b</li> </ul> \u793a\u4f8b\uff1aToken \u4e0e Lexeme <p>\u5bf9\u4e8e\u5982\u4e0b\u7684\u7a0b\u5e8f\uff1a <pre><code>if (i == j) {\n    printf(\"i equals j\");\n} else {\n    num = 5;\n}\n</code></pre> \u6211\u4eec\u4ece\u4e2d\u770b\u51fa</p> Token Lexeme Token \u7684\u975e\u5f62\u5f0f\u5316\u5b9a\u4e49 if if \u5b57\u7b26 i, f else else \u5b57\u7b26 e, l, s, e relation &lt;, &lt;=, =, ... &lt; \u6216 &lt;= \u6216 = \u6216 ... id sum, count, D5 \u7531\u5b57\u6bcd\u5f00\u5934\u7684\u5b57\u6bcd\u6570\u5b57\u4e32 number 5, 3.1, 2.8e12 \u4efb\u4f55\u6570\u503c\u5e38\u719f \u793a\u4f8b\uff1a\u5b57\u7b26\u6d41 -&gt; Token \u6d41 <p>\u5bf9\u4e8e\u5982\u4e0b\u7684\u7a0b\u5e8f\uff1a <pre><code>float match0(char *s) /* find a zero */\n{\n    if (!strncmp(s, \"0.0\", 3))\n    return 0.;\n}\n</code></pre> \u5176\u4e2d\u7684 Token \u6d41\u4e3a\uff1a <pre><code>FLOAT       ID(match0) LPAREN CHAR   STAR ID(s)\nRPAREN      LBRACE     IF     LPAREN BANG\nID(strncmp) LPAREN     ID(s)  COMMA  STRING(0.0)\nCOMMA       NUM(3)     RPAREN RPAREN RETURN\nREAL(0.0)   SEMI       RBRACE EOF\n</code></pre></p> <p>\u5bf9\u4e8e\u8bcd\u6cd5\u5206\u6790\u5668\u7684\u6784\u9020\uff0c\u53ef\u4ee5\u901a\u8fc7\u5b9a\u4e49\u58f0\u660e\u5f0f\u7684\u89c4\u8303\uff0c\u7136\u540e\u4f7f\u7528\u5de5\u5177\u81ea\u52a8\u751f\u6210\u3002</p> <p></p> <p>\u53ef\u4ee5\u770b\u4f5c\uff1a <pre><code>Program = Specification + Implementation\n              \"What\"          \"How\"\n</code></pre></p>"},{"location":"CS/Compilers/ch2/#_3","title":"\u6b63\u5219\u8868\u8fbe\u5f0f","text":"\u5982\u4f55\u5f62\u5f0f\u5316\u5730\u63cf\u8ff0\u8bcd\u6cd5\u5206\u6790\u5668\u7684\u89c4\u8303\uff1f <p>\u8fd9\u5c31\u5f15\u5165\u4e86\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u6982\u5ff5\u3002</p>"},{"location":"CS/Compilers/ch2/#_4","title":"\u524d\u7f6e\u77e5\u8bc6","text":""},{"location":"CS/Compilers/ch2/#_5","title":"\u5b57\u6bcd\u8868\u548c\u4e32","text":"<p>\u5b57\u6bcd\u8868\uff08alphabet\uff09\u662f\u7b26\u53f7\u7684\u6709\u9650\u96c6\u5408</p> <ul> <li>\u5305\u62ec\u5b57\u6bcd\u3001\u6570\u5b57\u3001\u6807\u70b9\u7b26\u53f7\u7b49</li> </ul> <p>\u4e32\uff08string, word\uff09\u662f\u5b57\u6bcd\u8868\u4e2d\u7b26\u53f7\u7684\u6709\u9650\u5e8f\u5217</p> <ul> <li>\u4e32 \\(s\\) \u7684\u957f\u5ea6\uff0c\u901a\u5e38\u8bb0\u4f5c \\(|s|\\)\uff0c\u6307\u4ee3 \\(s\\) \u4e2d\u7b26\u53f7\u7684\u4e2a\u6570</li> <li>\u7a7a\u4e32\u662f\u957f\u5ea6\u4e3a 0 \u7684\u4e32\uff0c\u901a\u5e38\u8bb0\u4f5c \\(\\epsilon\\)</li> </ul> <p>\u6709\u5982\u4e0b\u7684\u8fd0\u7b97\u5b9a\u4e49\uff1a</p> <ul> <li>\u8fde\u63a5\uff08concatenation\uff09<ul> <li>\\(y\\) \u9644\u52a0\u5230 \\(x\\) \u540e\u5f62\u6210\u7684\u4e32 \\(xy\\)</li> <li>\u4f8b\u5982\uff0c\\(x = abc\\), \\(y = def\\)\uff0c\u5219 \\(xy = abcdef\\)</li> <li>\u7a7a\u4e32\u662f\u8fde\u63a5\u8fd0\u7b97\u7684\u5355\u4f4d\u5143\uff0c\u5373\u5bf9\u4e8e\u4efb\u4f55\u4e32 \\(s\\) \u90fd\u6709 \\(\u03b5s = s\u03b5 = s\\)</li> </ul> </li> <li>\u5e42\uff08power\uff09<ul> <li>\\(s^n\\) \u662f \\(n\\) \u4e2a \\(s\\) \u7684\u8fde\u63a5</li> <li>\\(s^n=\\left\\{\\begin{matrix} &amp;\u03b5 &amp;, n=0 \\\\ &amp;s^{n-1}s &amp;, n \\ge 1 \\end{matrix}\\right.\\)</li> <li>\u4f8b\u5982\uff0c\\(s = abc\\)\uff0c\u5219 \\(s^3 = abcabcabc\\)</li> </ul> </li> </ul>"},{"location":"CS/Compilers/ch2/#_6","title":"\u8bed\u8a00","text":"<p>\u8bed\u8a00\uff08language\uff09\uff1a\u5b57\u6bcd\u8868 \\(\\Sigma\\) \u4e0a\u7684\u4e00\u4e2a\u4e32\u96c6</p> <ul> <li>\u4f8b\u5982\uff0c\\(\\{\\epsilon,0,00,000,...\\}\\), \\(\\{s\\}\\), \\(\\emptyset\\)</li> <li>\u5c5e\u4e8e\u8bed\u8a00\u7684\u4e32\uff0c\u53ef\u4ee5\u79f0\u4e3a\u53e5\u5b50\uff08sentence\uff09</li> </ul> <p>\u8bed\u8a00\u7684\u8fd0\u7b97\uff1a</p> <ul> <li>\u5e76\uff08union\uff09<ul> <li>\\(L_1 \\cup L_2 = \\{s | s \\in L_1 \\text{ or } s \\in L_2\\}\\)</li> </ul> </li> <li>\u8fde\u63a5\uff08concatenation\uff09<ul> <li>\\(L_1L_2 = \\{xy | x \\in L_1 \\text{ and } y \\in L_2\\}\\)</li> </ul> </li> <li>\u5e42\uff08power\uff09<ul> <li>\\(L^n = \\left\\{\\begin{matrix} &amp;\\{\u03b5\\} &amp;, n=0 \\\\ &amp;L^{n-1}L &amp;, n \\ge 1 \\end{matrix}\\right.\\)</li> </ul> </li> <li>Kleene \u95ed\u5305\uff08Kleene closure\uff09<ul> <li>\\(L^* = \\bigcup_{i=0}^{\\infty}L^i\\)</li> </ul> </li> <li>\u6b63\u95ed\u5305\uff08positive closure\uff09<ul> <li>\\(L^+ = \\bigcup_{i=1}^{\\infty}L^i\\)</li> </ul> </li> </ul>"},{"location":"CS/Compilers/ch2/#_7","title":"\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u5b9a\u4e49","text":"<p>\u6b63\u5219\u8868\u8fbe\u5f0f\uff08Regular Expression, RE\uff09\u662f\u7528\u6765\u63cf\u8ff0\u3001\u5339\u914d\u6587\u4e2d\u5168\u90e8\u5339\u914d\u6307\u5b9a\u683c\u5f0f\u4e32\u7684\u8868\u8fbe\u5f0f\uff0c\u5982 \\(a\\) \u5339\u914d \\(a\\)\uff0c\\(a|b\\) \u5339\u914d \\(a\\) \u6216 \\(b\\)</p> <p>\u6b63\u5219\u8868\u8fbe\u5f0f \\(r\\) \u5b9a\u4e49\u6b63\u5219\u8bed\u8a00\uff0c\u8bb0\u4e3a \\(L(r)\\)\uff0c\u6709\u5982\u4e0b\u6027\u8d28\uff1a</p> <ul> <li>\\(\\epsilon\\) \u662f\u4e00\u4e2a RE\uff0c\\(L(\\epsilon) = \\{\\epsilon\\}\\)</li> <li>\u5982\u679c \\(a \\in \\Sigma\\)\uff0c\u5219 \\(a\\) \u662f\u4e00\u4e2a RE\uff0c\\(L(a) = \\{a\\}\\)</li> <li>\u5047\u8bbe \\(x\\) \u548c \\(y\\) \u90fd\u662f RE\uff0c\u5206\u522b\u8868\u793a\u8bed\u8a00 \\(L(x)\\) \u548c \\(L(y)\\)<ul> <li>\\(x|y\\) \u662f\u4e00\u4e2a RE\uff0c\\(L(x|y) = L(x) \\cup L(y)\\)</li> <li>\\(xy\\) \u662f\u4e00\u4e2a RE\uff0c\\(L(xy) = L(x)L(y)\\)</li> <li>\\(x^*\\) \u662f\u4e00\u4e2a RE\uff0c\\(L(x^*) = (L(x))^*\\)</li> <li>\\((x)\\) \u662f\u4e00\u4e2a RE\uff0c\\(L((x)) = L(x)\\)</li> </ul> </li> <li>\u4f18\u5148\u7ea7\uff1a\\(() &gt; * &gt; xy &gt; |\\)</li> </ul>"},{"location":"CS/Compilers/ch2/#_8","title":"\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u5b9a\u5f8b","text":"<p>\u4e00\u4e9b\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u5b9a\u5f8b\u5982\u4e0b\uff1a</p> \u5b9a\u5f8b \u63cf\u8ff0 \\(r\\text{\\textbar}s = s\\text{\\textbar}r\\) \\(\\text{\\textbar}\\) \u662f\u53ef\u4ea4\u6362\u7684 \\((r\\text{\\textbar}s)\\text{\\textbar}t = r\\text{\\textbar}(s\\text{\\textbar}t)\\) \\(\\text{\\textbar}\\) \u662f\u53ef\u7ed3\u5408\u7684 \\(r(st) = (rs)t\\) \u8fde\u63a5\u662f\u53ef\u7ed3\u5408\u7684 \\(r(s\\text{\\textbar}t) = rs\\text{\\textbar}rt\\)\\((s\\text{\\textbar}t)r = sr\\text{\\textbar}tr\\) \u8fde\u63a5\u5bf9 \\(\\text{\\textbar}\\) \u662f\u53ef\u5206\u914d\u7684 \\(\\epsilon r = r\\epsilon = r\\) \\(\\epsilon\\) \u662f\u8fde\u63a5\u7684\u5355\u4f4d\u5143 \\(r^* = (r \\text{\\textbar} \\epsilon)^*\\) \u95ed\u5305\u4e2d\u4e00\u5b9a\u5305\u542b \\(\\epsilon\\) \\((r^*)^* = r^*\\) \u95ed\u5305\u7684\u95ed\u5305\u7b49\u4e8e\u95ed\u5305"},{"location":"CS/Compilers/ch2/#_9","title":"\u6b63\u5219\u5b9a\u4e49","text":"<p>\u533a\u5206\u4e8e\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u5b9a\u4e49</p> <p>\u5bf9\u4e8e\u6bd4\u8f83\u590d\u6742\u7684\u8bed\u8a00\uff0c\u4e3a\u4e86\u6784\u9020\u7b80\u6d01\u7684\u6b63\u5219\u5f0f\uff0c\u53ef\u5148\u6784\u9020\u7b80\u5355\u7684\u6b63\u5219\u5f0f\uff0c\u518d\u5c06\u8fd9\u4e9b\u6b63\u5219\u5f0f\u7ec4\u5408\u8d77\u6765\uff0c\u5f62\u6210\u4e00\u4e2a\u4e0e\u8be5\u8bed\u8a00\u5339\u914d\u7684\u6b63\u5219\u5e8f\u5217</p> <p>\u6b63\u5219\u5b9a\u4e49\u662f\u5177\u6709\u5982\u4e0b\u5f62\u5f0f\u7684\u5b9a\u4e49\u5e8f\u5217\uff1a</p> \\[ \\begin{gather*} d_1 \\rightarrow r_1 \\\\ d_2 \\rightarrow r_2 \\\\ \\vdots \\\\ d_n \\rightarrow r_n \\end{gather*} \\] <p>\u5176\u4e2d\uff1a</p> <ul> <li>\u6bcf\u4e2a \\(d_i\\) \u7684\u540d\u5b57\u90fd\u4e0d\u76f8\u540c</li> <li>\u6bcf\u4e2a \\(r_i\\) \u90fd\u662f \\(\\Sigma = \\cup \\{d_1, d_2, ..., d_{i-1}\\}\\) \u4e0a\u7684\u6b63\u5219\u5f0f</li> </ul> \u793a\u4f8b\uff1aC \u8bed\u8a00\u7684\u6807\u8bc6\u7b26 <p>\u5bf9\u4e8e\u5982\u4e0b\u7684\u6b63\u5219\u5b9a\u4e49\uff1a</p> \\[ \\begin{align*} &amp;digit &amp;\\rightarrow \\quad &amp;0|1|2|\\ldots|9 \\\\ &amp;letter\\_ &amp;\\rightarrow \\quad &amp;a|b|c|\\ldots|z|A|B|C|\\ldots|Z|\\_ \\\\ &amp;id &amp;\\rightarrow \\quad &amp;letter\\_(letter\\_|digit)^* \\end{align*} \\] <p>\u5176\u4e2d\uff0c\\(digit\\) \u8868\u793a\u6570\u5b57\uff0c\\(letter\\_\\) \u8868\u793a\u5b57\u6bcd\u548c\u4e0b\u5212\u7ebf\uff0c\\(id\\) \u8868\u793a\u6807\u8bc6\u7b26\u3002\u4e5f\u53ef\u4ee5\u7b80\u5199\u4e3a\uff1a</p> \\[ \\begin{align*} &amp;digit &amp;\\rightarrow \\quad &amp;[0\\text{-}9] \\\\ &amp;letter\\_ &amp;\\rightarrow \\quad &amp;[a\\text{-}zA\\text{-}Z\\_] \\\\ &amp;id &amp;\\rightarrow \\quad &amp;letter\\_(letter\\_|digit)^* \\end{align*} \\]"},{"location":"CS/Compilers/ch2/#_10","title":"\u8bcd\u6cd5\u5206\u6790\u7684\u89c4\u7ea6","text":"<p>\u6b63\u5219\u8868\u8fbe\u5f0f\u662f\u8bcd\u6cd5\u5206\u6790\u7684\u89c4\u7ea6\uff08Specification\uff09\uff0c\u662f\u5b57\u7b26\u6d41\u5230 Token-lexeme \u5bf9\u7684\u8fc7\u7a0b\uff0c\u5927\u4f53\u4e0a\u53ef\u4ee5\u5206\u4e3a</p> <ol> <li>\u9009\u62e9\u4e00\u7cfb\u5217 Tokens</li> </ol> <ul> <li>\u5982 Number, Identifier, Keyword, ...</li> </ul> <ol> <li>\u4e3a\u6bcf\u4e2a Token \u7684 Lexemes \u5b9a\u4e49\u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f</li> </ol> <ul> <li>Number: \\(digit^+\\)</li> <li>Keyword: \\('if'|'else'|\\ldots\\)</li> <li>Identifier: \\(letter\\_(letter\\_|digit)^*\\)</li> <li>LeftPar: \\('('\\)</li> </ul>"},{"location":"CS/Compilers/ch2/#_11","title":"\u6b63\u5219\u89c4\u5219\u7684\u4e8c\u4e49\u6027","text":"<p>\u7ed9\u5b9a if8\uff0c\u8fd9\u662f\u5355\u4e2a Indentifier \u8fd8\u662f\u4e24\u4e2a Token\uff1aif \u548c 8\uff1f</p> <p>\u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\uff0c\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u7684\u89c4\u5219\u89e3\u51b3\uff1a</p> <ul> <li>\u6700\u957f\u5339\u914d\uff08Longest match\uff09<ul> <li>\u8f93\u5165\u53ef\u4ee5\u5339\u914d\u4efb\u4f55\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u4e2d\uff0c\u6700\u957f\u521d\u59cb\u5b50\u5b57\u7b26\u4e32\u5c06\u88ab\u89c6\u4e3a\u4e0b\u4e00\u4e2a\u6807\u8bb0</li> </ul> </li> <li>\u89c4\u5219\u4f18\u5148\uff08Rule priority\uff09<ul> <li>\u5bf9\u4e8e\u7279\u5b9a\u7684\u6700\u957f\u521d\u59cb\u5b50\u4e32\uff0c\u7b2c\u4e00\u4e2a\u53ef\u4ee5\u5339\u914d\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u786e\u5b9a\u5176\u6807\u8bb0\u7c7b\u578b</li> <li>\u8fd9\u610f\u5473\u7740\u4e66\u5199\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u987a\u5e8f\u5f88\u91cd\u8981</li> </ul> </li> </ul>"},{"location":"CS/Compilers/ch2/#_12","title":"\u6709\u7a77\u81ea\u52a8\u673a","text":"<p>\u8ba1\u7b97\u7406\u8bba</p> <p>\u5f88\u591a\u5185\u5bb9\u548c\u8ba1\u7b97\u7406\u8bba\u5f88\u50cf\uff0c\u4f46\u662f\u56e0\u4e3a<sub>~\u61d2</sub>~\u4e0d\u60f3\u6574\u7406\u4e86\uff0c\u53ef\u4ee5\u53c2\u8003 Tony \u8001\u5e08\u7684\u76f8\u5173\u7b14\u8bb0</p>"},{"location":"CS/Compilers/ch2/#_13","title":"\u5b9a\u4e49","text":"<p>Wikipedia</p> <p>A finite-state machine (FSM) or finite-state automaton (FSA, plural: automata), finite automaton, or simply a state machine, is a mathematical model of computation. It is an abstract machine that can be in exactly one of a finite number of states at any given time.</p> <p>\u5bf9\u4e8e\u4e00\u4e2a\u6709\u7a77\u81ea\u52a8\u673a\uff1a\\(M = (S, \\Sigma, move, s_0, F)\\)</p> <ul> <li>\\(S\\)\uff1a\u6709\u7a77\u72b6\u6001\u96c6</li> <li>\\(\\Sigma\\)\uff1a\u8f93\u5165\u5b57\u6bcd\u8868\uff08\u7b26\u53f7\u96c6\u5408\uff09</li> <li>\\(move(s, a)\\)\uff1a\u72b6\u6001\u8f6c\u79fb\u51fd\u6570\uff0c\\(s \\in S, a \\in \\Sigma\\)\uff0c\u8868\u793a\u4ece\u72b6\u6001 \\(s\\) \u8bfb\u5165\u8f93\u5165 \\(a\\) \u540e\u7684\u4e0b\u4e00\u4e2a\u72b6\u6001</li> <li>\\(s_0\\)\uff1a\u521d\u59cb\u72b6\u6001\uff08\u5f00\u59cb\u72b6\u6001\uff09\uff0c\\(s_0 \\in S\\)</li> <li>\\(F\\)\uff1a\u63a5\u53d7\u72b6\u6001\uff08\u7ec8\u6b62\u72b6\u6001\uff09\u96c6\u5408\uff0c\\(F \\subseteq S\\)</li> </ul> <p>\u6b64\u5916\uff0c\u8fd8\u6709\u4e00\u79cd\u7279\u6b8a\u7684\u72b6\u6001\u8f6c\u6362\u65b9\u5f0f \\(\\epsilon\\)-moves\uff0c\u6307 FA \u4e0d\u8bfb\u5165\u4efb\u4f55\u8f93\u5165\uff0c\u800c\u4ece\u4e00\u4e2a\u72b6\u6001\u8f6c\u79fb\u5230\u53e6\u4e00\u4e2a\u72b6\u6001</p>"},{"location":"CS/Compilers/ch2/#_14","title":"\u8868\u793a\u65b9\u5f0f","text":""},{"location":"CS/Compilers/ch2/#_15","title":"\u8f6c\u6362\u56fe","text":"<p>\u5728\u8f6c\u6362\u56fe\u4e2d\uff0c\u6709\u5982\u4e0b\u7684\u57fa\u672c\u5143\u7d20\uff1a</p> \u5143\u7d20 \u793a\u4f8b \u72b6\u6001 \u521d\u59cb\u72b6\u6001\uff08\u5f00\u59cb\u72b6\u6001\uff09 \u63a5\u53d7\u72b6\u6001\uff08\u7ec8\u6b62\u72b6\u6001\uff09 \u72b6\u6001\u8f6c\u79fb <p>\u5bf9\u4e8e \\(\\epsilon\\)-moves\uff0c\u53ef\u4ee5\u7528\u5982\u4e0b\u7684\u65b9\u5f0f\u8868\u793a\uff1a</p>"},{"location":"CS/Compilers/ch2/#_16","title":"\u8f6c\u6362\u8868","text":"<p>\u4ee5\u5982\u4e0b\u7684 FA \u4e3a\u4f8b\uff1a</p> <p>\u5bf9\u5e94\u7684\u8f6c\u6362\u8868\u4e3a\uff1a</p> \u72b6\u6001\\\u8f93\u5165 \\(a\\) \\(b\\) \\(0\\) \\(\\{0, 1\\}\\) \\(\\{0\\}\\) \\(1\\) \\(\\emptyset\\) \\(\\{2\\}\\) \\(2\\) \\(\\emptyset\\) \\(\\{3\\}\\) \\(3\\) \\(\\emptyset\\) \\(\\emptyset\\)"},{"location":"CS/Compilers/ch2/#_17","title":"\u63a5\u6536","text":""},{"location":"CS/Compilers/ch2/#_18","title":"\u6709\u7a77\u81ea\u52a8\u673a\u63a5\u6536\u7684\u4e32","text":"<p>\u7ed9\u5b9a\u8f93\u5165\u4e32 \\(x\\)\uff0c\u5982\u679c\u5b58\u5728\u4e00\u4e2a\u5bf9\u5e94\u4e8e\u4e32 \\(x\\) \u7684\u4ece\u521d\u59cb\u72b6\u6001\u5230\u67d0\u4e2a\u63a5\u53d7\u72b6\u6001\u7684\u8f6c\u6362\u5e8f\u5217\uff0c\u5219\u79f0\u4e32 \\(x\\) \u88ab\u8be5 FA \u63a5\u6536</p> <p>\u4f8b\u5982\u5bf9\u4e8e\u4e0a\u9762\u7684 FA\uff0c\u4e32 \\(ababb\\) \u88ab\u63a5\u6536\uff0c\u56e0\u4e3a\u5b58\u5728\u5982\u4e0b\u7684\u8f6c\u6362\u5e8f\u5217\uff1a</p> \\[ 0 \\xrightarrow{a} 0 \\xrightarrow{b} 0 \\xrightarrow{a} 1 \\xrightarrow{b} 2 \\xrightarrow{b} 3 \\]"},{"location":"CS/Compilers/ch2/#_19","title":"\u6709\u7a77\u81ea\u52a8\u673a\u63a5\u6536\u7684\u8bed\u8a00","text":"<p>\u7531\u4e00\u4e2a\u6709\u7a77\u81ea\u52a8\u673a \\(M\\) \u63a5\u6536\u7684\u6240\u6709\u4e32\u6784\u6210\u7684\u96c6\u5408\uff0c\u79f0\u4e3a\u8be5 FA \u63a5\u6536\uff08\u6216\u5b9a\u4e49\uff09\u7684\u8bed\u8a00\uff0c\u8bb0\u4e3a \\(L(M)\\)</p> <p>\u540c\u6837\u4ee5\u4e0a\u9762\u7684 FA \u4e3a\u4f8b\uff0c\u5176\u63a5\u6536\u7684\u8bed\u8a00\u4e3a\uff1a</p> \\[ L(M) = \\text{\u6240\u6709\u4ee5 } abb \\text{ \u7ed3\u5c3e\u7684\u5b57\u6bcd\u8868 } {a, b} \\text{ \u4e0a\u7684\u4e32} \\]"},{"location":"CS/Compilers/ch2/#_20","title":"\u5206\u7c7b","text":"<p>\u6839\u636e\u72b6\u6001\u8f6c\u6362\u65b9\u5f0f\u7684\u4e0d\u540c\uff0c\u53ef\u4ee5\u5206\u4e3a\uff1a</p> <ul> <li>\u975e\u786e\u5b9a\u6027\u6709\u7a77\u81ea\u52a8\u673a\uff08Nondeterministic finite automata, NFA\uff09<ul> <li>\\(move: S \\times (\\Sigma \\cup \\{\\epsilon\\}) \\rightarrow P(S)\\)</li> <li>\\(move(s, a)\\) \u8868\u793a\u4ece\u72b6\u6001 \\(s\\) \u51fa\u53d1\uff0c\u6cbf\u7740\u6807\u8bb0\u4e3a \\(a\\) \u7684\u8fb9\u6240\u80fd\u5230\u8fbe\u7684\u72b6\u6001\u96c6\u5408</li> <li>\u5728\u72b6\u6001 \\(s\\) \u65f6\u8bfb\u5165 \\(a\\)\uff0c\u53ef\u80fd\u8fc1\u79fb\u5230\u591a\u4e2a\u4e0d\u540c\u7684\u72b6\u6001</li> <li>\u53ef\u80fd\u6709 \\(\\epsilon\\)-moves\uff08\u4e0d\u8bfb\u5165\u4efb\u4f55\u8f93\u5165\u800c\u8fc1\u79fb\u5230\u5176\u4ed6\u72b6\u6001\uff09</li> </ul> </li> <li>\u786e\u5b9a\u6027\u6709\u7a77\u81ea\u52a8\u673a\uff08Deterministic finite automata, DFA\uff09<ul> <li>\\(move: S \\times \\Sigma \\rightarrow S\\)</li> <li>\\(\\delta(s, a)\\) \u8868\u793a\u4ece\u72b6\u6001 \\(s\\) \u51fa\u53d1\uff0c\u6cbf\u7740\u6807\u8bb0\u4e3a \\(a\\) \u7684\u8fb9\u6240\u80fd\u5230\u8fbe\u7684\u552f\u4e00\u72b6\u6001</li> <li>\u5728\u72b6\u6001 \\(s\\) \u65f6\u8bfb\u5165 \\(a\\)\uff0c\u53ef\u8fc1\u79fb\u5230\u7684\u72b6\u6001\u662f\u786e\u5b9a\u7684</li> <li>\u6ca1\u6709 \\(\\epsilon\\)-moves</li> </ul> </li> </ul>"},{"location":"CS/Compilers/ch2/#_21","title":"\u7b49\u4ef7\u6027","text":"<p>\u5bf9\u4e8e\u4e24\u4e2a FA\uff0c\u5982\u679c\u5b83\u4eec\u63a5\u6536\u7684\u8bed\u8a00\u76f8\u540c\uff0c\u5219\u79f0\u5b83\u4eec\u662f\u7b49\u4ef7\u7684</p> <p>\u7531\u8ba1\u7b97\u7406\u8bba\u7684\u77e5\u8bc6</p> <ul> <li>\u5bf9\u4e8e\u4efb\u4f55 NFA \\(N\\)\uff0c\u5b58\u5728\u5b9a\u4e49\u540c\u4e00\u8bed\u8a00\u7684 DFA \\(D\\)</li> <li>\u5bf9\u4e8e\u4efb\u4f55 DFA \\(D\\)\uff0c\u5b58\u5728\u5b9a\u4e49\u540c\u4e00\u8bed\u8a00\u7684 NFA \\(N\\)</li> <li>\u5bf9\u4e8e\u4efb\u4f55\u6b63\u5219\u8868\u8fbe\u5f0f RE \\(r\\)\uff0c\u5b58\u5728\u4e00\u4e2a\u5b9a\u4e49\u540c\u4e00\u8bed\u8a00\u7684 NFA \\(N\\)</li> </ul> <p>\u6545\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\uff1a</p> \\[ \\text{RE} \\Leftrightarrow \\text{NFA} \\Leftrightarrow \\text{DFA} \\] \u4f8b\u5b50 <p>NFA:   DFA:   RE: \\(r = (a|b)^*abb\\)</p>"},{"location":"CS/Compilers/ch2/#_22","title":"\u8bc6\u522b\u5b57\u7b26\u4e32","text":"\u5982\u4f55\u6784\u9020 FA\uff0c\u6765\u8bc6\u522b\u7528 RE \u523b\u753b\u7684 Token\uff1f <p>\u82e5\u4f7f\u7528 NFA\uff0c\u9700\u8981\u5bf9\u591a\u79cd\u8def\u5f84\u8fdb\u884c\u8bd5\u63a2\u548c\u56de\u6eaf\uff0c\u7c7b\u4f3c\u6811\u7684\u904d\u5386\uff0c\u6548\u7387\u8f83\u4f4e\uff0c\u6545\u4f7f\u7528 DFA</p> <p>\u57fa\u4e8e\u4ee5\u4e0b\u7684\u8f93\u5165\u3001\u8f93\u51fa\u4ee5\u53ca\u8f85\u52a9\u51fd\u6570\uff1a</p> <ul> <li>\u8f93\u5165<ul> <li>\u4ee5 EOF \u7ed3\u5c3e\u7684\u5b57\u7b26\u4e32 \\(x\\)</li> <li>DFA \\(D\\): \u5f00\u59cb\u72b6\u6001 \\(s_0\\)\uff0c\u63a5\u53d7\u72b6\u6001 \\(F\\)\uff0c\u72b6\u6001\u8f6c\u79fb\u51fd\u6570 \\(move\\)</li> </ul> </li> <li>\u8f93\u51fa<ul> <li>\u5982\u679c \\(D\\) \u63a5\u53d7 \\(x\\)\uff0c\u5219\u8f93\u51fa \"yes\"\uff0c\u5426\u5219\u8f93\u51fa \"no\"</li> </ul> </li> <li>\u8f85\u52a9\u51fd\u6570<ul> <li>\\(move(s, x)\\)\uff1a\u4ece\u72b6\u6001 \\(s\\) \u51fa\u53d1\uff0c\u8bfb\u5165 \\(x\\) \u540e\u7684\u4e0b\u4e00\u4e2a\u72b6\u6001</li> <li>\\(nextChar()\\)\uff1a\u8fd4\u56de \\(x\\) \u7684\u4e0b\u4e00\u4e2a\u5b57\u7b26</li> </ul> </li> </ul> <p>\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u5982\u4e0b\u7684\u4f2a\u4ee3\u7801\uff1a</p> <pre>\n\\begin{algorithm}\n\\caption{Identify String}\n\\begin{algorithmic}\n\\Function{IdentifyString}{$D, s_0, F, x$}\n    \\State $s \\gets s_0$\n    \\State $c \\gets nextChar()$\n    \\While{$c \\neq \\text{EOF}$}\n        \\State $s \\gets move(s, c)$\n        \\State $c \\gets nextChar()$\n    \\EndWhile\n    \\If{$s \\in F$}\n        \\State \\Return \"yes\"\n    \\Else\n        \\State \\Return \"no\"\n    \\EndIf\n\\EndFunction\n\\end{algorithmic}\n\\end{algorithm}\n</pre> \u8bc6\u522b\u8bed\u8a00 \\((a|b)^*abb\\) \u7684DFA <p>\u4ee5\u7b49\u4ef7\u6027\u793a\u4f8b\u4e2d\u7684 DFA \u4e3a\u4f8b\uff0c\u82e5\u8f93\u5165\u4e3a \\(ababb\\)\uff0c\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u7684\u8def\u5f84\u8bc6\u522b\uff1a $$ 0 \\xrightarrow{a} 1 \\xrightarrow{b} 2 \\xrightarrow{a} 1 \\xrightarrow{b} 2 \\xrightarrow{b} 3 $$</p>"},{"location":"CS/Compilers/ch2/#_23","title":"\u8bcd\u6cd5\u5206\u6790\u5668\u81ea\u52a8\u751f\u6210","text":"\u7ed9\u5b9a RE\uff0c\u5982\u4f55\u81ea\u52a8\u6784\u9020\u5176 DFA\uff1f <p>\u4ece RE \u76f4\u63a5\u6784\u9020 DFA \u6709\u65f6\u6bd4\u8f83\u56f0\u96be\uff0c\u6545\u53ef\u4ee5\u901a\u8fc7 NFA \u4f5c\u4e3a\u4e2d\u95f4\u6b65\u9aa4</p>"},{"location":"CS/Compilers/ch2/#re-nfa","title":"RE -&gt; NFA","text":"<p>\u95ee\u9898\u63cf\u8ff0</p> <p>\u8f93\u5165\uff1a\u6b63\u5219\u8868\u8fbe\u5f0f \\(r\\) \u8f93\u51fa\uff1a\u5b9a\u4e49 \\(r\\) \u7684 NFA \\(N(r)\\)</p> <p>Thompson \u7b97\u6cd5\uff1a\u57fa\u4e8e RE \u7684\u7ed3\u6784\u505a\u5f52\u7eb3</p> <ul> <li>\u5bf9\u57fa\u672c\u7684 RE \u8fdb\u884c\u76f4\u63a5\u6784\u9020\uff1a\\(\\epsilon, a\\)</li> <li>\u5bf9\u4e8e\u590d\u5408\u7684 RE \u8fdb\u884c\u9012\u5f52\u6784\u9020\uff1a\\(st, s|t, s^*\\)</li> <li>\u91cd\u8981\u7279\u70b9\uff1a\\(N(r)\\) \u4ec5\u6709\u4e00\u4e2a\u63a5\u53d7\u72b6\u6001\uff0c\u4e14\u6ca1\u6709\u51fa\u8fb9</li> </ul>"},{"location":"CS/Compilers/ch2/#thompson","title":"Thompson \u76f4\u63a5\u6784\u9020","text":"<ul> <li>\u8bc6\u522b\u6b63\u5219\u8868\u8fbe\u5f0f \\(\\epsilon\\) \u7684 NFA</li> </ul> <ul> <li>\u8bc6\u522b\u6b63\u5219\u8868\u8fbe\u5f0f \\(a\\) \u7684 NFA</li> </ul>"},{"location":"CS/Compilers/ch2/#thompson_1","title":"Thompson \u9012\u5f52\u6784\u9020","text":"<ul> <li>\u9009\u62e9 \\(s|t\\) \u7684 NFA</li> </ul> <ul> <li>\u8fde\u63a5 \\(st\\) \u7684 NFA</li> </ul> <ul> <li>\u95ed\u5305 \\(s^*\\) \u7684 NFA</li> </ul> RE -&gt; NFA <p>\u4ee5 RE \\(r = a(b|c)^*\\) \u4e3a\u4f8b\uff0c\u9010\u6b65\u8fdb\u884c\u6784\u9020\uff1a</p> <ul> <li>\\(a, b, c\\) </li> <li>\\(b|c\\) </li> <li>\\((b|c)^*\\) </li> <li>\\(a(b|c)^*\\) </li> </ul>"},{"location":"CS/Compilers/ch2/#nfa-dfa","title":"NFA -&gt; DFA","text":"<p>\u95ee\u9898\u63cf\u8ff0</p> <p>\u8f93\u5165\uff1aNFA \\(N\\) \u8f93\u51fa\uff1a\u7b49\u4ef7\u7684 DFA \\(D\\)</p> <p>\u91c7\u7528\u7684\u65b9\u6cd5\u4e3a\u5b50\u96c6\u6784\u9020\u6cd5\uff08Subset Construction\uff09\uff1a</p> <ul> <li>NFA \u7684\u521d\u59cb\u72b6\u6001\u7684 \\(\\epsilon\\)-\u95ed\u5305\u5bf9\u5e94\u4e8e DFA \u7684\u521d\u59cb\u72b6\u6001</li> <li>\u9488\u5bf9 DFA \u7684\u6bcf\u4e2a\u72b6\u6001\uff08\u5bf9\u5e94 NFA \u7684\u72b6\u6001\u5b50\u96c6 \\(A\\)\uff09\uff0c\u4ee5\u53ca DFA \u7684\u6bcf\u4e2a\u8f93\u5165\u7b26\u53f7 \\(a\\)\uff0c\u8ba1\u7b97\u80fd\u5230\u8fbe\u7684 NFA \u72b6\u6001\u7684 \\(\\epsilon\\)-\u95ed\u5305 \\(S = \\epsilon-closure(move(A, a))\\)\uff0c\u8be5 \\(S\\) \u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\u4e4b\u4e00<ul> <li>\u5bf9\u5e94\u4e8e DFA \u7684\u4e00\u4e2a\u5df2\u6709\u72b6\u6001</li> <li>\u5bf9\u5e94\u4e8e DFA \u7684\u4e00\u4e2a\u65b0\u52a0\u72b6\u6001</li> </ul> </li> <li>\u9010\u6b65\u6784\u9020 DFA \u7684\u72b6\u6001\u8f6c\u79fb\u8868\uff0c\u76f4\u5230\u6ca1\u6709\u65b0\u7684\u72b6\u6001\u4ea7\u751f</li> </ul> NFA -&gt; DFA <p>\u4ee5 \\((a|b)^*ab\\) \u5bf9\u5e94\u7684 NFA \u4e3a\u4f8b   \u9010\u6b65\u6784\u9020 DFA \u7684\u72b6\u6001\u8f6c\u79fb\u8868\uff1a</p> <ul> <li>\u9996\u5148\uff0c\u8ba1\u7b97\u521d\u59cb\u72b6\u6001\u7684 \\(\\epsilon\\)-\u95ed\u5305 \\(A = \\{0, 1, 2, 4, 7\\}\\) \u5728\u8f93\u5165 \\(a\\) \u548c \\(b\\) \u4e0b\u7684\u8f6c\u79fb\u72b6\u6001     \u72b6\u6001\u8f93\u5165\u7b26\u53f7\\(a\\)\\(b\\)\\(A\\)\\(B\\)\\(C\\)      \u5176\u4e2d<ul> <li>\\(\\epsilon-closure(move(A, a)) = \\{1,2,3,4,6,7,8\\} \\coloneqq B\\)</li> <li>\\(\\epsilon-closure(move(A, b)) = \\{1,2,4,5,6,7\\} \\coloneqq C\\)</li> </ul> </li> <li>\u63a5\u7740\uff0c\u8ba1\u7b97 \\(B\\) \u548c \\(C\\) \u5728\u8f93\u5165 \\(a\\) \u548c \\(b\\) \u4e0b\u7684\u8f6c\u79fb\u72b6\u6001     \u72b6\u6001\u8f93\u5165\u7b26\u53f7\\(a\\)\\(b\\)\\(A\\)\\(B\\)\\(C\\)\\(B\\)\\(B\\)\\(D\\)      \u5176\u4e2d<ul> <li>\\(\\epsilon-closure(move(B, b)) = \\{1,2,4,5,6,7,9\\} \\coloneqq D\\)</li> </ul> </li> <li>\u7c7b\u4f3c\u7684\uff0c\u5b8c\u6210\u5bf9 \\(C\\) \u548c \\(D\\) \u7684\u8ba1\u7b97\uff0c\u53ef\u4ee5\u770b\u5230\u4e0d\u518d\u6709\u65b0\u7684\u72b6\u6001\u4ea7\u751f\uff0c\u5373\u5b8c\u6210\u4e86 DFA \u72b6\u6001\u8f6c\u79fb\u8868\u7684\u6784\u9020     \u72b6\u6001\u8f93\u5165\u7b26\u53f7\\(a\\)\\(b\\)\\(A\\)\\(B\\)\\(C\\)\\(B\\)\\(B\\)\\(D\\)\\(C\\)\\(B\\)\\(C\\)\\(D\\)\\(B\\)\\(C\\)</li> </ul> <p>\u6700\u7ec8\u5f97\u5230\u7684 DFA \u7684\u8f6c\u6362\u56fe\u5982\u4e0b\uff1a  </p>"},{"location":"CS/Compilers/ch2/#dfa","title":"DFA \u7b80\u5316","text":"<p>\u95ee\u9898\u63cf\u8ff0</p> <p>\u8f93\u5165\uff1aDFA \\(D\\) \u8f93\u51fa\uff1a\u7b49\u4ef7\u7684\u6700\u5c0f\u5316 DFA \\(D'\\)</p> <p>\u4e00\u4e2a\u6b63\u5219\u8bed\u8a00\u53ef\u4ee5\u5bf9\u5e94\u4e8e\u591a\u4e2a\u8bc6\u522b\u5b83\u7684 DFA\u3002\u5728\u4e0d\u8ba1\u540c\u6784\u7684\u60c5\u51b5\u4e0b\uff0c\u901a\u8fc7 DFA \u6700\u5c0f\u5316\uff0c\u53ef\u4ee5\u5f97\u5230\u72b6\u6001\u6570\u91cf\u6700\u5c11\u7684\u552f\u4e00 DFA\u3002</p>"},{"location":"CS/Compilers/ch2/#_24","title":"\u53ef\u533a\u5206\u72b6\u6001","text":"<p>\u72b6\u6001 \\(s, t\\) \u662f\u53ef\u533a\u5206\u7684\uff0c\u5982\u679c\u5b58\u5728\u4e32 \\(x\\)\uff0c\u4f7f\u5f97\u4ece \\(s, t\\) \u51fa\u53d1\uff0c\u4e00\u4e2a\u5230\u8fbe\u63a5\u53d7\u72b6\u6001\uff0c\u4e00\u4e2a\u5230\u8fbe\u975e\u63a5\u53d7\u72b6\u6001\u3002\u4e5f\u79f0\u4e3a\u4e32 \\(x\\) \u533a\u5206\u4e86\u72b6\u6001 \\(s, t\\)</p> \u53ef\u533a\u5206\u72b6\u6001 <p>\u4ee5 NFA -&gt; DFA \u4f8b\u5b50\u4e2d\u7684 DFA \u4e3a\u4f8b\uff0c\u56e0\u4e3a\u5bf9\u4e8e\u4e32 \\(1\\)\uff0c\u4ece\u72b6\u6001 \\(B\\) \u51fa\u53d1\u53ef\u4ee5\u5230\u8fbe\u63a5\u53d7\u72b6\u6001\uff0c\u800c\u4ece\u72b6\u6001 \\(A\\) \u51fa\u53d1\u4e0d\u53ef\u4ee5\uff0c\u6545\u72b6\u6001 \\(A, B\\) \u662f\u53ef\u533a\u5206\u7684\u72b6\u6001</p> <p>\u4e0d\u53ef\u533a\u5206\u7684\u4e24\u4e2a\u72b6\u6001\u662f\u7b49\u4ef7\u7684\uff0c\u53ef\u4ee5\u5408\u5e76\u3002</p> <p>\u7531\u6b64\u53ef\u4ee5\u63a8\u51fa DFA \u72b6\u6001 \\(s, t\\) \u7b49\u4ef7\u7684\u6761\u4ef6\uff1a</p> <ul> <li>\u4e00\u81f4\u6027\uff1a\\(s, t\\) \u540c\u4e3a\u63a5\u53d7\u72b6\u6001\u6216\u540c\u4e3a\u975e\u63a5\u53d7\u72b6\u6001</li> <li>\u8513\u5ef6\u6027\uff1a\u5bf9\u4e8e\u4efb\u4f55\u8f93\u5165\u7b26\u53f7\uff0c\\(s, t\\) \u5fc5\u987b\u8f6c\u6362\u5230\u7b49\u4ef7\u7684\u72b6\u6001\u96c6\u5408\u4e2d\uff0c\u540c\u65f6\u5177\u6709\u4f20\u9012\u6027</li> </ul>"},{"location":"CS/Compilers/ch2/#dfa_1","title":"DFA \u6700\u5c0f\u5316\u7b97\u6cd5","text":"<p>\u57fa\u4e8e\u4e0a\u8ff0\u7684\u7b49\u4ef7\u6027\u6761\u4ef6\uff0c\u53ef\u4ee5\u5f97\u5230 DFA \u6700\u5c0f\u5316\u7684\u7b97\u6cd5\u7684\u57fa\u672c\u6b65\u9aa4\uff1a</p> <ul> <li>\u5212\u5206\uff1a\u6839\u636e\u7b49\u4ef7\u6027\u6761\u4ef6\uff0c\u8fed\u4ee3\u5730\u5212\u5206\u7b49\u4ef7\u7c7b</li> <li>\u6784\u9020\uff1a\u4ece\u5212\u5206\u7684\u7b49\u4ef7\u7c7b\u4e2d\u9009\u53d6\u4e00\u4e2a\u4ee3\u8868\uff0c\u6784\u9020\u6700\u5c0f\u5316 DFA</li> </ul>"},{"location":"CS/Compilers/ch2/#_25","title":"\u5212\u5206","text":"<p>\u57fa\u672c\u7684\u5212\u5206\u7b97\u6cd5\u5982\u4e0b\uff1a</p> <pre>\n\\begin{algorithm}\n\\caption{Partition}\n\\begin{algorithmic}\n\\Function{Partition}{$D$}\n    \\State $\\Pi \\gets \\{F, S-F\\}$\n    \\Repeat\n        \\State $\\Pi' \\gets \\Pi$\n        \\ForAll{$A \\in \\Pi$}\n            \\State Divide $A$ into smaller sets $A_1, A_2, \\ldots, A_k$ such that $s, t \\in A$ are in the same set iff for all input $a$, $move(s, a)$ and $move(t, a)$ are in the same set $B$ in $\\Pi$\n            \\If{$A$ is divided}\n                \\State $\\Pi' \\gets \\Pi' \\cup \\{A_1, A_2, \\ldots, A_k\\} - \\{A\\}$\n            \\EndIf\n        \\EndFor\n    \\Until{$\\Pi' = \\Pi$}\n    \\State \\Return $\\Pi$\n\\EndFunction\n\\end{algorithmic}\n\\end{algorithm}\n</pre>"},{"location":"CS/Compilers/ch2/#_26","title":"\u6784\u9020","text":"<p>\u5728\u5212\u5206\u51fa\u7684\u6bcf\u4e2a\u7b49\u4ef7\u7c7b\u4e2d\uff0c\u9009\u53d6\u4e00\u4e2a\u4ee3\u8868\uff0c\u4f5c\u4e3a\u6700\u5c0f\u5316 DFA \u4e2d\u7684\u4e00\u4e2a\u72b6\u6001\uff0c\u5176\u4e2d</p> <ul> <li>\u5f00\u59cb\u72b6\u6001\uff1a\u5212\u5206\u4e2d\u5305\u542b DFA \u7684\u5f00\u59cb\u72b6\u6001\u7684\u7b49\u4ef7\u7c7b\u7684\u4ee3\u8868</li> <li>\u63a5\u53d7\u72b6\u6001\uff1a\u5212\u5206\u4e2d\u5305\u542b DFA \u7684\u63a5\u53d7\u72b6\u6001\u7684\u7b49\u4ef7\u7c7b\u7684\u4ee3\u8868<ul> <li>\u7531\u4e8e\u521d\u59cb\u5212\u5206\u4e2d\u5c31\u5c06\u63a5\u53d7\u72b6\u6001\u548c\u975e\u63a5\u53d7\u72b6\u6001\u5206\u5f00\uff0c\u6545\u8fd9\u79cd\u7b49\u4ef7\u7c7b\u4e2d\u4e00\u5b9a\u53ea\u6709\u63a5\u53d7\u72b6\u6001</li> </ul> </li> </ul> <p>\u72b6\u6001\u8f6c\u79fb\u5219\u6839\u636e\u5982\u4e0b\u7684\u89c4\u5219\u8fdb\u884c\uff1a</p> <ul> <li>\u5047\u8bbe<ul> <li>\\(s\\) \u662f DFA \u7684\u7b49\u4ef7\u7c7b \\(A\\) \u7684\u4ee3\u8868</li> <li>\\(t\\) \u662f DFA \u7684\u7b49\u4ef7\u7c7b \\(B\\) \u7684\u4ee3\u8868</li> <li>\u8f93\u5165\u7b26\u53f7 \\(a\\)\uff0c\u7b49\u4ef7\u7c7b \\(A\\) \u4e2d\u7684\u4efb\u610f\u72b6\u6001 \\(s'\\) \u8f6c\u79fb\u5230\u7b49\u4ef7\u7c7b \\(B\\) \u4e2d\u7684\u72b6\u6001 \\(t'\\)</li> <li>\u5219\u65b0\u6784\u9020 DFA \u7684\u72b6\u6001 \\(s\\) \u5728\u8f93\u5165 \\(a\\) \u4e0b\u8f6c\u79fb\u5230\u72b6\u6001 \\(t\\)</li> </ul> </li> </ul> DFA \u6700\u5c0f\u5316 <p>\u540c\u6837\u4ee5 NFA -&gt; DFA \u4f8b\u5b50\u4e2d\u7684 DFA \u4e3a\u4f8b\uff0c\u8fdb\u884c\u6700\u5c0f\u5316\uff1a</p> <ul> <li>\u5212\u5206\u90e8\u5206<ul> <li>\u6839\u636e\u662f\u5426\u4e3a\u63a5\u53d7\u72b6\u6001\u521d\u59cb\u5316\u7b49\u4ef7\u7c7b\u5212\u5206<ul> <li>\\(\\Pi = \\{\\{A,B,C\\}, \\{D\\}\\}\\)</li> </ul> </li> <li>\u8fdb\u884c\u7b2c\u4e00\u6b21\u5212\u5206\u8fed\u4ee3<ul> <li>\u6d4b\u8bd5 \\(\\{A,B,C\\}\\) \u662f\u5426\u53ef\u5212\u5206<ul> <li>\u5bf9\u4e8e\u8f93\u5165 \\(a\\)\uff0c\\(move(\\{A,B,C\\}, a) = \\{B\\}\\)</li> <li>\u5bf9\u4e8e\u8f93\u5165 \\(b\\)\uff0c\\(move(\\{A,B,C\\}, b) = \\{C,D\\}\\)</li> <li>\u51fa\u73b0\u4e86\u4e0d\u540c\u7684\u7b49\u4ef7\u7c7b\uff0c\u6545\u5212\u5206\u4e3a \\(\\{\\{A,C\\}, \\{B\\}\\}\\)</li> </ul> </li> <li>\\(\\{D\\}\\) \u53ea\u6709\u4e00\u4e2a\u72b6\u6001\uff0c\u4e0d\u53ef\u5212\u5206</li> <li>\u5f97\u5230\u7684\u65b0\u5212\u5206\u4e3a \\(\\Pi' = \\{\\{A,C\\}, \\{B\\}, \\{D\\}\\}\\)</li> </ul> </li> <li>\u7531\u4e8e \\(\\Pi' \\neq \\Pi\\)\uff0c\\(\\Pi = \\Pi'\\)\u8fdb\u884c\u7b2c\u4e8c\u6b21\u5212\u5206\u8fed\u4ee3<ul> <li>\u6b65\u9aa4\u7c7b\u4f3c\uff0c\u5f97\u5230\u65b0\u5212\u5206\u4e3a \\(\\Pi' = \\{\\{A,C\\}, \\{B\\}, \\{D\\}\\}\\)</li> </ul> </li> <li>\u7531\u4e8e \\(\\Pi' = \\Pi\\)\uff0c\u5212\u5206\u5b8c\u6210</li> </ul> </li> <li>\u6784\u9020\u90e8\u5206<ul> <li>\u9009\u53d6\u4ee3\u8868<ul> <li>\\(\\{A,C\\}\\) \u7684\u4ee3\u8868\u4e3a \\(A\\)\uff0c\u4e3a\u5f00\u59cb\u72b6\u6001</li> <li>\\(\\{B\\}\\) \u7684\u4ee3\u8868\u4e3a \\(B\\)</li> <li>\\(\\{D\\}\\) \u7684\u4ee3\u8868\u4e3a \\(D\\)\uff0c\u4e3a\u63a5\u53d7\u72b6\u6001</li> </ul> </li> <li>\u91c7\u7528\u6784\u9020\u4e2d\u72b6\u6001\u8f6c\u79fb\u7684\u89c4\u5219\uff0c\u8fdb\u884c\u6784\u9020</li> </ul> </li> </ul> <p>\u6700\u7ec8\u5f97\u5230\u7684\u6700\u5c0f\u5316 DFA \u7684\u8f6c\u6362\u56fe\u5982\u4e0b\uff1a  </p>"},{"location":"CS/Compilers/ch2/#lex","title":"Lex \u8bcd\u6cd5\u5206\u6790\u5de5\u5177","text":""},{"location":"CS/Compilers/ch2/#_27","title":"\u5e38\u7528\u5de5\u5177\u7ec4\u5408","text":"<p>\u901a\u5e38\u4f7f\u7528 Lex/Flex \u751f\u6210\u8bcd\u6cd5\u5206\u6790\u5668\uff0c\u4e0e Yacc/Bison \u751f\u6210\u8bed\u6cd5\u5206\u6790\u5668\u914d\u5408\u4f7f\u7528\uff0c\u751f\u6210\u7f16\u8bd1\u5668\u524d\u7aef</p> <ul> <li>Lex + Yacc<ul> <li>Lex\uff1a\u8bcd\u6cd5\u5206\u6790\u5668\u751f\u6210\u5de5\u5177</li> <li>Yacc\uff1a\u8bed\u6cd5\u5206\u6790\u5668\u751f\u6210\u5de5\u5177</li> <li>\u901a\u8fc7 Lex \u751f\u6210\u7684\u8bcd\u6cd5\u5206\u6790\u5668\u5c06\u8f93\u5165\u4e32\u5206\u89e3\u4e3a Token\uff0c\u7136\u540e\u901a\u8fc7 Yacc \u751f\u6210\u7684\u8bed\u6cd5\u5206\u6790\u5668\u8fdb\u884c\u8bed\u6cd5\u5206\u6790</li> </ul> </li> <li>Flex + Bison</li> <li>ANTLR</li> </ul> \u7528 Lex \u521b\u5efa\u4e00\u4e2a\u8bcd\u6cd5\u5206\u6790\u5668 <p></p> <p>\u4ee5\u4e0b\u9762 Lex \u8bed\u6cd5\u793a\u4f8b\u4e2d\u7684\u8bcd\u6cd5\u5206\u6790\u5668\u4e3a\u4f8b\uff1a <pre><code>$ lex a.lex \n$ clang lex.yy.c \n$ ./a.out \nHello123World5\nSaw an integer: 123\nSaw an integer: 5\nTotal characters except integer: 10\n</code></pre></p>"},{"location":"CS/Compilers/ch2/#lex_1","title":"Lex \u8bed\u6cd5","text":"<p>Lex \u8bed\u6cd5\u7684\u57fa\u672c\u7ed3\u6784\u5982\u4e0b\uff1a</p> <ul> <li>\u58f0\u660e\u90e8\u5206<ul> <li>\u5e38\u91cf\uff1a\u8868\u793a\u5e38\u6570\u7684\u6807\u8bc6\u7b26</li> <li>\u6b63\u5219\u5b9a\u4e49</li> </ul> </li> <li>\u8f6c\u6362\u89c4\u5219<ul> <li>\u683c\u5f0f\u4e3a <code>pattern { action }</code></li> <li>pattern\uff1a\u6b63\u5219\u8868\u8fbe\u5f0f</li> <li>action\uff1a\u4e0e pattern \u5339\u914d\u65f6\u6267\u884c\u7684\u52a8\u4f5c</li> <li>\u5904\u7406\u65b9\u5f0f\u901a\u5e38\u7528 C \u8bed\u8a00\u4ee3\u7801\u8868\u793a</li> </ul> </li> <li>\u8f85\u52a9\u51fd\u6570<ul> <li>\u5404\u4e2a action \u4e2d\u4f7f\u7528\u7684\u51fd\u6570</li> </ul> </li> </ul> Lex \u8bed\u6cd5\u793a\u4f8b <p>\u4ee5\u8bc6\u522b\u6574\u6570\u7684\u8bcd\u6cd5\u5206\u6790\u5668\u4e3a\u4f8b\uff0c\u5176 Lex \u8bed\u6cd5\u5982\u4e0b\uff1a <pre><code>/*** Definition section ***/\n\n%{\n/* C code to be copied verbatim */\n#include &lt;stdio.h&gt;\nint i = 0;\n%}\n\n%%\n    /*** Rules section ***/\n\n    /* [0-9]+ matches a string of one or more digits */\n[0-9]+  {\n            /* yytext is a string containing the matched text. */\n            printf(\"Saw an integer: %s\\n\", yytext);\n        }\n\n.       {\n            i++;\n        }\n\n\\n      {\n            printf(\"Total characters except integer: %d\\n\", i);\n            i = 0;\n        }\n\n%%\n/*** C Code section ***/\n\n\nint yywrap() {return 0;}\n\nint main(void)\n{\n    /* Call the lexer, then quit. */\n    yylex();\n    return 0;\n}\n</code></pre></p>"},{"location":"CS/Compilers/ch2/#_28","title":"\u5de5\u4f5c\u65b9\u5f0f\u4e0e\u51b2\u7a81","text":"<p>Lex \u751f\u6210\u7684\u8bcd\u6cd5\u5206\u6790\u5668\u7684\u5de5\u4f5c\u65b9\u5f0f\u5982\u4e0b\uff1a</p> <ul> <li>Lex \u751f\u6210\u7684\u8bcd\u6cd5\u5206\u6790\u5668\u4f5c\u4e3a\u4e00\u4e2a\u51fd\u6570\u88ab\u8c03\u7528</li> <li>\u5728\u6bcf\u6b21\u8c03\u7528\u8fc7\u7a0b\u4e2d\uff0c\u4e0d\u65ad\u8bfb\u5165\u4f59\u4e0b\u7684\u8f93\u5165\u7b26\u53f7</li> <li>\u53d1\u73b0\u6700\u957f\u7684\u3001\u4e0e\u67d0\u4e2a\u6a21\u5f0f\u5339\u914d\u7684\u8f93\u5165\u524d\u7f00\u65f6<ul> <li>\u8c03\u7528\u76f8\u5e94\u7684\u52a8\u4f5c\uff0c\u8be5\u52a8\u4f5c\u8fdb\u884c\u76f8\u5173\u5904\u7406</li> <li>\u4e4b\u540e\u8bcd\u6cd5\u5206\u6790\u5668\u7ee7\u7eed\u5bfb\u627e\u5176\u5b83\u8bcd\u7d20</li> </ul> </li> </ul> <p>\u5728\u8fd9\u79cd\u65b9\u5f0f\u4e0b\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u51b2\u7a81\uff1a\u591a\u4e2a\u8f93\u5165\u524d\u7f00\u4e0e\u67d0\u4e2a\u6a21\u5f0f\u76f8\u5339\u914d\uff0c\u6216\u8005\u4e00\u4e2a\u524d\u7f00\u4e0e\u591a\u4e2a\u6a21\u5f0f\u76f8\u5339\u914d\u3002\u5e38\u7528\u7684\u89e3\u51b3\u65b9\u6cd5\u6709\uff1a</p> <ul> <li>\u6700\u957f\u5339\u914d\uff08Longest match\uff09\uff1a\u9009\u62e9\u6700\u957f\u7684\u5339\u914d\u524d\u7f00<ul> <li>\u5982 <code>&lt;=</code> \u88ab\u5f53\u4f5c\u4e00\u4e2a Token\uff0c\u800c\u4e0d\u662f <code>&lt;</code> \u548c <code>=</code></li> </ul> </li> <li>\u4f18\u5148\u7ea7\uff08Rule Priority\uff09\uff1a\u6700\u957f\u524d\u7f00\u4e0e\u591a\u4e2a\u6a21\u5f0f\u5339\u914d\u65f6\uff0c\u9009\u62e9\u5217\u5728\u524d\u9762\u7684\u6a21\u5f0f<ul> <li>\u5982 <code>R = Whitespace | 'new' | Integer | Identifier</code></li> <li>\u5bf9\u4e8e <code>new foo</code>\uff0c<code>new</code> \u4f1a\u88ab\u8bc6\u522b\u4e3a\u5199\u5728\u524d\u9762\u7684\u6a21\u5f0f <code>'new'</code>\uff0c\u800c\u4e0d\u662f <code>Identifier</code></li> </ul> </li> </ul>"}]}